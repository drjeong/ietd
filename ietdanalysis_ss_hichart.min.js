const MARGINAL_TIMESTAMP=24*60*60*1e3;let chartLoading=2;let syncing=false;function isObject(obj){return obj&&typeof obj==="object"}function createHighlight_in_Highcharts(chart,fromtime,totime){const xAxis=chart.xAxis[0],yAxis=chart.yAxis[0],xAxisPos1=xAxis.toPixels(fromtime),xAxisPos2=xAxis.toPixels(totime),yAxisPos1=yAxis.toPixels(yAxis.dataMax),yAxisPos2=yAxis.toPixels(yAxis.dataMin),width=xAxisPos2-xAxisPos1,height=yAxisPos2-yAxisPos1;if(chart.highlight_rectangles==undefined)chart.highlight_rectangles=[];const rect=chart.renderer.rect(xAxisPos1,yAxisPos1,width,height,0).attr({"stroke-width":1,stroke:"red",fill:"rgba(255, 0, 0, 0.1)",zIndex:-1}).add();chart.highlight_rectangles.push({fromtime:fromtime,totime:totime,rect:rect})}function processChartAsync(chartId,operation){return new Promise(resolve=>{setTimeout(()=>{const chart=Highcharts.charts.find(c=>c.renderTo.id===chartId);if(chart){operation(chart)}resolve()},0)})}async function addHighlights_in_Highcharts(fromtime,totime){try{const chartIds=["chart_hpcp_hourlydata","chart_hpcp_ietd_sum","chart_hpcp_ietd_avg"];await Promise.all(chartIds.map(chartId=>processChartAsync(chartId,chart=>createHighlight_in_Highcharts(chart,fromtime,totime))));return true}catch(error){console.error("Error adding highlights:",error);return false}}async function removeHighlights_in_allHighcharts(){try{const chartIds=["chart_hpcp_hourlydata","chart_hpcp_ietd_sum","chart_hpcp_ietd_avg"];await Promise.all(chartIds.map(chartId=>processChartAsync(chartId,chart=>removeHighlights_in_Highchart(chart))));return true}catch(error){console.error("Error removing highlights:",error);return false}}function removeHighlights_in_Highchart(chart){if(!objectIsEmpty(chart.highlight_rectangles)){if(chart.highlight_rectangles){chart.highlight_rectangles.forEach(function(obj){obj.rect.destroy()});chart.highlight_rectangles=[]}}}function redrawHighlights_in_Highchart(chart){if(!objectIsEmpty(chart.highlight_rectangles)){if(chart.highlight_rectangles){chart.highlight_rectangles.forEach(function(obj){const xAxis=chart.xAxis[0],yAxis=chart.yAxis[0],xAxisPos1=xAxis.toPixels(obj.fromtime),xAxisPos2=xAxis.toPixels(obj.totime),yAxisPos1=yAxis.toPixels(yAxis.dataMax),yAxisPos2=yAxis.toPixels(yAxis.dataMin),newWidth=xAxisPos2-xAxisPos1,newHeight=yAxisPos2-yAxisPos1;obj.rect.attr({x:xAxisPos1,y:yAxisPos1,width:newWidth,height:newHeight})})}}}function redrawHighlights_in_allHighcharts(){redrawHighlights_in_Highchart(Highcharts.charts.find(c=>c.renderTo.id=="chart_hpcp_hourlydata"));redrawHighlights_in_Highchart(Highcharts.charts.find(c=>c.renderTo.id=="chart_hpcp_ietd_sum"));redrawHighlights_in_Highchart(Highcharts.charts.find(c=>c.renderTo.id=="chart_hpcp_ietd_avg"))}function objectIsEmpty(obj){if(obj==undefined)return false;return Object.keys(obj).length===0&&obj.constructor===Object}function HichartZooming(begintime,endtime){const chart=Highcharts.charts.find(c=>c&&c.series&&c.series.some(series=>series.name&&(series.name.includes("HPCP")||series.name.includes("Precipitation"))));if(!chart){console.warn("Precipitation chart not found");return}if(begintime==null&&endtime==null){chart.xAxis[0].setExtremes(null,null)}else{chart.xAxis[0].setExtremes(begintime-MARGINAL_TIMESTAMP,endtime+MARGINAL_TIMESTAMP)}}async function syncZoom(chartClassName,e){syncing=true;try{const syncPromises=[];$(Highcharts.charts).each(function(i,chart){if(chart!=undefined){if(!chart.container.classList.contains(chartClassName)){const syncPromise=new Promise(resolve=>{let min=e.min===null?e.dataMin:e.min;let max=e.min===null?e.dataMax:e.max;if(!isObject(chart.resetZoomButton)){chart.showResetZoom()}setTimeout(()=>{chart.xAxis[0].setExtremes(min,max);resolve()},0)});syncPromises.push(syncPromise)}}});await Promise.all(syncPromises)}finally{syncing=false}}function removeAllHighCharts(){if(Highcharts.charts.length==0)return;$(Highcharts.charts).each(function(i,chart){if(chart!==undefined){chart.destroy();chart=undefined}});Highcharts.charts.splice(0,Highcharts.charts.length)}function formatDateTime(date){const dateString=date.toISOString();const dateParts=dateString.split("T");const dateTime=dateParts[1].split(".")[0];const dateTimeParts=dateTime.split(":");const formatted=dateParts[0]+" "+dateTimeParts[0]+":"+dateTimeParts[1];return formatted}function getDatePeriod(series,tdate){let fdate=null;for(let i=0;i<series.length;i++){if(series[i].category===tdate){break}fdate=series[i].category}const toDate=formatDateTime(new Date(tdate));const fromDate=formatDateTime(new Date(fdate));return fromDate+" ~ "+toDate}function createChart(chartDivId,title,titlealign,subtitle,label,data,globalmax=null){(function(H){H.addEvent(H.Axis,"afterInit",function(){const logarithmic=this.logarithmic;if(logarithmic&&this.options.custom.allowNegativeLog){this.positiveValuesOnly=false;logarithmic.log2lin=num=>{const isNegative=num<0;let adjustedNum=Math.abs(num);if(adjustedNum<2){adjustedNum+=(2-adjustedNum)/2}const result=Math.log(adjustedNum)/Math.LN2;return isNegative?-result:result};logarithmic.lin2log=num=>{const isNegative=num<0;let result=Math.pow(2,Math.abs(num));if(result<2){result=2*(result-1)/(2-1)}return isNegative?-result:result}}})})(Highcharts);const chart=Highcharts.chart(chartDivId,{chart:{className:chartDivId,zoomType:"x",animation:true,panning:true,panKey:"shift",events:{load:function(event){chartLoading--;if(chartLoading===0)$("body").removeClass("loading");if(globalmax!=null){this.yAxis[0].setExtremes(0,globalmax)}else{let max=0;const chart=this;chart.series.forEach(series=>{series.points.forEach(point=>{max=point.y>max?point.y:max})});this.yAxis[0].setExtremes(0,max)}}},resetZoomButton:{theme:{style:{display:"block"}}}},title:{text:title,align:titlealign,y:0,floating:true,style:{fontSize:"12px"}},subtitle:{text:subtitle===""?"":subtitle},xAxis:{type:"datetime",events:{setExtremes:function(event){if(!syncing){if(g_ZoomingEnabled===false){const chart=this.chart;if(chart.zoomDebounceTimer){clearTimeout(chart.zoomDebounceTimer);chart.zoomDebounceTimer=null}showFullPageSpinner();processZoomAction(chart,event)}(async()=>{try{await syncZoom(chartDivId,event)}catch(error){console.error("Error syncing charts:",error);hideFullPageSpinner()}})()}}}},yAxis:{type:"logarithmic",custom:{allowNegativeLog:true},min:0,title:{text:"HPCP (inch)"}},legend:{enabled:false},plotOptions:{area:{fillColor:{linearGradient:{x1:0,y1:0,x2:0,y2:1},stops:[[0,Highcharts.getOptions().colors[0]],[1,Highcharts.color(Highcharts.getOptions().colors[0]).setOpacity(0).get("rgba")]]},marker:{radius:2},lineWidth:1,states:{hover:{lineWidth:1}},threshold:null}},tooltip:{formatter:function(tooltip){if(this.y===0){return false}const seriesData=this.series.data;const datePeriod=getDatePeriod(seriesData,this.x);const header=`<span style="color: blue;">${datePeriod}</span><br/>`;return header+tooltip.bodyFormatter(this.points).join("")},xDateFormat:"%Y-%m-%d  %H:%M:%S",shared:true,backgroundColor:"rgba(255, 255, 255, 1)",shadow:false,borderRadius:8,borderWidth:1,borderColor:"black"},series:[{type:"area",name:label,data:data}],credits:{enabled:false},zooming:{mouseWheel:true}});const initialMin=data[0][0];const initialMax=data[data.length-1][0];chart.container.addEventListener("click",function(e){if(e.target.textContent==="Reset zoom"){showFullPageSpinner();(async()=>{try{await new Promise(resolve=>{setTimeout(()=>{HichartZooming(null,null);resolve()},0)});await new Promise(resolve=>{setTimeout(()=>{Zoom_based_UpdateCharts(initialMin,initialMax);resolve()},0)})}catch(error){console.error("Error during reset zoom:",error)}finally{hideFullPageSpinner()}})()}})}