(function webpackUniversalModuleDefinition(root,factory){if(typeof exports==="object"&&typeof module==="object")module.exports=factory(require("highcharts"),require("highcharts")["Color"],require("highcharts")["SeriesRegistry"]);else if(typeof define==="function"&&define.amd)define("highcharts/modules/venn",[["highcharts/highcharts"],["highcharts/highcharts","Color"],["highcharts/highcharts","SeriesRegistry"]],factory);else if(typeof exports==="object")exports["highcharts/modules/venn"]=factory(require("highcharts"),require("highcharts")["Color"],require("highcharts")["SeriesRegistry"]);else root["Highcharts"]=factory(root["Highcharts"],root["Highcharts"]["Color"],root["Highcharts"]["SeriesRegistry"])})(this,function(__WEBPACK_EXTERNAL_MODULE__944__,__WEBPACK_EXTERNAL_MODULE__620__,__WEBPACK_EXTERNAL_MODULE__512__){return function(){"use strict";var __webpack_modules__={620:function(module){module.exports=__WEBPACK_EXTERNAL_MODULE__620__},512:function(module){module.exports=__WEBPACK_EXTERNAL_MODULE__512__},944:function(module){module.exports=__WEBPACK_EXTERNAL_MODULE__944__}};var __webpack_module_cache__={};function __webpack_require__(moduleId){var cachedModule=__webpack_module_cache__[moduleId];if(cachedModule!==undefined){return cachedModule.exports}var module=__webpack_module_cache__[moduleId]={exports:{}};__webpack_modules__[moduleId](module,module.exports,__webpack_require__);return module.exports}!function(){__webpack_require__.n=function(module){var getter=module&&module.__esModule?function(){return module["default"]}:function(){return module};__webpack_require__.d(getter,{a:getter});return getter}}();!function(){__webpack_require__.d=function(exports,definition){for(var key in definition){if(__webpack_require__.o(definition,key)&&!__webpack_require__.o(exports,key)){Object.defineProperty(exports,key,{enumerable:true,get:definition[key]})}}}}();!function(){__webpack_require__.o=function(obj,prop){return Object.prototype.hasOwnProperty.call(obj,prop)}}();var __webpack_exports__={};__webpack_require__.d(__webpack_exports__,{default:function(){return venn_src}});var highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_=__webpack_require__(944);var highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default=__webpack_require__.n(highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_);var highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_=__webpack_require__(620);var highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_default=__webpack_require__.n(highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_);var GeometryUtilities;(function(GeometryUtilities){function getCenterOfPoints(points){var sum=points.reduce(function(sum,point){sum.x+=point.x;sum.y+=point.y;return sum},{x:0,y:0});return{x:sum.x/points.length,y:sum.y/points.length}}GeometryUtilities.getCenterOfPoints=getCenterOfPoints;function getDistanceBetweenPoints(p1,p2){return Math.sqrt(Math.pow(p2.x-p1.x,2)+Math.pow(p2.y-p1.y,2))}GeometryUtilities.getDistanceBetweenPoints=getDistanceBetweenPoints;function getAngleBetweenPoints(p1,p2){return Math.atan2(p2.x-p1.x,p2.y-p1.y)}GeometryUtilities.getAngleBetweenPoints=getAngleBetweenPoints;function pointInPolygon(_a,polygon){var x=_a.x,y=_a.y;var len=polygon.length;var i,j,inside=false;for(i=0,j=len-1;i<len;j=i++){var _b=polygon[i],x1=_b[0],y1=_b[1],_c=polygon[j],x2=_c[0],y2=_c[1];if(y1>y!==y2>y&&x<(x2-x1)*(y-y1)/(y2-y1)+x1){inside=!inside}}return inside}GeometryUtilities.pointInPolygon=pointInPolygon})(GeometryUtilities||(GeometryUtilities={}));var Geometry_GeometryUtilities=GeometryUtilities;var getAngleBetweenPoints=Geometry_GeometryUtilities.getAngleBetweenPoints,getCenterOfPoints=Geometry_GeometryUtilities.getCenterOfPoints,getDistanceBetweenPoints=Geometry_GeometryUtilities.getDistanceBetweenPoints;var CircleUtilities;(function(CircleUtilities){function round(x,decimals){var a=Math.pow(10,decimals);return Math.round(x*a)/a}CircleUtilities.round=round;function getAreaOfCircle(r){if(r<=0){throw new Error("radius of circle must be a positive number.")}return Math.PI*r*r}CircleUtilities.getAreaOfCircle=getAreaOfCircle;function getCircularSegmentArea(r,h){return r*r*Math.acos(1-h/r)-(r-h)*Math.sqrt(h*(2*r-h))}CircleUtilities.getCircularSegmentArea=getCircularSegmentArea;function getOverlapBetweenCircles(r1,r2,d){var overlap=0;if(d<r1+r2){if(d<=Math.abs(r2-r1)){overlap=getAreaOfCircle(r1<r2?r1:r2)}else{var d1=(r1*r1-r2*r2+d*d)/(2*d),d2=d-d1;overlap=getCircularSegmentArea(r1,r1-d1)+getCircularSegmentArea(r2,r2-d2)}overlap=round(overlap,14)}return overlap}CircleUtilities.getOverlapBetweenCircles=getOverlapBetweenCircles;function getCircleCircleIntersection(c1,c2){var d=getDistanceBetweenPoints(c1,c2),r1=c1.r,r2=c2.r;var points=[];if(d<r1+r2&&d>Math.abs(r1-r2)){var r1Square=r1*r1,r2Square=r2*r2,x=(r1Square-r2Square+d*d)/(2*d),y=Math.sqrt(r1Square-x*x),x1=c1.x,x2=c2.x,y1=c1.y,y2=c2.y,x0=x1+x*(x2-x1)/d,y0=y1+x*(y2-y1)/d,rx=-(y2-y1)*(y/d),ry=-(x2-x1)*(y/d);points=[{x:round(x0+rx,14),y:round(y0-ry,14)},{x:round(x0-rx,14),y:round(y0+ry,14)}]}return points}CircleUtilities.getCircleCircleIntersection=getCircleCircleIntersection;function getCirclesIntersectionPoints(circles){return circles.reduce(function(points,c1,i,arr){var additional=arr.slice(i+1).reduce(function(points,c2,j){var indexes=[i,j+i+1];return points.concat(getCircleCircleIntersection(c1,c2).map(function(p){p.indexes=indexes;return p}))},[]);return points.concat(additional)},[])}CircleUtilities.getCirclesIntersectionPoints=getCirclesIntersectionPoints;function isCircle1CompletelyOverlappingCircle2(circle1,circle2){return getDistanceBetweenPoints(circle1,circle2)+circle2.r<circle1.r+1e-10}CircleUtilities.isCircle1CompletelyOverlappingCircle2=isCircle1CompletelyOverlappingCircle2;function isPointInsideCircle(point,circle){return getDistanceBetweenPoints(point,circle)<=circle.r+1e-10}CircleUtilities.isPointInsideCircle=isPointInsideCircle;function isPointInsideAllCircles(point,circles){return!circles.some(function(circle){return!isPointInsideCircle(point,circle)})}CircleUtilities.isPointInsideAllCircles=isPointInsideAllCircles;function isPointOutsideAllCircles(point,circles){return!circles.some(function(circle){return isPointInsideCircle(point,circle)})}CircleUtilities.isPointOutsideAllCircles=isPointOutsideAllCircles;function getCirclesIntersectionPolygon(circles){return getCirclesIntersectionPoints(circles).filter(function(p){return isPointInsideAllCircles(p,circles)})}CircleUtilities.getCirclesIntersectionPolygon=getCirclesIntersectionPolygon;function getAreaOfIntersectionBetweenCircles(circles){var intersectionPoints=getCirclesIntersectionPolygon(circles),result;if(intersectionPoints.length>1){var center_1=getCenterOfPoints(intersectionPoints);intersectionPoints=intersectionPoints.map(function(p){p.angle=getAngleBetweenPoints(center_1,p);return p}).sort(function(a,b){return b.angle-a.angle});var startPoint=intersectionPoints[intersectionPoints.length-1];var arcs=intersectionPoints.reduce(function(data,p1){var startPoint=data.startPoint,midPoint=getCenterOfPoints([startPoint,p1]);var arc=p1.indexes.filter(function(index){return startPoint.indexes.indexOf(index)>-1}).reduce(function(arc,index){var circle=circles[index],angle1=getAngleBetweenPoints(circle,p1),angle2=getAngleBetweenPoints(circle,startPoint),angleDiff=angle2-angle1+(angle2<angle1?2*Math.PI:0),angle=angle2-angleDiff/2;var width=getDistanceBetweenPoints(midPoint,{x:circle.x+circle.r*Math.sin(angle),y:circle.y+circle.r*Math.cos(angle)});var r=circle.r;if(width>r*2){width=r*2}if(!arc||arc.width>width){arc={r:r,largeArc:width>r?1:0,width:width,x:p1.x,y:p1.y}}return arc},null);if(arc){var r=arc.r;data.arcs.push(["A",r,r,0,arc.largeArc,1,arc.x,arc.y]);data.startPoint=p1}return data},{startPoint:startPoint,arcs:[]}).arcs;if(arcs.length===0){}else if(arcs.length===1){}else{arcs.unshift(["M",startPoint.x,startPoint.y]);result={center:center_1,d:arcs}}}return result}CircleUtilities.getAreaOfIntersectionBetweenCircles=getAreaOfIntersectionBetweenCircles})(CircleUtilities||(CircleUtilities={}));var Geometry_CircleUtilities=CircleUtilities;var __assign=undefined&&undefined.__assign||function(){__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};return __assign.apply(this,arguments)};function draw(point,params){var animatableAttribs=params.animatableAttribs,onComplete=params.onComplete,css=params.css,renderer=params.renderer;var animation=point.series&&point.series.chart.hasRendered?void 0:point.series&&point.series.options.animation;var graphic=point.graphic;params.attribs=__assign(__assign({},params.attribs),{class:point.getClassName()})||{};if(point.shouldDraw()){if(!graphic){if(params.shapeType==="text"){graphic=renderer.text()}else if(params.shapeType==="image"){graphic=renderer.image(params.imageUrl||"").attr(params.shapeArgs||{})}else{graphic=renderer[params.shapeType](params.shapeArgs||{})}point.graphic=graphic;graphic.add(params.group)}if(css){graphic.css(css)}graphic.attr(params.attribs).animate(animatableAttribs,params.isNew?false:animation,onComplete)}else if(graphic){var destroy_1=function(){point.graphic=graphic=graphic&&graphic.destroy();if(typeof onComplete==="function"){onComplete()}};if(Object.keys(animatableAttribs).length){graphic.animate(animatableAttribs,void 0,function(){return destroy_1()})}else{destroy_1()}}}var DrawPointUtilities={draw:draw};var Series_DrawPointUtilities=DrawPointUtilities;var highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_=__webpack_require__(512);var highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default=__webpack_require__.n(highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_);var __extends=undefined&&undefined.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p]};return extendStatics(d,b)};return function(d,b){extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}}();var ScatterPoint=highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default().seriesTypes.scatter.prototype.pointClass;var isNumber=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().isNumber;var VennPoint=function(_super){__extends(VennPoint,_super);function VennPoint(){return _super!==null&&_super.apply(this,arguments)||this}VennPoint.prototype.isValid=function(){return isNumber(this.value)};VennPoint.prototype.shouldDraw=function(){return!!this.shapeArgs};return VennPoint}(ScatterPoint);var Venn_VennPoint=VennPoint;var VennSeriesDefaults={borderColor:"#cccccc",borderDashStyle:"solid",borderWidth:1,brighten:0,clip:false,colorByPoint:true,dataLabels:{enabled:true,verticalAlign:"middle",formatter:function(){return this.point.name}},inactiveOtherPoints:true,marker:false,opacity:.75,showInLegend:false,legendType:"point",states:{hover:{opacity:1,borderColor:"#333333"},select:{color:"#cccccc",borderColor:"#000000",animation:false},inactive:{opacity:.075}},tooltip:{pointFormat:"{point.name}: {point.value}"},legendSymbol:"rectangle"};"";var Venn_VennSeriesDefaults=VennSeriesDefaults;var VennUtils_assign=undefined&&undefined.__assign||function(){VennUtils_assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};return VennUtils_assign.apply(this,arguments)};var getAreaOfCircle=Geometry_CircleUtilities.getAreaOfCircle,getCircleCircleIntersection=Geometry_CircleUtilities.getCircleCircleIntersection,getOverlapBetweenCirclesByDistance=Geometry_CircleUtilities.getOverlapBetweenCircles,isPointInsideAllCircles=Geometry_CircleUtilities.isPointInsideAllCircles,isPointInsideCircle=Geometry_CircleUtilities.isPointInsideCircle,isPointOutsideAllCircles=Geometry_CircleUtilities.isPointOutsideAllCircles;var VennUtils_getDistanceBetweenPoints=Geometry_GeometryUtilities.getDistanceBetweenPoints;var extend=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().extend,isArray=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().isArray,VennUtils_isNumber=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().isNumber,isObject=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().isObject,isString=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().isString;function addOverlapToSets(relations){var mapOfIdToProps={};relations.filter(function(relation){return relation.sets.length===2}).forEach(function(relation){relation.sets.forEach(function(set,i,arr){var _a;if(!isObject(mapOfIdToProps[set])){mapOfIdToProps[set]={totalOverlap:0,overlapping:{}}}mapOfIdToProps[set]={totalOverlap:(mapOfIdToProps[set].totalOverlap||0)+relation.value,overlapping:VennUtils_assign(VennUtils_assign({},mapOfIdToProps[set].overlapping||{}),(_a={},_a[arr[1-i]]=relation.value,_a))}})});relations.filter(isSet).forEach(function(set){var properties=mapOfIdToProps[set.sets[0]];extend(set,properties)});return relations}function bisect(f,a,b,tolerance,maxIterations){var fA=f(a),fB=f(b),nMax=maxIterations||100,tol=tolerance||1e-10;var delta=b-a,x,fX,n=1;if(a>=b){throw new Error("a must be smaller than b.")}else if(fA*fB>0){throw new Error("f(a) and f(b) must have opposite signs.")}if(fA===0){x=a}else if(fB===0){x=b}else{while(n++<=nMax&&fX!==0&&delta>tol){delta=(b-a)/2;x=a+delta;fX=f(x);if(fA*fX>0){a=x}else{b=x}}}return x}function getCentroid(simplex){var arr=simplex.slice(0,-1),length=arr.length,result=[],sum=function(data,point){data.sum+=point[data.i];return data};for(var i=0;i<length;i++){result[i]=arr.reduce(sum,{sum:0,i:i}).sum/length}return result}function getDistanceBetweenCirclesByOverlap(r1,r2,overlap){var maxDistance=r1+r2;var distance;if(overlap<=0){distance=maxDistance}else if(getAreaOfCircle(r1<r2?r1:r2)<=overlap){distance=0}else{distance=bisect(function(x){var actualOverlap=getOverlapBetweenCirclesByDistance(r1,r2,x);return overlap-actualOverlap},0,maxDistance)}return distance}function getLabelWidth(pos,internal,external){var radius=internal.reduce(function(min,circle){return Math.min(circle.r,min)},Infinity),filteredExternals=external.filter(function(circle){return!isPointInsideCircle(pos,circle)});var findDistance=function(maxDistance,direction){return bisect(function(x){var testPos={x:pos.x+direction*x,y:pos.y},isValid=isPointInsideAllCircles(testPos,internal)&&isPointOutsideAllCircles(testPos,filteredExternals);return-(maxDistance-x)+(isValid?0:Number.MAX_VALUE)},0,maxDistance)};return Math.min(findDistance(radius,-1),findDistance(radius,1))*2}function getMarginFromCircles(point,internal,external){var margin=internal.reduce(function(margin,circle){var m=circle.r-VennUtils_getDistanceBetweenPoints(point,circle);return m<=margin?m:margin},Number.MAX_VALUE);margin=external.reduce(function(margin,circle){var m=VennUtils_getDistanceBetweenPoints(point,circle)-circle.r;return m<=margin?m:margin},margin);return margin}function getOverlapBetweenCircles(circles){var overlap=0;if(circles.length===2){var circle1=circles[0];var circle2=circles[1];overlap=getOverlapBetweenCirclesByDistance(circle1.r,circle2.r,VennUtils_getDistanceBetweenPoints(circle1,circle2))}return overlap}function isSet(x){return isArray(x.sets)&&x.sets.length===1}function isValidRelation(x){var map={};return isObject(x)&&(VennUtils_isNumber(x.value)&&x.value>-1)&&(isArray(x.sets)&&x.sets.length>0)&&!x.sets.some(function(set){var invalid=false;if(!map[set]&&isString(set)){map[set]=true}else{invalid=true}return invalid})}function isValidSet(x){return isValidRelation(x)&&isSet(x)&&x.value>0}function layoutGreedyVenn(relations){var positionedSets=[],mapOfIdToCircles={};relations.filter(function(relation){return relation.sets.length===1}).forEach(function(relation){mapOfIdToCircles[relation.sets[0]]=relation.circle={x:Number.MAX_VALUE,y:Number.MAX_VALUE,r:Math.sqrt(relation.value/Math.PI)}});var positionSet=function(set,coordinates){var circle=set.circle;if(circle){circle.x=coordinates.x;circle.y=coordinates.y}positionedSets.push(set)};addOverlapToSets(relations);var sortedByOverlap=relations.filter(isSet).sort(sortByTotalOverlap);positionSet(sortedByOverlap.shift(),{x:0,y:0});var relationsWithTwoSets=relations.filter(function(x){return x.sets.length===2});var _loop_1=function(set){var circle=set.circle;if(!circle){return"continue"}var radius=circle.r,overlapping=set.overlapping;var bestPosition=positionedSets.reduce(function(best,positionedSet,i){var positionedCircle=positionedSet.circle;if(!positionedCircle||!overlapping){return best}var overlap=overlapping[positionedSet.sets[0]];var distance=getDistanceBetweenCirclesByOverlap(radius,positionedCircle.r,overlap);var possibleCoordinates=[{x:positionedCircle.x+distance,y:positionedCircle.y},{x:positionedCircle.x-distance,y:positionedCircle.y},{x:positionedCircle.x,y:positionedCircle.y+distance},{x:positionedCircle.x,y:positionedCircle.y-distance}];for(var _i=0,_a=positionedSets.slice(i+1);_i<_a.length;_i++){var positionedSet2=_a[_i];var positionedCircle2=positionedSet2.circle,overlap2=overlapping[positionedSet2.sets[0]];if(!positionedCircle2){continue}var distance2=getDistanceBetweenCirclesByOverlap(radius,positionedCircle2.r,overlap2);possibleCoordinates=possibleCoordinates.concat(getCircleCircleIntersection({x:positionedCircle.x,y:positionedCircle.y,r:distance},{x:positionedCircle2.x,y:positionedCircle2.y,r:distance2}))}for(var _b=0,possibleCoordinates_1=possibleCoordinates;_b<possibleCoordinates_1.length;_b++){var coordinates=possibleCoordinates_1[_b];circle.x=coordinates.x;circle.y=coordinates.y;var currentLoss=loss(mapOfIdToCircles,relationsWithTwoSets);if(currentLoss<best.loss){best.loss=currentLoss;best.coordinates=coordinates}}return best},{loss:Number.MAX_VALUE,coordinates:void 0});positionSet(set,bestPosition.coordinates)};for(var _i=0,sortedByOverlap_1=sortedByOverlap;_i<sortedByOverlap_1.length;_i++){var set=sortedByOverlap_1[_i];_loop_1(set)}return mapOfIdToCircles}function loss(mapOfIdToCircle,relations){var precision=1e11;return relations.reduce(function(totalLoss,relation){var loss=0;if(relation.sets.length>1){var wantedOverlap=relation.value;var actualOverlap=getOverlapBetweenCircles(relation.sets.map(function(set){return mapOfIdToCircle[set]}));var diff=wantedOverlap-actualOverlap;loss=Math.round(diff*diff*precision)/precision}return totalLoss+loss},0)}function nelderMead(fn,initial){var maxIterations=100,sortByFx=function(a,b){return a.fx-b.fx},pRef=1,pExp=2,pCon=-.5,pOCon=pCon*pRef,pShrink=.5;var weightedSum=function(weight1,v1,weight2,v2){return v1.map(function(x,i){return weight1*x+weight2*v2[i]})};var getSimplex=function(initial){var n=initial.length,simplex=new Array(n+1);simplex[0]=initial;simplex[0].fx=fn(initial);for(var i=0;i<n;++i){var point=initial.slice();point[i]=point[i]?point[i]*1.05:.001;point.fx=fn(point);simplex[i+1]=point}return simplex};var updateSimplex=function(simplex,point){point.fx=fn(point);simplex[simplex.length-1]=point;return simplex};var shrinkSimplex=function(simplex){var best=simplex[0];return simplex.map(function(point){var p=weightedSum(1-pShrink,best,pShrink,point);p.fx=fn(p);return p})};var getPoint=function(centroid,worst,a,b){var point=weightedSum(a,centroid,b,worst);point.fx=fn(point);return point};var simplex=getSimplex(initial);for(var i=0;i<maxIterations;i++){simplex.sort(sortByFx);var worst=simplex[simplex.length-1];var centroid=getCentroid(simplex);var reflected=getPoint(centroid,worst,1+pRef,-pRef);if(reflected.fx<simplex[0].fx){var expanded=getPoint(centroid,worst,1+pExp,-pExp);simplex=updateSimplex(simplex,expanded.fx<reflected.fx?expanded:reflected)}else if(reflected.fx>=simplex[simplex.length-2].fx){var contracted=void 0;if(reflected.fx>worst.fx){contracted=getPoint(centroid,worst,1+pCon,-pCon);if(contracted.fx<worst.fx){simplex=updateSimplex(simplex,contracted)}else{simplex=shrinkSimplex(simplex)}}else{contracted=getPoint(centroid,worst,1-pOCon,pOCon);if(contracted.fx<reflected.fx){simplex=updateSimplex(simplex,contracted)}else{simplex=shrinkSimplex(simplex)}}}else{simplex=updateSimplex(simplex,reflected)}}return simplex[0]}function processVennData(data,splitter){var d=isArray(data)?data:[];var validSets=d.reduce(function(arr,x){if(x.sets&&isValidSet(x)&&arr.indexOf(x.sets[0])===-1){arr.push(x.sets[0])}return arr},[]).sort();var mapOfIdToRelation=d.reduce(function(mapOfIdToRelation,relation){if(relation.sets&&isValidRelation(relation)&&!relation.sets.some(function(set){return validSets.indexOf(set)===-1})){mapOfIdToRelation[relation.sets.sort().join(splitter)]={sets:relation.sets,value:relation.value||0}}return mapOfIdToRelation},{});validSets.reduce(function(combinations,set,i,arr){var remaining=arr.slice(i+1);remaining.forEach(function(set2){combinations.push(set+splitter+set2)});return combinations},[]).forEach(function(combination){if(!mapOfIdToRelation[combination]){var obj={sets:combination.split(splitter),value:0};mapOfIdToRelation[combination]=obj}});return Object.keys(mapOfIdToRelation).map(function(id){return mapOfIdToRelation[id]})}function sortByTotalOverlap(a,b){if(typeof b.totalOverlap!=="undefined"&&typeof a.totalOverlap!=="undefined"){return b.totalOverlap-a.totalOverlap}return NaN}var VennUtils={geometry:Geometry_GeometryUtilities,geometryCircles:Geometry_CircleUtilities,addOverlapToSets:addOverlapToSets,getCentroid:getCentroid,getDistanceBetweenCirclesByOverlap:getDistanceBetweenCirclesByOverlap,getLabelWidth:getLabelWidth,getMarginFromCircles:getMarginFromCircles,isSet:isSet,layoutGreedyVenn:layoutGreedyVenn,loss:loss,nelderMead:nelderMead,processVennData:processVennData,sortByTotalOverlap:sortByTotalOverlap};var Venn_VennUtils=VennUtils;var VennSeries_extends=undefined&&undefined.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p]};return extendStatics(d,b)};return function(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}}();var animObject=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().animObject;var color=highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_default().parse;var getAreaOfIntersectionBetweenCircles=Geometry_CircleUtilities.getAreaOfIntersectionBetweenCircles,getCirclesIntersectionPolygon=Geometry_CircleUtilities.getCirclesIntersectionPolygon,isCircle1CompletelyOverlappingCircle2=Geometry_CircleUtilities.isCircle1CompletelyOverlappingCircle2,VennSeries_isPointInsideAllCircles=Geometry_CircleUtilities.isPointInsideAllCircles,VennSeries_isPointOutsideAllCircles=Geometry_CircleUtilities.isPointOutsideAllCircles;var VennSeries_getCenterOfPoints=Geometry_GeometryUtilities.getCenterOfPoints;var ScatterSeries=highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default().seriesTypes.scatter;var addEvent=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().addEvent,VennSeries_extend=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().extend,VennSeries_isArray=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().isArray,VennSeries_isNumber=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().isNumber,VennSeries_isObject=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().isObject,merge=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().merge;var VennSeries=function(_super){VennSeries_extends(VennSeries,_super);function VennSeries(){return _super!==null&&_super.apply(this,arguments)||this}VennSeries.getLabelPosition=function(internal,external){var best=internal.reduce(function(best,circle){var d=circle.r/2;return[{x:circle.x,y:circle.y},{x:circle.x+d,y:circle.y},{x:circle.x-d,y:circle.y},{x:circle.x,y:circle.y+d},{x:circle.x,y:circle.y-d}].reduce(function(best,point){var margin=Venn_VennUtils.getMarginFromCircles(point,internal,external);if(best.margin<margin){best.point=point;best.margin=margin}return best},best)},{point:void 0,margin:-Number.MAX_VALUE}).point;var optimal=Venn_VennUtils.nelderMead(function(p){return-Venn_VennUtils.getMarginFromCircles({x:p[0],y:p[1]},internal,external)},[best.x,best.y]);best={x:optimal[0],y:optimal[1]};if(!(VennSeries_isPointInsideAllCircles(best,internal)&&VennSeries_isPointOutsideAllCircles(best,external))){if(internal.length>1){best=VennSeries_getCenterOfPoints(getCirclesIntersectionPolygon(internal))}else{best={x:internal[0].x,y:internal[0].y}}}return best};VennSeries.getLabelValues=function(relation,setRelations){var sets=relation.sets;var data=setRelations.reduce(function(data,set){var isInternal=sets.indexOf(set.sets[0])>-1;var property=isInternal?"internal":"external";if(set.circle){data[property].push(set.circle)}return data},{internal:[],external:[]});data.external=data.external.filter(function(externalCircle){return data.internal.some(function(internalCircle){return!isCircle1CompletelyOverlappingCircle2(externalCircle,internalCircle)})});var position=VennSeries.getLabelPosition(data.internal,data.external);var width=Venn_VennUtils.getLabelWidth(position,data.internal,data.external);return{position:position,width:width}};VennSeries.layout=function(relations){var mapOfIdToShape={};var mapOfIdToLabelValues={};if(relations.length>0){var mapOfIdToCircles_1=Venn_VennUtils.layoutGreedyVenn(relations);var setRelations=relations.filter(Venn_VennUtils.isSet);for(var _i=0,relations_1=relations;_i<relations_1.length;_i++){var relation=relations_1[_i];var sets=relation.sets;var id=sets.join();var shape=Venn_VennUtils.isSet(relation)?mapOfIdToCircles_1[id]:getAreaOfIntersectionBetweenCircles(sets.map(function(set){return mapOfIdToCircles_1[set]}));if(shape){mapOfIdToShape[id]=shape;mapOfIdToLabelValues[id]=VennSeries.getLabelValues(relation,setRelations)}}}return{mapOfIdToShape:mapOfIdToShape,mapOfIdToLabelValues:mapOfIdToLabelValues}};VennSeries.getScale=function(targetWidth,targetHeight,field){var height=field.bottom-field.top,width=field.right-field.left,scaleX=width>0?1/width*targetWidth:1,scaleY=height>0?1/height*targetHeight:1,adjustX=(field.right+field.left)/2,adjustY=(field.top+field.bottom)/2,scale=Math.min(scaleX,scaleY);return{scale:scale,centerX:targetWidth/2-adjustX*scale,centerY:targetHeight/2-adjustY*scale}};VennSeries.updateFieldBoundaries=function(field,circle){var left=circle.x-circle.r,right=circle.x+circle.r,bottom=circle.y+circle.r,top=circle.y-circle.r;if(!VennSeries_isNumber(field.left)||field.left>left){field.left=left}if(!VennSeries_isNumber(field.right)||field.right<right){field.right=right}if(!VennSeries_isNumber(field.top)||field.top>top){field.top=top}if(!VennSeries_isNumber(field.bottom)||field.bottom<bottom){field.bottom=bottom}return field};VennSeries.prototype.animate=function(init){if(!init){var series=this,animOptions=animObject(series.options.animation);var _loop_1=function(point){var args=point.shapeArgs;if(point.graphic&&args){var attr={},animate={};if(args.d){attr.opacity=.001}else{attr.r=0;animate.r=args.r}point.graphic.attr(attr).animate(animate,animOptions);if(args.d){setTimeout(function(){if(point&&point.graphic){point.graphic.animate({opacity:1})}},animOptions.duration)}}};for(var _i=0,_a=series.points;_i<_a.length;_i++){var point=_a[_i];_loop_1(point)}}};VennSeries.prototype.drawPoints=function(){var series=this,chart=series.chart,group=series.group,points=series.points||[],renderer=chart.renderer;for(var _i=0,points_1=points;_i<points_1.length;_i++){var point=points_1[_i];var attribs={zIndex:VennSeries_isArray(point.sets)?point.sets.length:0},shapeArgs=point.shapeArgs;if(!chart.styledMode){VennSeries_extend(attribs,series.pointAttribs(point,point.state))}Series_DrawPointUtilities.draw(point,{isNew:!point.graphic,animatableAttribs:shapeArgs,attribs:attribs,group:group,renderer:renderer,shapeType:shapeArgs&&shapeArgs.d?"path":"circle"})}};VennSeries.prototype.init=function(){ScatterSeries.prototype.init.apply(this,arguments);delete this.opacity};VennSeries.prototype.pointAttribs=function(point,state){var series=this,seriesOptions=series.options||{},pointOptions=point&&point.options||{},stateOptions=state&&seriesOptions.states[state]||{},options=merge(seriesOptions,{color:point&&point.color},pointOptions,stateOptions);return{fill:color(options.color).brighten(options.brightness).get(),opacity:options.opacity,stroke:options.borderColor,"stroke-width":options.borderWidth,dashstyle:options.borderDashStyle}};VennSeries.prototype.translate=function(){var chart=this.chart;this.dataTable.modified=this.dataTable;this.generatePoints();var relations=Venn_VennUtils.processVennData(this.options.data,VennSeries.splitter);var _a=VennSeries.layout(relations),mapOfIdToShape=_a.mapOfIdToShape,mapOfIdToLabelValues=_a.mapOfIdToLabelValues;var field=Object.keys(mapOfIdToShape).filter(function(key){var shape=mapOfIdToShape[key];return shape&&VennSeries_isNumber(shape.r)}).reduce(function(field,key){return VennSeries.updateFieldBoundaries(field,mapOfIdToShape[key])},{top:0,bottom:0,left:0,right:0}),scaling=VennSeries.getScale(chart.plotWidth,chart.plotHeight,field),scale=scaling.scale,centerX=scaling.centerX,centerY=scaling.centerY;for(var _i=0,_b=this.points;_i<_b.length;_i++){var point=_b[_i];var sets=VennSeries_isArray(point.sets)?point.sets:[],id=sets.join(),shape=mapOfIdToShape[id],dataLabelValues=mapOfIdToLabelValues[id]||{},dlOptions=point.options&&point.options.dataLabels;var shapeArgs=void 0,dataLabelWidth=dataLabelValues.width,dataLabelPosition=dataLabelValues.position;if(shape){if(shape.r){shapeArgs={x:centerX+shape.x*scale,y:centerY+shape.y*scale,r:shape.r*scale}}else if(shape.d){var d=shape.d;d.forEach(function(seg){if(seg[0]==="M"){seg[1]=centerX+seg[1]*scale;seg[2]=centerY+seg[2]*scale}else if(seg[0]==="A"){seg[1]=seg[1]*scale;seg[2]=seg[2]*scale;seg[6]=centerX+seg[6]*scale;seg[7]=centerY+seg[7]*scale}});shapeArgs={d:d}}if(dataLabelPosition){dataLabelPosition.x=centerX+dataLabelPosition.x*scale;dataLabelPosition.y=centerY+dataLabelPosition.y*scale}else{dataLabelPosition={}}if(VennSeries_isNumber(dataLabelWidth)){dataLabelWidth=Math.round(dataLabelWidth*scale)}}point.shapeArgs=shapeArgs;if(dataLabelPosition&&shapeArgs){point.plotX=dataLabelPosition.x;point.plotY=dataLabelPosition.y}if(dataLabelWidth&&shapeArgs){point.dlOptions=merge(true,{style:{width:dataLabelWidth}},VennSeries_isObject(dlOptions,true)?dlOptions:void 0)}point.name=point.options.name||sets.join("∩")}};VennSeries.splitter="highcharts-split";VennSeries.defaultOptions=merge(ScatterSeries.defaultOptions,Venn_VennSeriesDefaults);return VennSeries}(ScatterSeries);VennSeries_extend(VennSeries.prototype,{axisTypes:[],directTouch:true,isCartesian:false,pointArrayMap:["value"],pointClass:Venn_VennPoint,utils:Venn_VennUtils});addEvent(VennSeries,"afterSetOptions",function(e){var options=e.options,states=options.states||{};if(this.is("venn")){for(var _i=0,_a=Object.keys(states);_i<_a.length;_i++){var state=_a[_i];states[state].halo=false}}});highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default().registerSeriesType("venn",VennSeries);var Venn_VennSeries=null&&VennSeries;var venn_src=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();__webpack_exports__=__webpack_exports__["default"];return __webpack_exports__}()});