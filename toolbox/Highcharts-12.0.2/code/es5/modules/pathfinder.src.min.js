(function webpackUniversalModuleDefinition(root,factory){if(typeof exports==="object"&&typeof module==="object")module.exports=factory(require("highcharts"),require("highcharts")["Point"]);else if(typeof define==="function"&&define.amd)define("highcharts/modules/pathfinder",[["highcharts/highcharts"],["highcharts/highcharts","Point"]],factory);else if(typeof exports==="object")exports["highcharts/modules/pathfinder"]=factory(require("highcharts"),require("highcharts")["Point"]);else root["Highcharts"]=factory(root["Highcharts"],root["Highcharts"]["Point"])})(this,function(__WEBPACK_EXTERNAL_MODULE__944__,__WEBPACK_EXTERNAL_MODULE__260__){return function(){"use strict";var __webpack_modules__={260:function(module){module.exports=__WEBPACK_EXTERNAL_MODULE__260__},944:function(module){module.exports=__WEBPACK_EXTERNAL_MODULE__944__}};var __webpack_module_cache__={};function __webpack_require__(moduleId){var cachedModule=__webpack_module_cache__[moduleId];if(cachedModule!==undefined){return cachedModule.exports}var module=__webpack_module_cache__[moduleId]={exports:{}};__webpack_modules__[moduleId](module,module.exports,__webpack_require__);return module.exports}!function(){__webpack_require__.n=function(module){var getter=module&&module.__esModule?function(){return module["default"]}:function(){return module};__webpack_require__.d(getter,{a:getter});return getter}}();!function(){__webpack_require__.d=function(exports,definition){for(var key in definition){if(__webpack_require__.o(definition,key)&&!__webpack_require__.o(exports,key)){Object.defineProperty(exports,key,{enumerable:true,get:definition[key]})}}}}();!function(){__webpack_require__.o=function(obj,prop){return Object.prototype.hasOwnProperty.call(obj,prop)}}();var __webpack_exports__={};__webpack_require__.d(__webpack_exports__,{default:function(){return pathfinder_src}});var highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_=__webpack_require__(944);var highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default=__webpack_require__.n(highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_);var defined=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().defined,error=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().error,merge=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().merge,objectEach=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().objectEach;var deg2rad=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().deg2rad,max=Math.max,min=Math.min;var Connection=function(){function Connection(from,to,options){this.init(from,to,options)}Connection.prototype.init=function(from,to,options){this.fromPoint=from;this.toPoint=to;this.options=options;this.chart=from.series.chart;this.pathfinder=this.chart.pathfinder};Connection.prototype.renderPath=function(path,attribs){var connection=this,chart=this.chart,styledMode=chart.styledMode,pathfinder=this.pathfinder,anim={};var pathGraphic=connection.graphics&&connection.graphics.path;if(!pathfinder.group){pathfinder.group=chart.renderer.g().addClass("highcharts-pathfinder-group").attr({zIndex:-1}).add(chart.seriesGroup)}pathfinder.group.translate(chart.plotLeft,chart.plotTop);if(!(pathGraphic&&pathGraphic.renderer)){pathGraphic=chart.renderer.path().add(pathfinder.group);if(!styledMode){pathGraphic.attr({opacity:0})}}pathGraphic.attr(attribs);anim.d=path;if(!styledMode){anim.opacity=1}pathGraphic.animate(anim);this.graphics=this.graphics||{};this.graphics.path=pathGraphic};Connection.prototype.addMarker=function(type,options,path){var connection=this,chart=connection.fromPoint.series.chart,pathfinder=chart.pathfinder,renderer=chart.renderer,point=type==="start"?connection.fromPoint:connection.toPoint,anchor=point.getPathfinderAnchorPoint(options);var markerVector,radians,rotation,box,width,height,pathVector,segment;if(!options.enabled){return}if(type==="start"){segment=path[1]}else{segment=path[path.length-2]}if(segment&&segment[0]==="M"||segment[0]==="L"){pathVector={x:segment[1],y:segment[2]};radians=point.getRadiansToVector(pathVector,anchor);markerVector=point.getMarkerVector(radians,options.radius,anchor);rotation=-radians/deg2rad;if(options.width&&options.height){width=options.width;height=options.height}else{width=height=options.radius*2}connection.graphics=connection.graphics||{};box={x:markerVector.x-width/2,y:markerVector.y-height/2,width:width,height:height,rotation:rotation,rotationOriginX:markerVector.x,rotationOriginY:markerVector.y};if(!connection.graphics[type]){connection.graphics[type]=renderer.symbol(options.symbol).addClass("highcharts-point-connecting-path-"+type+"-marker"+" highcharts-color-"+this.fromPoint.colorIndex).attr(box).add(pathfinder.group);if(!renderer.styledMode){connection.graphics[type].attr({fill:options.color||connection.fromPoint.color,stroke:options.lineColor,"stroke-width":options.lineWidth,opacity:0}).animate({opacity:1},point.series.options.animation)}}else{connection.graphics[type].animate(box)}}};Connection.prototype.getPath=function(options){var pathfinder=this.pathfinder,chart=this.chart,algorithm=pathfinder.algorithms[options.type];var chartObstacles=pathfinder.chartObstacles;if(typeof algorithm!=="function"){error('"'+options.type+'" is not a Pathfinder algorithm.');return{path:[],obstacles:[]}}if(algorithm.requiresObstacles&&!chartObstacles){chartObstacles=pathfinder.chartObstacles=pathfinder.getChartObstacles(options);chart.options.connectors.algorithmMargin=options.algorithmMargin;pathfinder.chartObstacleMetrics=pathfinder.getObstacleMetrics(chartObstacles)}return algorithm(this.fromPoint.getPathfinderAnchorPoint(options.startMarker),this.toPoint.getPathfinderAnchorPoint(options.endMarker),merge({chartObstacles:chartObstacles,lineObstacles:pathfinder.lineObstacles||[],obstacleMetrics:pathfinder.chartObstacleMetrics,hardBounds:{xMin:0,xMax:chart.plotWidth,yMin:0,yMax:chart.plotHeight},obstacleOptions:{margin:options.algorithmMargin},startDirectionX:pathfinder.getAlgorithmStartDirection(options.startMarker)},options))};Connection.prototype.render=function(){var connection=this,fromPoint=connection.fromPoint,series=fromPoint.series,chart=series.chart,pathfinder=chart.pathfinder,attribs={};var options=merge(chart.options.connectors,series.options.connectors,fromPoint.options.connectors,connection.options);if(!chart.styledMode){attribs.stroke=options.lineColor||fromPoint.color;attribs["stroke-width"]=options.lineWidth;if(options.dashStyle){attribs.dashstyle=options.dashStyle}}attribs["class"]="highcharts-point-connecting-path "+"highcharts-color-"+fromPoint.colorIndex;options=merge(attribs,options);if(!defined(options.marker.radius)){options.marker.radius=min(max(Math.ceil((options.algorithmMargin||8)/2)-1,1),5)}var pathResult=connection.getPath(options),path=pathResult.path;if(pathResult.obstacles){pathfinder.lineObstacles=pathfinder.lineObstacles||[];pathfinder.lineObstacles=pathfinder.lineObstacles.concat(pathResult.obstacles)}connection.renderPath(path,attribs);connection.addMarker("start",merge(options.marker,options.startMarker),path);connection.addMarker("end",merge(options.marker,options.endMarker),path)};Connection.prototype.destroy=function(){if(this.graphics){objectEach(this.graphics,function(val){val.destroy()});delete this.graphics}};return Connection}();var Gantt_Connection=Connection;"";var getLinkPath={default:getDefaultPath,straight:getStraightPath,curved:getCurvedPath};function getDefaultPath(pathParams){var x1=pathParams.x1,y1=pathParams.y1,x2=pathParams.x2,y2=pathParams.y2,_a=pathParams.width,width=_a===void 0?0:_a,_b=pathParams.inverted,inverted=_b===void 0?false:_b,radius=pathParams.radius,parentVisible=pathParams.parentVisible;var path=[["M",x1,y1],["L",x1,y1],["C",x1,y1,x1,y2,x1,y2],["L",x1,y2],["C",x1,y1,x1,y2,x1,y2],["L",x1,y2]];return parentVisible?applyRadius([["M",x1,y1],["L",x1+width*(inverted?-.5:.5),y1],["L",x1+width*(inverted?-.5:.5),y2],["L",x2,y2]],radius):path}function getStraightPath(pathParams){var x1=pathParams.x1,y1=pathParams.y1,x2=pathParams.x2,y2=pathParams.y2,_a=pathParams.width,width=_a===void 0?0:_a,_b=pathParams.inverted,inverted=_b===void 0?false:_b,parentVisible=pathParams.parentVisible;return parentVisible?[["M",x1,y1],["L",x1+width*(inverted?-1:1),y2],["L",x2,y2]]:[["M",x1,y1],["L",x1,y2],["L",x1,y2]]}function getCurvedPath(pathParams){var x1=pathParams.x1,y1=pathParams.y1,x2=pathParams.x2,y2=pathParams.y2,_a=pathParams.offset,offset=_a===void 0?0:_a,_b=pathParams.width,width=_b===void 0?0:_b,_c=pathParams.inverted,inverted=_c===void 0?false:_c,parentVisible=pathParams.parentVisible;return parentVisible?[["M",x1,y1],["C",x1+offset,y1,x1-offset+width*(inverted?-1:1),y2,x1+width*(inverted?-1:1),y2],["L",x2,y2]]:[["M",x1,y1],["C",x1,y1,x1,y2,x1,y2],["L",x2,y2]]}function applyRadius(path,r){var d=[];for(var i=0;i<path.length;i++){var x=path[i][1];var y=path[i][2];if(typeof x==="number"&&typeof y==="number"){if(i===0){d.push(["M",x,y])}else if(i===path.length-1){d.push(["L",x,y])}else if(r){var prevSeg=path[i-1];var nextSeg=path[i+1];if(prevSeg&&nextSeg){var x1=prevSeg[1],y1=prevSeg[2],x2=nextSeg[1],y2=nextSeg[2];if(typeof x1==="number"&&typeof x2==="number"&&typeof y1==="number"&&typeof y2==="number"&&x1!==x2&&y1!==y2){var directionX=x1<x2?1:-1,directionY=y1<y2?1:-1;d.push(["L",x-directionX*Math.min(Math.abs(x-x1),r),y-directionY*Math.min(Math.abs(y-y1),r)],["C",x,y,x,y,x+directionX*Math.min(Math.abs(x-x2),r),y+directionY*Math.min(Math.abs(y-y2),r)])}}}else{d.push(["L",x,y])}}}return d}var PathUtilities={applyRadius:applyRadius,getLinkPath:getLinkPath};var Series_PathUtilities=PathUtilities;var pick=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().pick;var PathfinderAlgorithms_min=Math.min,PathfinderAlgorithms_max=Math.max,abs=Math.abs;function findLastObstacleBefore(obstacles,xMin,startIx){var min=xMin-1e-7;var left=startIx||0,right=obstacles.length-1,cursor,cmp;while(left<=right){cursor=right+left>>1;cmp=min-obstacles[cursor].xMin;if(cmp>0){left=cursor+1}else if(cmp<0){right=cursor-1}else{return cursor}}return left>0?left-1:0}function pointWithinObstacle(obstacle,point){return point.x<=obstacle.xMax&&point.x>=obstacle.xMin&&point.y<=obstacle.yMax&&point.y>=obstacle.yMin}function findObstacleFromPoint(obstacles,point){var i=findLastObstacleBefore(obstacles,point.x+1)+1;while(i--){if(obstacles[i].xMax>=point.x&&pointWithinObstacle(obstacles[i],point)){return i}}return-1}function pathFromSegments(segments){var path=[];if(segments.length){path.push(["M",segments[0].start.x,segments[0].start.y]);for(var i=0;i<segments.length;++i){path.push(["L",segments[i].end.x,segments[i].end.y])}}return path}function limitObstacleToBounds(obstacle,bounds){obstacle.yMin=PathfinderAlgorithms_max(obstacle.yMin,bounds.yMin);obstacle.yMax=PathfinderAlgorithms_min(obstacle.yMax,bounds.yMax);obstacle.xMin=PathfinderAlgorithms_max(obstacle.xMin,bounds.xMin);obstacle.xMax=PathfinderAlgorithms_min(obstacle.xMax,bounds.xMax)}function straight(start,end){return{path:[["M",start.x,start.y],["L",end.x,end.y]],obstacles:[{start:start,end:end}]}}var simpleConnect=function(start,end,options){var segments=[],chartObstacles=options.chartObstacles,startObstacleIx=findObstacleFromPoint(chartObstacles,start),endObstacleIx=findObstacleFromPoint(chartObstacles,end);var endSegment,dir=pick(options.startDirectionX,abs(end.x-start.x)>abs(end.y-start.y))?"x":"y",startObstacle,endObstacle,waypoint,useMax,endPoint;function copyFromPoint(from,fromKey,to,toKey,offset){var point={x:from.x,y:from.y};point[fromKey]=to[toKey||fromKey]+(offset||0);return point}function getMeOut(obstacle,point,direction){var useMax=abs(point[direction]-obstacle[direction+"Min"])>abs(point[direction]-obstacle[direction+"Max"]);return copyFromPoint(point,direction,obstacle,direction+(useMax?"Max":"Min"),useMax?1:-1)}if(endObstacleIx>-1){endObstacle=chartObstacles[endObstacleIx];waypoint=getMeOut(endObstacle,end,dir);endSegment={start:waypoint,end:end};endPoint=waypoint}else{endPoint=end}if(startObstacleIx>-1){startObstacle=chartObstacles[startObstacleIx];waypoint=getMeOut(startObstacle,start,dir);segments.push({start:start,end:waypoint});if(waypoint[dir]>=start[dir]===waypoint[dir]>=endPoint[dir]){dir=dir==="y"?"x":"y";useMax=start[dir]<end[dir];segments.push({start:waypoint,end:copyFromPoint(waypoint,dir,startObstacle,dir+(useMax?"Max":"Min"),useMax?1:-1)});dir=dir==="y"?"x":"y"}}var prevWaypoint=segments.length?segments[segments.length-1].end:start;waypoint=copyFromPoint(prevWaypoint,dir,endPoint);segments.push({start:prevWaypoint,end:waypoint});dir=dir==="y"?"x":"y";var waypoint2=copyFromPoint(waypoint,dir,endPoint);segments.push({start:waypoint,end:waypoint2});segments.push(endSegment);var path=Series_PathUtilities.applyRadius(pathFromSegments(segments),options.radius);return{path:path,obstacles:segments}};simpleConnect.requiresObstacles=true;function fastAvoid(start,end,options){var dirIsX=pick(options.startDirectionX,abs(end.x-start.x)>abs(end.y-start.y)),dir=dirIsX?"x":"y",endSegments=[],metrics=options.obstacleMetrics,softMinX=PathfinderAlgorithms_min(start.x,end.x)-metrics.maxWidth-10,softMaxX=PathfinderAlgorithms_max(start.x,end.x)+metrics.maxWidth+10,softMinY=PathfinderAlgorithms_min(start.y,end.y)-metrics.maxHeight-10,softMaxY=PathfinderAlgorithms_max(start.y,end.y)+metrics.maxHeight+10;var segments,useMax,extractedEndPoint,forceObstacleBreak=false,chartObstacles=options.chartObstacles,endObstacleIx=findLastObstacleBefore(chartObstacles,softMaxX);var startObstacleIx=findLastObstacleBefore(chartObstacles,softMinX);function pivotPoint(fromPoint,toPoint,directionIsX){var searchDirection=fromPoint.x<toPoint.x?1:-1;var firstPoint,lastPoint,highestPoint,lowestPoint;if(fromPoint.x<toPoint.x){firstPoint=fromPoint;lastPoint=toPoint}else{firstPoint=toPoint;lastPoint=fromPoint}if(fromPoint.y<toPoint.y){lowestPoint=fromPoint;highestPoint=toPoint}else{lowestPoint=toPoint;highestPoint=fromPoint}var i=searchDirection<0?PathfinderAlgorithms_min(findLastObstacleBefore(chartObstacles,lastPoint.x),chartObstacles.length-1):0;while(chartObstacles[i]&&(searchDirection>0&&chartObstacles[i].xMin<=lastPoint.x||searchDirection<0&&chartObstacles[i].xMax>=firstPoint.x)){if(chartObstacles[i].xMin<=lastPoint.x&&chartObstacles[i].xMax>=firstPoint.x&&chartObstacles[i].yMin<=highestPoint.y&&chartObstacles[i].yMax>=lowestPoint.y){if(directionIsX){return{y:fromPoint.y,x:fromPoint.x<toPoint.x?chartObstacles[i].xMin-1:chartObstacles[i].xMax+1,obstacle:chartObstacles[i]}}return{x:fromPoint.x,y:fromPoint.y<toPoint.y?chartObstacles[i].yMin-1:chartObstacles[i].yMax+1,obstacle:chartObstacles[i]}}i+=searchDirection}return toPoint}function getDodgeDirection(obstacle,fromPoint,toPoint,dirIsX,bounds){var softBounds=bounds.soft,hardBounds=bounds.hard,dir=dirIsX?"x":"y",toPointMax={x:fromPoint.x,y:fromPoint.y},toPointMin={x:fromPoint.x,y:fromPoint.y},maxOutOfSoftBounds=obstacle[dir+"Max"]>=softBounds[dir+"Max"],minOutOfSoftBounds=obstacle[dir+"Min"]<=softBounds[dir+"Min"],maxOutOfHardBounds=obstacle[dir+"Max"]>=hardBounds[dir+"Max"],minOutOfHardBounds=obstacle[dir+"Min"]<=hardBounds[dir+"Min"],minDistance=abs(obstacle[dir+"Min"]-fromPoint[dir]),maxDistance=abs(obstacle[dir+"Max"]-fromPoint[dir]);var useMax=abs(minDistance-maxDistance)<10?fromPoint[dir]<toPoint[dir]:maxDistance<minDistance;toPointMin[dir]=obstacle[dir+"Min"];toPointMax[dir]=obstacle[dir+"Max"];var minPivot=pivotPoint(fromPoint,toPointMin,dirIsX)[dir]!==toPointMin[dir],maxPivot=pivotPoint(fromPoint,toPointMax,dirIsX)[dir]!==toPointMax[dir];useMax=minPivot?maxPivot?useMax:true:maxPivot?false:useMax;useMax=minOutOfSoftBounds?maxOutOfSoftBounds?useMax:true:maxOutOfSoftBounds?false:useMax;useMax=minOutOfHardBounds?maxOutOfHardBounds?useMax:true:maxOutOfHardBounds?false:useMax;return useMax}function clearPathTo(fromPoint,toPoint,dirIsX){if(fromPoint.x===toPoint.x&&fromPoint.y===toPoint.y){return[]}var dir=dirIsX?"x":"y",obstacleMargin=options.obstacleOptions.margin,bounds={soft:{xMin:softMinX,xMax:softMaxX,yMin:softMinY,yMax:softMaxY},hard:options.hardBounds};var pivot,segments,waypoint,waypointUseMax,envelopingObstacle,secondEnvelopingObstacle,envelopWaypoint;envelopingObstacle=findObstacleFromPoint(chartObstacles,fromPoint);if(envelopingObstacle>-1){envelopingObstacle=chartObstacles[envelopingObstacle];waypointUseMax=getDodgeDirection(envelopingObstacle,fromPoint,toPoint,dirIsX,bounds);limitObstacleToBounds(envelopingObstacle,options.hardBounds);envelopWaypoint=dirIsX?{y:fromPoint.y,x:envelopingObstacle[waypointUseMax?"xMax":"xMin"]+(waypointUseMax?1:-1)}:{x:fromPoint.x,y:envelopingObstacle[waypointUseMax?"yMax":"yMin"]+(waypointUseMax?1:-1)};secondEnvelopingObstacle=findObstacleFromPoint(chartObstacles,envelopWaypoint);if(secondEnvelopingObstacle>-1){secondEnvelopingObstacle=chartObstacles[secondEnvelopingObstacle];limitObstacleToBounds(secondEnvelopingObstacle,options.hardBounds);envelopWaypoint[dir]=waypointUseMax?PathfinderAlgorithms_max(envelopingObstacle[dir+"Max"]-obstacleMargin+1,(secondEnvelopingObstacle[dir+"Min"]+envelopingObstacle[dir+"Max"])/2):PathfinderAlgorithms_min(envelopingObstacle[dir+"Min"]+obstacleMargin-1,(secondEnvelopingObstacle[dir+"Max"]+envelopingObstacle[dir+"Min"])/2);if(fromPoint.x===envelopWaypoint.x&&fromPoint.y===envelopWaypoint.y){if(forceObstacleBreak){envelopWaypoint[dir]=waypointUseMax?PathfinderAlgorithms_max(envelopingObstacle[dir+"Max"],secondEnvelopingObstacle[dir+"Max"])+1:PathfinderAlgorithms_min(envelopingObstacle[dir+"Min"],secondEnvelopingObstacle[dir+"Min"])-1}forceObstacleBreak=!forceObstacleBreak}else{forceObstacleBreak=false}}segments=[{start:fromPoint,end:envelopWaypoint}]}else{pivot=pivotPoint(fromPoint,{x:dirIsX?toPoint.x:fromPoint.x,y:dirIsX?fromPoint.y:toPoint.y},dirIsX);segments=[{start:fromPoint,end:{x:pivot.x,y:pivot.y}}];if(pivot[dirIsX?"x":"y"]!==toPoint[dirIsX?"x":"y"]){waypointUseMax=getDodgeDirection(pivot.obstacle,pivot,toPoint,!dirIsX,bounds);limitObstacleToBounds(pivot.obstacle,options.hardBounds);waypoint={x:dirIsX?pivot.x:pivot.obstacle[waypointUseMax?"xMax":"xMin"]+(waypointUseMax?1:-1),y:dirIsX?pivot.obstacle[waypointUseMax?"yMax":"yMin"]+(waypointUseMax?1:-1):pivot.y};dirIsX=!dirIsX;segments=segments.concat(clearPathTo({x:pivot.x,y:pivot.y},waypoint,dirIsX))}}segments=segments.concat(clearPathTo(segments[segments.length-1].end,toPoint,!dirIsX));return segments}function extractFromObstacle(obstacle,point,goalPoint){var dirIsX=PathfinderAlgorithms_min(obstacle.xMax-point.x,point.x-obstacle.xMin)<PathfinderAlgorithms_min(obstacle.yMax-point.y,point.y-obstacle.yMin),bounds={soft:options.hardBounds,hard:options.hardBounds},useMax=getDodgeDirection(obstacle,point,goalPoint,dirIsX,bounds);return dirIsX?{y:point.y,x:obstacle[useMax?"xMax":"xMin"]+(useMax?1:-1)}:{x:point.x,y:obstacle[useMax?"yMax":"yMin"]+(useMax?1:-1)}}chartObstacles=chartObstacles.slice(startObstacleIx,endObstacleIx+1);if((endObstacleIx=findObstacleFromPoint(chartObstacles,end))>-1){extractedEndPoint=extractFromObstacle(chartObstacles[endObstacleIx],end,start);endSegments.push({end:end,start:extractedEndPoint});end=extractedEndPoint}while((endObstacleIx=findObstacleFromPoint(chartObstacles,end))>-1){useMax=end[dir]-start[dir]<0;extractedEndPoint={x:end.x,y:end.y};extractedEndPoint[dir]=chartObstacles[endObstacleIx][useMax?dir+"Max":dir+"Min"]+(useMax?1:-1);endSegments.push({end:end,start:extractedEndPoint});end=extractedEndPoint}segments=clearPathTo(start,end,dirIsX);segments=segments.concat(endSegments.reverse());return{path:pathFromSegments(segments),obstacles:segments}}fastAvoid.requiresObstacles=true;var algorithms={fastAvoid:fastAvoid,straight:straight,simpleConnect:simpleConnect};var PathfinderAlgorithms=algorithms;var connectorsDefaults={connectors:{type:"straight",radius:0,lineWidth:1,marker:{enabled:false,align:"center",verticalAlign:"middle",inside:false,lineWidth:1},startMarker:{symbol:"diamond"},endMarker:{symbol:"arrow-filled"}}};var ConnectorsDefaults=connectorsDefaults;"";var setOptions=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().setOptions;var PathfinderComposition_defined=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().defined,PathfinderComposition_error=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().error,PathfinderComposition_merge=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().merge;function getPointBB(point){var shapeArgs=point.shapeArgs;if(shapeArgs){return{xMin:shapeArgs.x||0,xMax:(shapeArgs.x||0)+(shapeArgs.width||0),yMin:shapeArgs.y||0,yMax:(shapeArgs.y||0)+(shapeArgs.height||0)}}var bb=point.graphic&&point.graphic.getBBox();return bb?{xMin:point.plotX-bb.width/2,xMax:point.plotX+bb.width/2,yMin:point.plotY-bb.height/2,yMax:point.plotY+bb.height/2}:null}function warnLegacy(chart){if(chart.options.pathfinder||chart.series.reduce(function(acc,series){if(series.options){PathfinderComposition_merge(true,series.options.connectors=series.options.connectors||{},series.options.pathfinder)}return acc||series.options&&series.options.pathfinder},false)){PathfinderComposition_merge(true,chart.options.connectors=chart.options.connectors||{},chart.options.pathfinder);PathfinderComposition_error("WARNING: Pathfinder options have been renamed. "+'Use "chart.connectors" or "series.connectors" instead.')}}var ConnectionComposition;(function(ConnectionComposition){function compose(ChartClass,PathfinderClass,PointClass){var pointProto=PointClass.prototype;if(!pointProto.getPathfinderAnchorPoint){ChartClass.prototype.callbacks.push(function(chart){var options=chart.options;if(options.connectors.enabled!==false){warnLegacy(chart);this.pathfinder=new PathfinderClass(this);this.pathfinder.update(true)}});pointProto.getMarkerVector=pointGetMarkerVector;pointProto.getPathfinderAnchorPoint=pointGetPathfinderAnchorPoint;pointProto.getRadiansToVector=pointGetRadiansToVector;setOptions(ConnectorsDefaults)}}ConnectionComposition.compose=compose;function pointGetPathfinderAnchorPoint(markerOptions){var bb=getPointBB(this);var x,y;switch(markerOptions.align){case"right":x="xMax";break;case"left":x="xMin"}switch(markerOptions.verticalAlign){case"top":y="yMin";break;case"bottom":y="yMax"}return{x:x?bb[x]:(bb.xMin+bb.xMax)/2,y:y?bb[y]:(bb.yMin+bb.yMax)/2}}function pointGetRadiansToVector(v1,v2){var box;if(!PathfinderComposition_defined(v2)){box=getPointBB(this);if(box){v2={x:(box.xMin+box.xMax)/2,y:(box.yMin+box.yMax)/2}}}return Math.atan2(v2.y-v1.y,v1.x-v2.x)}function pointGetMarkerVector(radians,markerRadius,anchor){var twoPI=Math.PI*2,bb=getPointBB(this),rectWidth=bb.xMax-bb.xMin,rectHeight=bb.yMax-bb.yMin,rAtan=Math.atan2(rectHeight,rectWidth),rectHalfWidth=rectWidth/2,rectHalfHeight=rectHeight/2,rectHorizontalCenter=bb.xMin+rectHalfWidth,rectVerticalCenter=bb.yMin+rectHalfHeight,edgePoint={x:rectHorizontalCenter,y:rectVerticalCenter};var theta=radians,tanTheta=1,leftOrRightRegion=false,xFactor=1,yFactor=1;while(theta<-Math.PI){theta+=twoPI}while(theta>Math.PI){theta-=twoPI}tanTheta=Math.tan(theta);if(theta>-rAtan&&theta<=rAtan){yFactor=-1;leftOrRightRegion=true}else if(theta>rAtan&&theta<=Math.PI-rAtan){yFactor=-1}else if(theta>Math.PI-rAtan||theta<=-(Math.PI-rAtan)){xFactor=-1;leftOrRightRegion=true}else{xFactor=-1}if(leftOrRightRegion){edgePoint.x+=xFactor*rectHalfWidth;edgePoint.y+=yFactor*rectHalfWidth*tanTheta}else{edgePoint.x+=xFactor*(rectHeight/(2*tanTheta));edgePoint.y+=yFactor*rectHalfHeight}if(anchor.x!==rectHorizontalCenter){edgePoint.x=anchor.x}if(anchor.y!==rectVerticalCenter){edgePoint.y=anchor.y}return{x:edgePoint.x+markerRadius*Math.cos(theta),y:edgePoint.y-markerRadius*Math.sin(theta)}}})(ConnectionComposition||(ConnectionComposition={}));var PathfinderComposition=ConnectionComposition;var highcharts_Point_commonjs_highcharts_Point_commonjs2_highcharts_Point_root_Highcharts_Point_=__webpack_require__(260);var highcharts_Point_commonjs_highcharts_Point_commonjs2_highcharts_Point_root_Highcharts_Point_default=__webpack_require__.n(highcharts_Point_commonjs_highcharts_Point_commonjs2_highcharts_Point_root_Highcharts_Point_);var addEvent=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().addEvent,Pathfinder_defined=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().defined,Pathfinder_pick=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().pick,splat=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().splat;var Pathfinder_max=Math.max,Pathfinder_min=Math.min;function Pathfinder_getPointBB(point){var shapeArgs=point.shapeArgs;if(shapeArgs){return{xMin:shapeArgs.x||0,xMax:(shapeArgs.x||0)+(shapeArgs.width||0),yMin:shapeArgs.y||0,yMax:(shapeArgs.y||0)+(shapeArgs.height||0)}}var bb=point.graphic&&point.graphic.getBBox();return bb?{xMin:point.plotX-bb.width/2,xMax:point.plotX+bb.width/2,yMin:point.plotY-bb.height/2,yMax:point.plotY+bb.height/2}:null}function calculateObstacleDistance(a,b,bbMargin){var margin=Pathfinder_pick(bbMargin,10),yOverlap=a.yMax+margin>b.yMin-margin&&a.yMin-margin<b.yMax+margin,xOverlap=a.xMax+margin>b.xMin-margin&&a.xMin-margin<b.xMax+margin,xDistance=yOverlap?a.xMin>b.xMax?a.xMin-b.xMax:b.xMin-a.xMax:Infinity,yDistance=xOverlap?a.yMin>b.yMax?a.yMin-b.yMax:b.yMin-a.yMax:Infinity;if(xOverlap&&yOverlap){return margin?calculateObstacleDistance(a,b,Math.floor(margin/2)):Infinity}return Pathfinder_min(xDistance,yDistance)}function calculateObstacleMargin(obstacles){var len=obstacles.length,distances=[];var onstacleDistance;for(var i=0;i<len;++i){for(var j=i+1;j<len;++j){onstacleDistance=calculateObstacleDistance(obstacles[i],obstacles[j]);if(onstacleDistance<80){distances.push(onstacleDistance)}}}distances.push(80);return Pathfinder_max(Math.floor(distances.sort(function(a,b){return a-b})[Math.floor(distances.length/10)]/2-1),1)}var Pathfinder=function(){function Pathfinder(chart){this.init(chart)}Pathfinder.compose=function(ChartClass,PointClass){PathfinderComposition.compose(ChartClass,Pathfinder,PointClass)};Pathfinder.prototype.init=function(chart){this.chart=chart;this.connections=[];addEvent(chart,"redraw",function(){this.pathfinder.update()})};Pathfinder.prototype.update=function(deferRender){var chart=this.chart,pathfinder=this,oldConnections=pathfinder.connections;pathfinder.connections=[];chart.series.forEach(function(series){if(series.visible&&!series.options.isInternal){series.points.forEach(function(point){var _a;var ganttPointOptions=point.options;if(ganttPointOptions&&ganttPointOptions.dependency){ganttPointOptions.connect=ganttPointOptions.dependency}var connects=((_a=point.options)===null||_a===void 0?void 0:_a.connect)?splat(point.options.connect):[];var to;if(point.visible&&point.isInside!==false){connects.forEach(function(connect){var toId=typeof connect==="string"?connect:connect.to;if(toId){to=chart.get(toId)}if(to instanceof highcharts_Point_commonjs_highcharts_Point_commonjs2_highcharts_Point_root_Highcharts_Point_default()&&to.series.visible&&to.visible&&to.isInside!==false){pathfinder.connections.push(new Gantt_Connection(point,to,typeof connect==="string"?{}:connect))}})}})}});for(var j=0,k=void 0,found=void 0,lenOld=oldConnections.length,lenNew=pathfinder.connections.length;j<lenOld;++j){found=false;var oldCon=oldConnections[j];for(k=0;k<lenNew;++k){var newCon=pathfinder.connections[k];if((oldCon.options&&oldCon.options.type)===(newCon.options&&newCon.options.type)&&oldCon.fromPoint===newCon.fromPoint&&oldCon.toPoint===newCon.toPoint){newCon.graphics=oldCon.graphics;found=true;break}}if(!found){oldCon.destroy()}}delete this.chartObstacles;delete this.lineObstacles;pathfinder.renderConnections(deferRender)};Pathfinder.prototype.renderConnections=function(deferRender){if(deferRender){this.chart.series.forEach(function(series){var render=function(){var pathfinder=series.chart.pathfinder,conns=pathfinder&&pathfinder.connections||[];conns.forEach(function(connection){if(connection.fromPoint&&connection.fromPoint.series===series){connection.render()}});if(series.pathfinderRemoveRenderEvent){series.pathfinderRemoveRenderEvent();delete series.pathfinderRemoveRenderEvent}};if(series.options.animation===false){render()}else{series.pathfinderRemoveRenderEvent=addEvent(series,"afterAnimate",render)}})}else{this.connections.forEach(function(connection){connection.render()})}};Pathfinder.prototype.getChartObstacles=function(options){var series=this.chart.series,margin=Pathfinder_pick(options.algorithmMargin,0);var obstacles=[],calculatedMargin;for(var i=0,sLen=series.length;i<sLen;++i){if(series[i].visible&&!series[i].options.isInternal){for(var j=0,pLen=series[i].points.length,bb=void 0,point=void 0;j<pLen;++j){point=series[i].points[j];if(point.visible){bb=Pathfinder_getPointBB(point);if(bb){obstacles.push({xMin:bb.xMin-margin,xMax:bb.xMax+margin,yMin:bb.yMin-margin,yMax:bb.yMax+margin})}}}}}obstacles=obstacles.sort(function(a,b){return a.xMin-b.xMin});if(!Pathfinder_defined(options.algorithmMargin)){calculatedMargin=options.algorithmMargin=calculateObstacleMargin(obstacles);obstacles.forEach(function(obstacle){obstacle.xMin-=calculatedMargin;obstacle.xMax+=calculatedMargin;obstacle.yMin-=calculatedMargin;obstacle.yMax+=calculatedMargin})}return obstacles};Pathfinder.prototype.getObstacleMetrics=function(obstacles){var maxWidth=0,maxHeight=0,width,height,i=obstacles.length;while(i--){width=obstacles[i].xMax-obstacles[i].xMin;height=obstacles[i].yMax-obstacles[i].yMin;if(maxWidth<width){maxWidth=width}if(maxHeight<height){maxHeight=height}}return{maxHeight:maxHeight,maxWidth:maxWidth}};Pathfinder.prototype.getAlgorithmStartDirection=function(markerOptions){var xCenter=markerOptions.align!=="left"&&markerOptions.align!=="right",yCenter=markerOptions.verticalAlign!=="top"&&markerOptions.verticalAlign!=="bottom";return xCenter?yCenter?void 0:false:yCenter?true:void 0};return Pathfinder}();Pathfinder.prototype.algorithms=PathfinderAlgorithms;var Gantt_Pathfinder=Pathfinder;"";function arrow(x,y,w,h){return[["M",x,y+h/2],["L",x+w,y],["L",x,y+h/2],["L",x+w,y+h]]}function arrowHalf(x,y,w,h){return arrow(x,y,w/2,h)}function compose(SVGRendererClass){var symbols=SVGRendererClass.prototype.symbols;symbols.arrow=arrow;symbols["arrow-filled"]=triangleLeft;symbols["arrow-filled-half"]=triangleLeftHalf;symbols["arrow-half"]=arrowHalf;symbols["triangle-left"]=triangleLeft;symbols["triangle-left-half"]=triangleLeftHalf}function triangleLeft(x,y,w,h){return[["M",x+w,y],["L",x,y+h/2],["L",x+w,y+h],["Z"]]}function triangleLeftHalf(x,y,w,h){return triangleLeft(x,y,w/2,h)}var ArrowSymbols={compose:compose};var Extensions_ArrowSymbols=ArrowSymbols;var G=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();G.Pathfinder=G.Pathfinder||Gantt_Pathfinder;Extensions_ArrowSymbols.compose(G.SVGRenderer);G.Pathfinder.compose(G.Chart,G.Point);var pathfinder_src=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();__webpack_exports__=__webpack_exports__["default"];return __webpack_exports__}()});