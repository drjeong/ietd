"use strict";import H from"../Core/Globals.js";import U from"../Core/Utilities.js";var deg2rad=H.deg2rad;var addEvent=U.addEvent,merge=U.merge,uniqueKey=U.uniqueKey,defined=U.defined,extend=U.extend;function setTextPath(path,textPathOptions){var _this=this;textPathOptions=merge(true,{enabled:true,attributes:{dy:-5,startOffset:"50%",textAnchor:"middle"}},textPathOptions);var url=this.renderer.url,textWrapper=this.text||this,textPath=textWrapper.textPath,attributes=textPathOptions.attributes,enabled=textPathOptions.enabled;path=path||textPath&&textPath.path;if(textPath){textPath.undo()}if(path&&enabled){var undo=addEvent(textWrapper,"afterModifyTree",function(e){if(path&&enabled){var textPathId=path.attr("id");if(!textPathId){path.attr("id",textPathId=uniqueKey())}var textAttribs={x:0,y:0};if(defined(attributes.dx)){textAttribs.dx=attributes.dx;delete attributes.dx}if(defined(attributes.dy)){textAttribs.dy=attributes.dy;delete attributes.dy}textWrapper.attr(textAttribs);_this.attr({transform:""});if(_this.box){_this.box=_this.box.destroy()}var children=e.nodes.slice(0);e.nodes.length=0;e.nodes[0]={tagName:"textPath",attributes:extend(attributes,{"text-anchor":attributes.textAnchor,href:"".concat(url,"#").concat(textPathId)}),children:children}}});textWrapper.textPath={path:path,undo:undo}}else{textWrapper.attr({dx:0,dy:0});delete textWrapper.textPath}if(this.added){textWrapper.textCache="";this.renderer.buildText(textWrapper)}return this}function setPolygon(event){var _a;var bBox=event.bBox,tp=(_a=this.element)===null||_a===void 0?void 0:_a.querySelector("textPath");if(tp){var polygon=[],_b=this.renderer.fontMetrics(this.element),b_1=_b.b,h=_b.h,descender_1=h-b_1,lineCleanerRegex=new RegExp("(<tspan>|"+'<tspan(?!\\sclass="highcharts-br")[^>]*>|'+"<\\/tspan>)","g"),lines=tp.innerHTML.replace(lineCleanerRegex,"").split(/<tspan class="highcharts-br"[^>]*>/),numOfLines=lines.length;var appendTopAndBottom=function(charIndex,positionOfChar){var x=positionOfChar.x,y=positionOfChar.y,rotation=(tp.getRotationOfChar(charIndex)-90)*deg2rad,cosRot=Math.cos(rotation),sinRot=Math.sin(rotation);return[[x-descender_1*cosRot,y-descender_1*sinRot],[x+b_1*cosRot,y+b_1*sinRot]]};for(var i=0,lineIndex=0;lineIndex<numOfLines;lineIndex++){var line=lines[lineIndex],lineLen=line.length;for(var lineCharIndex=0;lineCharIndex<lineLen;lineCharIndex+=5){try{var srcCharIndex=i+lineCharIndex+lineIndex,_c=appendTopAndBottom(srcCharIndex,tp.getStartPositionOfChar(srcCharIndex)),lower=_c[0],upper=_c[1];if(lineCharIndex===0){polygon.push(upper);polygon.push(lower)}else{if(lineIndex===0){polygon.unshift(upper)}if(lineIndex===numOfLines-1){polygon.push(lower)}}}catch(e){break}}i+=lineLen-1;try{var srcCharIndex=i+lineIndex,charPos=tp.getEndPositionOfChar(srcCharIndex),_d=appendTopAndBottom(srcCharIndex,charPos),lower=_d[0],upper=_d[1];polygon.unshift(upper);polygon.unshift(lower)}catch(e){break}}if(polygon.length){polygon.push(polygon[0].slice())}bBox.polygon=polygon}return bBox}function drawTextPath(event){var _a;var labelOptions=event.labelOptions,point=event.point,textPathOptions=labelOptions[point.formatPrefix+"TextPath"]||labelOptions.textPath;if(textPathOptions&&!labelOptions.useHTML){this.setTextPath(((_a=point.getDataLabelPath)===null||_a===void 0?void 0:_a.call(point,this))||point.graphic,textPathOptions);if(point.dataLabelPath&&!textPathOptions.enabled){point.dataLabelPath=point.dataLabelPath.destroy()}}}function compose(SVGElementClass){addEvent(SVGElementClass,"afterGetBBox",setPolygon);addEvent(SVGElementClass,"beforeAddingDataLabel",drawTextPath);var svgElementProto=SVGElementClass.prototype;if(!svgElementProto.setTextPath){svgElementProto.setTextPath=setTextPath}}var TextPath={compose:compose};export default TextPath;