"use strict";import DataGroupingAxisComposition from"./DataGroupingAxisComposition.js";import DataGroupingDefaults from"./DataGroupingDefaults.js";import DataGroupingSeriesComposition from"./DataGroupingSeriesComposition.js";import F from"../../Core/Templating.js";var format=F.format;import H from"../../Core/Globals.js";var composed=H.composed;import U from"../../Core/Utilities.js";var addEvent=U.addEvent,extend=U.extend,isNumber=U.isNumber,pick=U.pick,pushUnique=U.pushUnique;function compose(AxisClass,SeriesClass,TooltipClass){DataGroupingAxisComposition.compose(AxisClass);DataGroupingSeriesComposition.compose(SeriesClass);if(TooltipClass&&pushUnique(composed,"DataGrouping")){addEvent(TooltipClass,"headerFormatter",onTooltipHeaderFormatter)}}function onTooltipHeaderFormatter(e){var _a;var chart=this.chart,time=chart.time,point=e.point,series=point.series,options=series.options,tooltipOptions=series.tooltipOptions,dataGroupingOptions=options.dataGrouping,xAxis=series.xAxis;var xDateFormat=tooltipOptions.xDateFormat||"",xDateFormatEnd,currentDataGrouping,dateTimeLabelFormats,labelFormats,formattedKey,formatString=tooltipOptions[e.isFooter?"footerFormat":"headerFormat"];if(xAxis&&xAxis.options.type==="datetime"&&dataGroupingOptions&&isNumber(point.key)){currentDataGrouping=series.currentDataGrouping;dateTimeLabelFormats=dataGroupingOptions.dateTimeLabelFormats||DataGroupingDefaults.common.dateTimeLabelFormats;if(currentDataGrouping){labelFormats=dateTimeLabelFormats[currentDataGrouping.unitName];if(currentDataGrouping.count===1){xDateFormat=labelFormats[0]}else{xDateFormat=labelFormats[1];xDateFormatEnd=labelFormats[2]}}else if(!xDateFormat&&dateTimeLabelFormats&&xAxis.dateTime){xDateFormat=xAxis.dateTime.getXDateFormat(point.x,tooltipOptions.dateTimeLabelFormats)}var groupStart=pick((_a=series.groupMap)===null||_a===void 0?void 0:_a[point.index].groupStart,point.key),groupEnd=groupStart+((currentDataGrouping===null||currentDataGrouping===void 0?void 0:currentDataGrouping.totalRange)||0)-1;formattedKey=time.dateFormat(xDateFormat,groupStart);if(xDateFormatEnd){formattedKey+=time.dateFormat(xDateFormatEnd,groupEnd)}if(series.chart.styledMode){formatString=this.styledModeFormat(formatString)}e.text=format(formatString,{point:extend(point,{key:formattedKey}),series:series},chart);e.preventDefault()}}var DataGroupingComposition={compose:compose,groupData:DataGroupingSeriesComposition.groupData};export default DataGroupingComposition;"";"";