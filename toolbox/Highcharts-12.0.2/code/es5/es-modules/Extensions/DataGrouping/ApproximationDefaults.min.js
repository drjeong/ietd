"use strict";import ApproximationRegistry from"./ApproximationRegistry.js";import U from"../../Core/Utilities.js";var arrayMax=U.arrayMax,arrayMin=U.arrayMin,correctFloat=U.correctFloat,extend=U.extend,isNumber=U.isNumber;function average(arr){var len=arr.length;var ret=sum(arr);if(isNumber(ret)&&len){ret=correctFloat(ret/len)}return ret}function averages(){var ret=[];[].forEach.call(arguments,function(arr){ret.push(average(arr))});return typeof ret[0]==="undefined"?void 0:ret}function close(arr){return arr.length?arr[arr.length-1]:arr.hasNulls?null:void 0}function high(arr){return arr.length?arrayMax(arr):arr.hasNulls?null:void 0}function hlc(high,low,close){high=ApproximationRegistry.high(high);low=ApproximationRegistry.low(low);close=ApproximationRegistry.close(close);if(isNumber(high)||isNumber(low)||isNumber(close)){return[high,low,close]}}function low(arr){return arr.length?arrayMin(arr):arr.hasNulls?null:void 0}function ohlc(open,high,low,close){open=ApproximationRegistry.open(open);high=ApproximationRegistry.high(high);low=ApproximationRegistry.low(low);close=ApproximationRegistry.close(close);if(isNumber(open)||isNumber(high)||isNumber(low)||isNumber(close)){return[open,high,low,close]}}function open(arr){return arr.length?arr[0]:arr.hasNulls?null:void 0}function range(low,high){low=ApproximationRegistry.low(low);high=ApproximationRegistry.high(high);if(isNumber(low)||isNumber(high)){return[low,high]}if(low===null&&high===null){return null}}function sum(arr){var len=arr.length,ret;if(!len&&arr.hasNulls){ret=null}else if(len){ret=0;while(len--){ret+=arr[len]}}return ret}var ApproximationDefaults={average:average,averages:averages,close:close,high:high,hlc:hlc,low:low,ohlc:ohlc,open:open,range:range,sum:sum};extend(ApproximationRegistry,ApproximationDefaults);export default ApproximationDefaults;