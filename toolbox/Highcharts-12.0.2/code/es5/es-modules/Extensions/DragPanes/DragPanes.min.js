"use strict";import AxisResizer from"./AxisResizer.js";import D from"../../Core/Defaults.js";var defaultOptions=D.defaultOptions;import U from"../../Core/Utilities.js";var addEvent=U.addEvent,merge=U.merge,wrap=U.wrap;function compose(AxisClass,PointerClass){if(!AxisClass.keepProps.includes("resizer")){merge(true,defaultOptions.yAxis,AxisResizer.resizerOptions);AxisClass.keepProps.push("resizer");addEvent(AxisClass,"afterRender",onAxisAfterRender);addEvent(AxisClass,"destroy",onAxisDestroy);wrap(PointerClass.prototype,"runPointActions",wrapPointerRunPointActions);wrap(PointerClass.prototype,"drag",wrapPointerDrag)}}function onAxisAfterRender(){var axis=this,resizer=axis.resizer,resizerOptions=axis.options.resize;if(resizerOptions){var enabled=resizerOptions.enabled!==false;if(resizer){if(enabled){resizer.init(axis,true)}else{resizer.destroy()}}else{if(enabled){axis.resizer=new AxisResizer(axis)}}}}function onAxisDestroy(e){var axis=this;if(!e.keepEvents&&axis.resizer){axis.resizer.destroy()}}function wrapPointerDrag(proceed){var pointer=this;if(!pointer.chart.activeResizer){proceed.apply(pointer,[].slice.call(arguments,1))}}function wrapPointerRunPointActions(proceed){var pointer=this;if(!pointer.chart.activeResizer){proceed.apply(pointer,[].slice.call(arguments,1))}}var DragPanes={compose:compose};export default DragPanes;