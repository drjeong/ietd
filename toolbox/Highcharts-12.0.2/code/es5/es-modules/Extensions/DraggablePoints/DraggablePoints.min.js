"use strict";import DDU from"./DragDropUtilities.js";var addEvents=DDU.addEvents,getNormalizedEvent=DDU.getNormalizedEvent;import DraggableChart from"./DraggableChart.js";var initDragDrop=DraggableChart.initDragDrop;import DragDropDefaults from"./DragDropDefaults.js";import DragDropProps from"./DragDropProps.js";import U from"../../Core/Utilities.js";var addEvent=U.addEvent,clamp=U.clamp,isNumber=U.isNumber,merge=U.merge;function compose(ChartClass,SeriesClass){DraggableChart.compose(ChartClass);var seriesProto=SeriesClass.prototype;if(!seriesProto.dragDropProps){var PointClass=SeriesClass.prototype.pointClass,seriesTypes=SeriesClass.types,pointProto=PointClass.prototype;pointProto.getDropValues=pointGetDropValues;pointProto.showDragHandles=pointShowDragHandles;addEvent(PointClass,"mouseOut",onPointMouseOut);addEvent(PointClass,"mouseOver",onPointMouseOver);addEvent(PointClass,"remove",onPointRemove);seriesProto.dragDropProps=DragDropProps.line;seriesProto.getGuideBox=seriesGetGuideBox;var seriesWithDragDropProps=["arearange","boxplot","bullet","column","columnrange","errorbar","flags","gantt","ohlc","waterfall","xrange"];for(var _i=0,seriesWithDragDropProps_1=seriesWithDragDropProps;_i<seriesWithDragDropProps_1.length;_i++){var seriesType=seriesWithDragDropProps_1[_i];if(seriesTypes[seriesType]){seriesTypes[seriesType].prototype.dragDropProps=DragDropProps[seriesType]}}var seriesWithoutDragDropProps=["bellcurve","gauge","histogram","map","mapline","pareto","pie","sankey","sma","sunburst","treemap","vector","windbarb","wordcloud"];for(var _a=0,seriesWithoutDragDropProps_1=seriesWithoutDragDropProps;_a<seriesWithoutDragDropProps_1.length;_a++){var seriesType=seriesWithoutDragDropProps_1[_a];if(seriesTypes[seriesType]){seriesTypes[seriesType].prototype.dragDropProps=null}}}}function mouseOut(point){var chart=point.series&&point.series.chart,dragDropData=chart&&chart.dragDropData;if(chart&&chart.dragHandles&&!(dragDropData&&(dragDropData.isDragging&&dragDropData.draggedPastSensitivity||dragDropData.isHoveringHandle===point.id))){chart.hideDragHandles()}}function mouseOver(point){var series=point.series,chart=series&&series.chart,dragDropData=chart&&chart.dragDropData,is3d=chart&&chart.is3d&&chart.is3d();if(chart&&!(dragDropData&&dragDropData.isDragging&&dragDropData.draggedPastSensitivity)&&!chart.isDragDropAnimating&&series.options.dragDrop&&!is3d){if(chart.dragHandles){chart.hideDragHandles()}point.showDragHandles()}}function onPointMouseOut(){var point=this;setTimeout(function(){if(point.series){mouseOut(point)}},10)}function onPointMouseOver(){var point=this;setTimeout(function(){return mouseOver(point)},12)}function onPointRemove(){var chart=this.series.chart,dragHandles=chart.dragHandles;if(dragHandles&&dragHandles.point===this.id){chart.hideDragHandles()}}function onResizeHandleMouseOut(point){var chart=point.series.chart;if(chart.dragDropData&&point.id===chart.dragDropData.isHoveringHandle){delete chart.dragDropData.isHoveringHandle}if(!chart.hoverPoint){mouseOut(point)}}function onResizeHandleMouseDown(e,point,updateProp){var chart=point.series.chart;if(chart.zoomOrPanKeyPressed(e)){return}chart.mouseIsDown=false;initDragDrop(e,point);chart.dragDropData.updateProp=e.updateProp=updateProp;point.firePointEvent("dragStart",e);e.stopPropagation();e.preventDefault()}function pointGetDropValues(origin,newPos,updateProps){var point=this,series=point.series,chart=series.chart,mapView=chart.mapView,options=merge(series.options.dragDrop,point.options.dragDrop),result={},pointOrigin=origin.points[point.id],updateSingleProp=Object.keys(updateProps).length===1;var limitToRange=function(val,dir){var _a,_b,_c;var direction=dir.toUpperCase(),time=series.chart.time,defaultPrecision=series["".concat(dir,"Axis")].categories?1:0,precision=(_a=options["dragPrecision".concat(direction)])!==null&&_a!==void 0?_a:defaultPrecision,min=(_b=time.parse(options["dragMin".concat(direction)]))!==null&&_b!==void 0?_b:-Infinity,max=(_c=time.parse(options["dragMax".concat(direction)]))!==null&&_c!==void 0?_c:Infinity;var res=val;if(precision){res=Math.round(res/precision)*precision}return clamp(res,min,max)};var limitToMapRange=function(newPos,dir,key){var _a,_b,_c,_d,_e;if(mapView){var direction=dir.toUpperCase(),precision=(_a=options["dragPrecision".concat(direction)])!==null&&_a!==void 0?_a:0,lonLatMin=mapView.pixelsToLonLat({x:0,y:0}),lonLatMax=mapView.pixelsToLonLat({x:chart.plotBox.width,y:chart.plotBox.height});var min=(_c=(_b=options["dragMin".concat(direction)])!==null&&_b!==void 0?_b:lonLatMin===null||lonLatMin===void 0?void 0:lonLatMin[key])!==null&&_c!==void 0?_c:-Infinity,max=(_e=(_d=options["dragMax".concat(direction)])!==null&&_d!==void 0?_d:lonLatMax===null||lonLatMax===void 0?void 0:lonLatMax[key])!==null&&_e!==void 0?_e:Infinity,res=newPos[key];if(mapView.projection.options.name==="Orthographic"){return res}if(key==="lat"){if(isNaN(min)||min>mapView.projection.maxLatitude){min=mapView.projection.maxLatitude}if(isNaN(max)||max<-1*mapView.projection.maxLatitude){max=-1*mapView.projection.maxLatitude}var temp=max;max=min;min=temp}if(!mapView.projection.hasCoordinates){var lonLatRes=mapView.pixelsToLonLat({x:newPos.chartX-chart.plotLeft,y:chart.plotHeight-newPos.chartY+chart.plotTop});if(lonLatRes){res=lonLatRes[key]}}if(precision){res=Math.round(res/precision)*precision}return clamp(res,min,max)}};for(var _i=0,_a=Object.keys(updateProps);_i<_a.length;_i++){var key=_a[_i];var val=updateProps[key],oldVal=pointOrigin.point[key],axis=series[val.axis+"Axis"],newVal=mapView?limitToMapRange(newPos,val.axis,key):limitToRange(axis.toValue((axis.horiz?newPos.chartX:newPos.chartY)+pointOrigin[key+"Offset"]),val.axis);if(isNumber(newVal)&&!(updateSingleProp&&val.propValidate&&!val.propValidate(newVal,point))&&typeof oldVal!=="undefined"){result[key]=newVal}}return result}function pointShowDragHandles(){var point=this,series=point.series,chart=series.chart,inverted=chart.inverted,renderer=chart.renderer,options=merge(series.options.dragDrop,point.options.dragDrop),dragDropProps=series.dragDropProps||{};var dragHandles=chart.dragHandles;var _loop_1=function(key){var val=dragDropProps[key],handleOptions=merge(DragDropDefaults.dragHandle,val.handleOptions,options.dragHandle),handleAttrs={class:handleOptions.className,"stroke-width":handleOptions.lineWidth,fill:handleOptions.color,stroke:handleOptions.lineColor},pathFormatter=handleOptions.pathFormatter||val.handleFormatter,handlePositioner=val.handlePositioner,validate=val.validateIndividualDrag?val.validateIndividualDrag(point):true;var pos=void 0,handle=void 0,path=void 0;if(val.resize&&validate&&val.resizeSide&&pathFormatter&&(options["draggable"+val.axis.toUpperCase()]||options[val.optionName])&&options[val.optionName]!==false){if(!dragHandles){dragHandles=chart.dragHandles={group:renderer.g("drag-drop-handles").add(series.markerGroup||series.group),point:point.id}}else{dragHandles.point=point.id}pos=handlePositioner(point);handleAttrs.d=path=pathFormatter(point);var minEdge=point.series.xAxis.categories?-.5:0;if(!path||pos.x<minEdge||pos.y<0){return{value:void 0}}handleAttrs.cursor=handleOptions.cursor||(val.axis==="x"!==!!inverted?"ew-resize":"ns-resize");handle=dragHandles[val.optionName];if(!handle){handle=dragHandles[val.optionName]=renderer.path().add(dragHandles.group)}handleAttrs.translateX=inverted?series.yAxis.len-pos.y:pos.x;handleAttrs.translateY=inverted?series.xAxis.len-pos.x:pos.y;if(inverted){handleAttrs.rotation=-90}handle.attr(handleAttrs);addEvents(handle.element,["touchstart","mousedown"],function(e){onResizeHandleMouseDown(getNormalizedEvent(e,chart),point,key)},{passive:false});addEvent(dragHandles.group.element,"mouseover",function(){chart.dragDropData=chart.dragDropData||{};chart.dragDropData.isHoveringHandle=point.id});addEvents(dragHandles.group.element,["touchend","mouseout"],function(){onResizeHandleMouseOut(point)})}};for(var _i=0,_a=Object.keys(dragDropProps);_i<_a.length;_i++){var key=_a[_i];var state_1=_loop_1(key);if(typeof state_1==="object")return state_1.value}}function seriesGetGuideBox(points){var chart=this.chart;var minX=Infinity,maxX=-Infinity,minY=Infinity,maxY=-Infinity,changed;for(var _i=0,points_1=points;_i<points_1.length;_i++){var point=points_1[_i];var bBox=point.graphic&&point.graphic.getBBox()||point.shapeArgs;if(bBox){var plotX2=void 0;var x2=point.x2;if(isNumber(x2)){plotX2=point.series.xAxis.translate(x2,false,false,false,true)}var skipBBox=!(bBox.width||bBox.height||bBox.x||bBox.y);changed=true;minX=Math.min(point.plotX||0,plotX2||0,skipBBox?Infinity:bBox.x||0,minX);maxX=Math.max(point.plotX||0,plotX2||0,(bBox.x||0)+(bBox.width||0),maxX);minY=Math.min(point.plotY||0,skipBBox?Infinity:bBox.y||0,minY);maxY=Math.max((bBox.y||0)+(bBox.height||0),maxY)}}return changed?chart.renderer.rect(minX,minY,maxX-minX,maxY-minY):chart.renderer.g()}var DraggablePoints={compose:compose};export default DraggablePoints;"";