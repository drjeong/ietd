"use strict";var __spreadArray=this&&this.__spreadArray||function(to,from,pack){if(pack||arguments.length===2)for(var i=0,l=from.length,ar;i<l;i++){if(ar||!(i in from)){if(!ar)ar=Array.prototype.slice.call(from,0,i);ar[i]=from[i]}}return to.concat(ar||Array.prototype.slice.call(from))};import D from"../Core/Defaults.js";var defaultOptions=D.defaultOptions;import H from"../Core/Globals.js";var noop=H.noop;import U from"../Core/Utilities.js";var addEvent=U.addEvent,extend=U.extend,isObject=U.isObject,merge=U.merge,relativeLength=U.relativeLength;var defaultBorderRadiusOptions={radius:0,scope:"stack",where:void 0};var oldArc=noop;var oldRoundedRect=noop;function applyBorderRadius(path,i,r){var a=path[i];var b=path[i+1];if(b[0]==="Z"){b=path[0]}var line,arc,fromLineToArc;if((a[0]==="M"||a[0]==="L")&&b[0]==="A"){line=a;arc=b;fromLineToArc=true}else if(a[0]==="A"&&(b[0]==="M"||b[0]==="L")){line=b;arc=a}if(line&&arc&&arc.params){var bigR=arc[1],clockwise=arc[5],params=arc.params,start=params.start,end=params.end,cx=params.cx,cy=params.cy;var relativeR=clockwise?bigR-r:bigR+r,angleOfBorderRadius=relativeR?Math.asin(r/relativeR):0,angleOffset=clockwise?angleOfBorderRadius:-angleOfBorderRadius,distanceBigCenterToStartArc=Math.cos(angleOfBorderRadius)*relativeR;if(fromLineToArc){params.start=start+angleOffset;line[1]=cx+distanceBigCenterToStartArc*Math.cos(start);line[2]=cy+distanceBigCenterToStartArc*Math.sin(start);path.splice(i+1,0,["A",r,r,0,0,1,cx+bigR*Math.cos(params.start),cy+bigR*Math.sin(params.start)])}else{params.end=end-angleOffset;arc[6]=cx+bigR*Math.cos(params.end);arc[7]=cy+bigR*Math.sin(params.end);path.splice(i+1,0,["A",r,r,0,0,1,cx+distanceBigCenterToStartArc*Math.cos(end),cy+distanceBigCenterToStartArc*Math.sin(end)])}arc[4]=Math.abs(params.end-params.start)<Math.PI?0:1}}function arc(x,y,w,h,options){if(options===void 0){options={}}var path=oldArc(x,y,w,h,options),_a=options.innerR,innerR=_a===void 0?0:_a,_b=options.r,r=_b===void 0?w:_b,_c=options.start,start=_c===void 0?0:_c,_d=options.end,end=_d===void 0?0:_d;if(options.open||!options.borderRadius){return path}var alpha=end-start,sinHalfAlpha=Math.sin(alpha/2),borderRadius=Math.max(Math.min(relativeLength(options.borderRadius||0,r-innerR),(r-innerR)/2,r*sinHalfAlpha/(1+sinHalfAlpha)),0),innerBorderRadius=Math.min(borderRadius,2*(alpha/Math.PI)*innerR);var i=path.length-1;while(i--){applyBorderRadius(path,i,i>1?innerBorderRadius:borderRadius)}return path}function seriesOnAfterColumnTranslate(){var _a,_b;if(this.options.borderRadius&&!(this.chart.is3d&&this.chart.is3d())){var _c=this,options=_c.options,yAxis=_c.yAxis,percent=options.stacking==="percent",seriesDefault=(_b=(_a=defaultOptions.plotOptions)===null||_a===void 0?void 0:_a[this.type])===null||_b===void 0?void 0:_b.borderRadius,borderRadius=optionsToObject(options.borderRadius,isObject(seriesDefault)?seriesDefault:{}),reversed=yAxis.options.reversed;for(var _i=0,_d=this.points;_i<_d.length;_i++){var point=_d[_i];var shapeArgs=point.shapeArgs;if(point.shapeType==="roundedRect"&&shapeArgs){var _e=shapeArgs.width,width=_e===void 0?0:_e,_f=shapeArgs.height,height=_f===void 0?0:_f,_g=shapeArgs.y,y=_g===void 0?0:_g;var brBoxY=y,brBoxHeight=height;if(borderRadius.scope==="stack"&&point.stackTotal){var stackEnd=yAxis.translate(percent?100:point.stackTotal,false,true,false,true),stackThreshold=yAxis.translate(options.threshold||0,false,true,false,true),box=this.crispCol(0,Math.min(stackEnd,stackThreshold),0,Math.abs(stackEnd-stackThreshold));brBoxY=box.y;brBoxHeight=box.height}var flip=(point.negative?-1:1)*(reversed?-1:1)===-1;var where=borderRadius.where;if(!where&&this.is("waterfall")&&Math.abs((point.yBottom||0)-(this.translatedThreshold||0))>this.borderWidth){where="all"}if(!where){where="end"}var r=Math.min(relativeLength(borderRadius.radius,width),width/2,where==="all"?height/2:Infinity)||0;if(where==="end"){if(flip){brBoxY-=r;brBoxHeight+=r}else{brBoxHeight+=r}}extend(shapeArgs,{brBoxHeight:brBoxHeight,brBoxY:brBoxY,r:r})}}}}function compose(SeriesClass,SVGElementClass,SVGRendererClass){var PieSeriesClass=SeriesClass.types.pie;if(!SVGElementClass.symbolCustomAttribs.includes("borderRadius")){var symbols=SVGRendererClass.prototype.symbols;addEvent(SeriesClass,"afterColumnTranslate",seriesOnAfterColumnTranslate,{order:9});addEvent(PieSeriesClass,"afterTranslate",pieSeriesOnAfterTranslate);SVGElementClass.symbolCustomAttribs.push("borderRadius","brBoxHeight","brBoxY");oldArc=symbols.arc;oldRoundedRect=symbols.roundedRect;symbols.arc=arc;symbols.roundedRect=roundedRect}}function optionsToObject(options,seriesBROptions){if(!isObject(options)){options={radius:options||0}}return merge(defaultBorderRadiusOptions,seriesBROptions,options)}function pieSeriesOnAfterTranslate(){var borderRadius=optionsToObject(this.options.borderRadius);for(var _i=0,_a=this.points;_i<_a.length;_i++){var point=_a[_i];var shapeArgs=point.shapeArgs;if(shapeArgs){shapeArgs.borderRadius=relativeLength(borderRadius.radius,(shapeArgs.r||0)-(shapeArgs.innerR||0))}}}function roundedRect(x,y,width,height,options){if(options===void 0){options={}}var path=oldRoundedRect(x,y,width,height,options),_a=options.r,r=_a===void 0?0:_a,_b=options.brBoxHeight,brBoxHeight=_b===void 0?height:_b,_c=options.brBoxY,brBoxY=_c===void 0?y:_c,brOffsetTop=y-brBoxY,brOffsetBtm=brBoxY+brBoxHeight-(y+height),rTop=brOffsetTop-r>-.1?0:r,rBtm=brOffsetBtm-r>-.1?0:r,cutTop=Math.max(rTop&&brOffsetTop,0),cutBtm=Math.max(rBtm&&brOffsetBtm,0);var a=[x+rTop,y],b=[x+width-rTop,y],c=[x+width,y+rTop],d=[x+width,y+height-rBtm],e=[x+width-rBtm,y+height],f=[x+rBtm,y+height],g=[x,y+height-rBtm],h=[x,y+rTop];var applyPythagoras=function(r,altitude){return Math.sqrt(Math.pow(r,2)-Math.pow(altitude,2))};if(cutTop){var base=applyPythagoras(rTop,rTop-cutTop);a[0]-=base;b[0]+=base;c[1]=h[1]=y+rTop-cutTop}if(height<rTop-cutTop){var base=applyPythagoras(rTop,rTop-cutTop-height);c[0]=d[0]=x+width-rTop+base;e[0]=Math.min(c[0],e[0]);f[0]=Math.max(d[0],f[0]);g[0]=h[0]=x+rTop-base;c[1]=h[1]=y+height}if(cutBtm){var base=applyPythagoras(rBtm,rBtm-cutBtm);e[0]+=base;f[0]-=base;d[1]=g[1]=y+height-rBtm+cutBtm}if(height<rBtm-cutBtm){var base=applyPythagoras(rBtm,rBtm-cutBtm-height);c[0]=d[0]=x+width-rBtm+base;b[0]=Math.min(c[0],b[0]);a[0]=Math.max(d[0],a[0]);g[0]=h[0]=x+rBtm-base;d[1]=g[1]=y}path.length=0;path.push(__spreadArray(["M"],a,true),__spreadArray(["L"],b,true),__spreadArray(["A",rTop,rTop,0,0,1],c,true),__spreadArray(["L"],d,true),__spreadArray(["A",rBtm,rBtm,0,0,1],e,true),__spreadArray(["L"],f,true),__spreadArray(["A",rBtm,rBtm,0,0,1],g,true),__spreadArray(["L"],h,true),__spreadArray(["A",rTop,rTop,0,0,1],a,true),["Z"]);return path}var BorderRadius={compose:compose,optionsToObject:optionsToObject};export default BorderRadius;"";