"use strict";var __extends=this&&this.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p]};return extendStatics(d,b)};return function(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}}();var __spreadArray=this&&this.__spreadArray||function(to,from,pack){if(pack||arguments.length===2)for(var i=0,l=from.length,ar;i<l;i++){if(ar||!(i in from)){if(!ar)ar=Array.prototype.slice.call(from,0,i);ar[i]=from[i]}}return to.concat(ar||Array.prototype.slice.call(from))};import H from"../Core/Globals.js";var composed=H.composed;import MapViewDefaults from"./MapViewDefaults.js";import GeoJSONComposition from"./GeoJSONComposition.js";import GeometryUtilities from"../Core/Geometry/GeometryUtilities.js";var pointInPolygon=GeometryUtilities.pointInPolygon;var topo2geo=GeoJSONComposition.topo2geo;import MU from"./MapUtilities.js";var boundsFromPath=MU.boundsFromPath;import Projection from"./Projection.js";import U from"../Core/Utilities.js";var addEvent=U.addEvent,clamp=U.clamp,crisp=U.crisp,fireEvent=U.fireEvent,isArray=U.isArray,isNumber=U.isNumber,isObject=U.isObject,isString=U.isString,merge=U.merge,pick=U.pick,pushUnique=U.pushUnique,relativeLength=U.relativeLength;var tileSize=256;var worldSize=400.979322;var maps={};function zoomFromBounds(b,playingField){var width=playingField.width,height=playingField.height,scaleToField=Math.max((b.x2-b.x1)/(width/tileSize),(b.y2-b.y1)/(height/tileSize));return Math.log(worldSize/scaleToField)/Math.log(2)}function recommendedMapViewAfterDrill(e){var _a,_b;if(e.seriesOptions.mapData){(_a=this.mapView)===null||_a===void 0?void 0:_a.recommendMapView(this,[this.options.chart.map,e.seriesOptions.mapData],(_b=this.options.drilldown)===null||_b===void 0?void 0:_b.mapZooming)}}var MapView=function(){function MapView(chart,options){var _this=this;var _a;this.allowTransformAnimation=true;this.eventsToUnbind=[];this.insets=[];this.padding=[0,0,0,0];this.recommendedMapView={};if(!(this instanceof MapViewInset)){this.recommendMapView(chart,__spreadArray([chart.options.chart.map],(chart.options.series||[]).map(function(s){return s.mapData}),true))}this.userOptions=options||{};var o=merge(MapViewDefaults,this.recommendedMapView,options);var recInsets=(_a=this.recommendedMapView)===null||_a===void 0?void 0:_a.insets,optInsets=options&&options.insets;if(recInsets&&optInsets){o.insets=MapView.mergeInsets(recInsets,optInsets)}this.chart=chart;this.center=o.center;this.options=o;this.projection=new Projection(o.projection);this.playingField=chart.plotBox;this.zoom=o.zoom||0;this.minZoom=o.minZoom;this.createInsets();this.eventsToUnbind.push(addEvent(chart,"afterSetChartSize",function(){_this.playingField=_this.getField();if(_this.minZoom===void 0||_this.minZoom===_this.zoom){_this.fitToBounds(void 0,void 0,false);if(!_this.chart.hasRendered&&isNumber(_this.userOptions.zoom)){_this.zoom=_this.userOptions.zoom}if(_this.userOptions.center){merge(true,_this.center,_this.userOptions.center)}}}));this.setUpEvents()}MapView.compose=function(MapChartClass){if(pushUnique(composed,"MapView")){maps=MapChartClass.maps;addEvent(MapChartClass,"afterInit",function(){this.mapView=new MapView(this,this.options.mapView)},{order:0});addEvent(MapChartClass,"addSeriesAsDrilldown",recommendedMapViewAfterDrill);addEvent(MapChartClass,"afterDrillUp",recommendedMapViewAfterDrill)}};MapView.compositeBounds=function(arrayOfBounds){if(arrayOfBounds.length){return arrayOfBounds.slice(1).reduce(function(acc,cur){acc.x1=Math.min(acc.x1,cur.x1);acc.y1=Math.min(acc.y1,cur.y1);acc.x2=Math.max(acc.x2,cur.x2);acc.y2=Math.max(acc.y2,cur.y2);return acc},merge(arrayOfBounds[0]))}return};MapView.mergeInsets=function(a,b){var toObject=function(insets){var ob={};insets.forEach(function(inset,i){ob[inset&&inset.id||"i".concat(i)]=inset});return ob};var insetsObj=merge(toObject(a),toObject(b)),insets=Object.keys(insetsObj).map(function(key){return insetsObj[key]});return insets};MapView.prototype.createInsets=function(){var _this=this;var options=this.options,insets=options.insets;if(insets){insets.forEach(function(item){var inset=new MapViewInset(_this,merge(options.insetOptions,item));_this.insets.push(inset)})}};MapView.prototype.fitToBounds=function(bounds,padding,redraw,animation){if(redraw===void 0){redraw=true}var b=bounds||this.getProjectedBounds();if(b){var pad=pick(padding,bounds?0:this.options.padding),fullField=this.getField(false),padArr=isArray(pad)?pad:[pad,pad,pad,pad];this.padding=[relativeLength(padArr[0],fullField.height),relativeLength(padArr[1],fullField.width),relativeLength(padArr[2],fullField.height),relativeLength(padArr[3],fullField.width)];this.playingField=this.getField();var zoom=zoomFromBounds(b,this.playingField);if(!bounds){this.minZoom=zoom}var center=this.projection.inverse([(b.x2+b.x1)/2,(b.y2+b.y1)/2]);this.setView(center,zoom,redraw,animation)}};MapView.prototype.getField=function(padded){if(padded===void 0){padded=true}var padding=padded?this.padding:[0,0,0,0];return{x:padding[3],y:padding[0],width:this.chart.plotWidth-padding[1]-padding[3],height:this.chart.plotHeight-padding[0]-padding[2]}};MapView.prototype.getGeoMap=function(map){if(isString(map)){if(maps[map]&&maps[map].type==="Topology"){return topo2geo(maps[map])}return maps[map]}if(isObject(map,true)){if(map.type==="FeatureCollection"){return map}if(map.type==="Topology"){return topo2geo(map)}}};MapView.prototype.getMapBBox=function(){var bounds=this.getProjectedBounds(),scale=this.getScale();if(bounds){var padding=this.padding,p1=this.projectedUnitsToPixels({x:bounds.x1,y:bounds.y2}),width=(bounds.x2-bounds.x1)*scale+padding[1]+padding[3],height=(bounds.y2-bounds.y1)*scale+padding[0]+padding[2];return{width:width,height:height,x:p1.x-padding[3],y:p1.y-padding[0]}}};MapView.prototype.getProjectedBounds=function(){var projection=this.projection;var allBounds=this.chart.series.reduce(function(acc,s){var bounds=s.getProjectedBounds&&s.getProjectedBounds();if(bounds&&s.options.affectsMapView!==false){acc.push(bounds)}return acc},[]);var fitToGeometry=this.options.fitToGeometry;if(fitToGeometry){if(!this.fitToGeometryCache){if(fitToGeometry.type==="MultiPoint"){var positions=fitToGeometry.coordinates.map(function(lonLat){return projection.forward(lonLat)}),xs=positions.map(function(pos){return pos[0]}),ys=positions.map(function(pos){return pos[1]});this.fitToGeometryCache={x1:Math.min.apply(0,xs),x2:Math.max.apply(0,xs),y1:Math.min.apply(0,ys),y2:Math.max.apply(0,ys)}}else{this.fitToGeometryCache=boundsFromPath(projection.path(fitToGeometry))}}return this.fitToGeometryCache}return this.projection.bounds||MapView.compositeBounds(allBounds)};MapView.prototype.getScale=function(){return tileSize/worldSize*Math.pow(2,this.zoom)};MapView.prototype.getSVGTransform=function(){var _a=this.playingField,x=_a.x,y=_a.y,width=_a.width,height=_a.height,projectedCenter=this.projection.forward(this.center),flipFactor=this.projection.hasCoordinates?-1:1,scaleX=this.getScale(),scaleY=scaleX*flipFactor,translateX=x+width/2-projectedCenter[0]*scaleX,translateY=y+height/2-projectedCenter[1]*scaleY;return{scaleX:scaleX,scaleY:scaleY,translateX:translateX,translateY:translateY}};MapView.prototype.lonLatToPixels=function(lonLat){var pos=this.lonLatToProjectedUnits(lonLat);if(pos){return this.projectedUnitsToPixels(pos)}};MapView.prototype.lonLatToProjectedUnits=function(lonLat){var chart=this.chart,mapTransforms=chart.mapTransforms;if(mapTransforms){for(var transform in mapTransforms){if(Object.hasOwnProperty.call(mapTransforms,transform)&&mapTransforms[transform].hitZone){var coords=chart.transformFromLatLon(lonLat,mapTransforms[transform]);if(coords&&pointInPolygon(coords,mapTransforms[transform].hitZone.coordinates[0])){return coords}}}return chart.transformFromLatLon(lonLat,mapTransforms["default"])}for(var _i=0,_a=this.insets;_i<_a.length;_i++){var inset=_a[_i];if(inset.options.geoBounds&&pointInPolygon({x:lonLat.lon,y:lonLat.lat},inset.options.geoBounds.coordinates[0])){var insetProjectedPoint=inset.projection.forward([lonLat.lon,lonLat.lat]),pxPoint=inset.projectedUnitsToPixels({x:insetProjectedPoint[0],y:insetProjectedPoint[1]});return this.pixelsToProjectedUnits(pxPoint)}}var point=this.projection.forward([lonLat.lon,lonLat.lat]);if(!point.outside){return{x:point[0],y:point[1]}}};MapView.prototype.projectedUnitsToLonLat=function(point){var chart=this.chart,mapTransforms=chart.mapTransforms;if(mapTransforms){for(var transform in mapTransforms){if(Object.hasOwnProperty.call(mapTransforms,transform)&&mapTransforms[transform].hitZone&&pointInPolygon(point,mapTransforms[transform].hitZone.coordinates[0])){return chart.transformToLatLon(point,mapTransforms[transform])}}return chart.transformToLatLon(point,mapTransforms["default"])}var pxPoint=this.projectedUnitsToPixels(point);for(var _i=0,_a=this.insets;_i<_a.length;_i++){var inset=_a[_i];if(inset.hitZone&&pointInPolygon(pxPoint,inset.hitZone.coordinates[0])){var insetProjectedPoint=inset.pixelsToProjectedUnits(pxPoint),coordinates_1=inset.projection.inverse([insetProjectedPoint.x,insetProjectedPoint.y]);return{lon:coordinates_1[0],lat:coordinates_1[1]}}}var coordinates=this.projection.inverse([point.x,point.y]);return{lon:coordinates[0],lat:coordinates[1]}};MapView.prototype.recommendMapView=function(chart,mapDataArray,update){var _this=this;var _a;if(update===void 0){update=false}this.recommendedMapView={};var geoMaps=mapDataArray.map(function(mapData){return _this.getGeoMap(mapData)});var allGeoBounds=[];geoMaps.forEach(function(geoMap){if(geoMap){if(!Object.keys(_this.recommendedMapView).length){_this.recommendedMapView=geoMap["hc-recommended-mapview"]||{}}if(geoMap.bbox){var _a=geoMap.bbox,x1=_a[0],y1=_a[1],x2=_a[2],y2=_a[3];allGeoBounds.push({x1:x1,y1:y1,x2:x2,y2:y2})}}});var geoBounds=allGeoBounds.length&&MapView.compositeBounds(allGeoBounds);fireEvent(this,"onRecommendMapView",{geoBounds:geoBounds,chart:chart},function(){if(geoBounds&&this.recommendedMapView){if(!this.recommendedMapView.projection){var x1=geoBounds.x1,y1=geoBounds.y1,x2=geoBounds.x2,y2=geoBounds.y2;this.recommendedMapView.projection=x2-x1>180&&y2-y1>90?{name:"EqualEarth",parallels:[0,0],rotation:[0]}:{name:"LambertConformalConic",parallels:[y1,y2],rotation:[-(x1+x2)/2]}}if(!this.recommendedMapView.insets){this.recommendedMapView.insets=void 0}}});this.geoMap=geoMaps[0];if(update&&chart.hasRendered&&!((_a=chart.userOptions.mapView)===null||_a===void 0?void 0:_a.projection)&&this.recommendedMapView){this.update(this.recommendedMapView)}};MapView.prototype.redraw=function(animation){this.chart.series.forEach(function(s){if(s.useMapGeometry){s.isDirty=true}});this.chart.redraw(animation)};MapView.prototype.setView=function(center,zoom,redraw,animation){if(redraw===void 0){redraw=true}if(center){this.center=center}if(typeof zoom==="number"){if(typeof this.minZoom==="number"){zoom=Math.max(zoom,this.minZoom)}if(typeof this.options.maxZoom==="number"){zoom=Math.min(zoom,this.options.maxZoom)}if(isNumber(zoom)){this.zoom=zoom}}var bounds=this.getProjectedBounds();if(bounds){var projectedCenter=this.projection.forward(this.center),_a=this.playingField,x=_a.x,y=_a.y,width=_a.width,height=_a.height,scale=this.getScale(),bottomLeft=this.projectedUnitsToPixels({x:bounds.x1,y:bounds.y1}),topRight=this.projectedUnitsToPixels({x:bounds.x2,y:bounds.y2}),boundsCenterProjected=[(bounds.x1+bounds.x2)/2,(bounds.y1+bounds.y2)/2],isDrilling=this.chart.series.some(function(series){return series.isDrilling});if(!isDrilling){var x1=bottomLeft.x,y1=topRight.y,x2=topRight.x,y2=bottomLeft.y;if(x2-x1<width){projectedCenter[0]=boundsCenterProjected[0]}else if(x1<x&&x2<x+width){projectedCenter[0]+=Math.max(x1-x,x2-width-x)/scale}else if(x2>x+width&&x1>x){projectedCenter[0]+=Math.min(x2-width-x,x1-x)/scale}if(y2-y1<height){projectedCenter[1]=boundsCenterProjected[1]}else if(y1<y&&y2<y+height){projectedCenter[1]-=Math.max(y1-y,y2-height-y)/scale}else if(y2>y+height&&y1>y){projectedCenter[1]-=Math.min(y2-height-y,y1-y)/scale}this.center=this.projection.inverse(projectedCenter)}this.insets.forEach(function(inset){if(inset.options.field){inset.hitZone=inset.getHitZone();inset.playingField=inset.getField()}});this.render()}fireEvent(this,"afterSetView");if(redraw){this.redraw(animation)}};MapView.prototype.projectedUnitsToPixels=function(pos){var scale=this.getScale(),projectedCenter=this.projection.forward(this.center),field=this.playingField,centerPxX=field.x+field.width/2,centerPxY=field.y+field.height/2;var x=centerPxX-scale*(projectedCenter[0]-pos.x);var y=centerPxY+scale*(projectedCenter[1]-pos.y);return{x:x,y:y}};MapView.prototype.pixelsToLonLat=function(pos){return this.projectedUnitsToLonLat(this.pixelsToProjectedUnits(pos))};MapView.prototype.pixelsToProjectedUnits=function(pos){var x=pos.x,y=pos.y,scale=this.getScale(),projectedCenter=this.projection.forward(this.center),field=this.playingField,centerPxX=field.x+field.width/2,centerPxY=field.y+field.height/2;var projectedX=projectedCenter[0]+(x-centerPxX)/scale;var projectedY=projectedCenter[1]-(y-centerPxY)/scale;return{x:projectedX,y:projectedY}};MapView.prototype.setUpEvents=function(){var _this=this;var chart=this.chart;var mouseDownCenterProjected,mouseDownKey,mouseDownRotation;var onPan=function(e){var _a=chart.pointer,lastTouches=_a.lastTouches,pinchDown=_a.pinchDown,projection=_this.projection,touches=e.touches;var mouseDownX=chart.mouseDownX,mouseDownY=chart.mouseDownY,howMuch=0;if((pinchDown===null||pinchDown===void 0?void 0:pinchDown.length)===1){mouseDownX=pinchDown[0].chartX;mouseDownY=pinchDown[0].chartY}else if((pinchDown===null||pinchDown===void 0?void 0:pinchDown.length)===2){mouseDownX=(pinchDown[0].chartX+pinchDown[1].chartX)/2;mouseDownY=(pinchDown[0].chartY+pinchDown[1].chartY)/2}if((touches===null||touches===void 0?void 0:touches.length)===2&&lastTouches){var startDistance=Math.sqrt(Math.pow(lastTouches[0].chartX-lastTouches[1].chartX,2)+Math.pow(lastTouches[0].chartY-lastTouches[1].chartY,2)),endDistance=Math.sqrt(Math.pow(touches[0].chartX-touches[1].chartX,2)+Math.pow(touches[0].chartY-touches[1].chartY,2));howMuch=Math.log(startDistance/endDistance)/Math.log(.5)}if(isNumber(mouseDownX)&&isNumber(mouseDownY)){var key="".concat(mouseDownX,",").concat(mouseDownY);var _b=e.originalEvent,chartX=_b.chartX,chartY=_b.chartY;if((touches===null||touches===void 0?void 0:touches.length)===2){chartX=(touches[0].chartX+touches[1].chartX)/2;chartY=(touches[0].chartY+touches[1].chartY)/2}if(key!==mouseDownKey){mouseDownKey=key;mouseDownCenterProjected=_this.projection.forward(_this.center);mouseDownRotation=(_this.projection.options.rotation||[0,0]).slice()}var worldBounds=projection.def&&projection.def.bounds,worldZoom=worldBounds&&zoomFromBounds(worldBounds,_this.playingField)||-Infinity;if(projection.options.name==="Orthographic"&&((touches===null||touches===void 0?void 0:touches.length)||0)<2&&(_this.minZoom||Infinity)<worldZoom*1.3){var ratio=440/(_this.getScale()*Math.min(chart.plotWidth,chart.plotHeight));if(mouseDownRotation){var lon=(mouseDownX-chartX)*ratio-mouseDownRotation[0],lat=clamp(-mouseDownRotation[1]-(mouseDownY-chartY)*ratio,-80,80),zoom=_this.zoom;_this.update({projection:{rotation:[-lon,-lat]}},false);_this.fitToBounds(void 0,void 0,false);_this.zoom=zoom;chart.redraw(false)}}else if(isNumber(chartX)&&isNumber(chartY)){var scale=_this.getScale(),flipFactor=_this.projection.hasCoordinates?1:-1;var newCenter=_this.projection.inverse([mouseDownCenterProjected[0]+(mouseDownX-chartX)/scale,mouseDownCenterProjected[1]-(mouseDownY-chartY)/scale*flipFactor]);if(!isNaN(newCenter[0]+newCenter[1])){_this.zoomBy(howMuch,newCenter,void 0,false)}}e.preventDefault()}};addEvent(chart,"pan",onPan);addEvent(chart,"touchpan",onPan);addEvent(chart,"selection",function(evt){if(!evt.resetSelection){var x=evt.x-chart.plotLeft;var y=evt.y-chart.plotTop;var _a=_this.pixelsToProjectedUnits({x:x,y:y}),y1=_a.y,x1=_a.x;var _b=_this.pixelsToProjectedUnits({x:x+evt.width,y:y+evt.height}),y2=_b.y,x2=_b.x;_this.fitToBounds({x1:x1,y1:y1,x2:x2,y2:y2},void 0,true,evt.originalEvent.touches?false:void 0);if(!/^touch/.test(evt.originalEvent.type)){chart.showResetZoom()}evt.preventDefault()}else{_this.zoomBy()}})};MapView.prototype.render=function(){if(!this.group){this.group=this.chart.renderer.g("map-view").attr({zIndex:4}).add()}};MapView.prototype.update=function(options,redraw,animation){if(redraw===void 0){redraw=true}var newProjection=options.projection,isDirtyProjection=newProjection&&Projection.toString(newProjection)!==Projection.toString(this.options.projection);var isDirtyInsets=false;merge(true,this.userOptions,options);merge(true,this.options,options);if("insets"in options){this.insets.forEach(function(inset){return inset.destroy()});this.insets.length=0;isDirtyInsets=true}if(isDirtyProjection||"fitToGeometry"in options){delete this.fitToGeometryCache}if(isDirtyProjection||isDirtyInsets){this.chart.series.forEach(function(series){var groups=series.transformGroups;if(series.clearBounds){series.clearBounds()}series.isDirty=true;series.isDirtyData=true;if(isDirtyInsets&&groups){while(groups.length>1){var group=groups.pop();if(group){group.destroy()}}}});if(isDirtyProjection){this.projection=new Projection(this.options.projection)}if(isDirtyInsets){this.createInsets()}if(!options.center&&Object.hasOwnProperty.call(options,"zoom")&&!isNumber(options.zoom)){this.fitToBounds(void 0,void 0,false)}}if(options.center||isNumber(options.zoom)){this.setView(this.options.center,options.zoom,false)}else if("fitToGeometry"in options){this.fitToBounds(void 0,void 0,false)}if(redraw){this.chart.redraw(animation)}};MapView.prototype.zoomBy=function(howMuch,coords,chartCoords,animation){var chart=this.chart,projectedCenter=this.projection.forward(this.center);if(typeof howMuch==="number"){var zoom=this.zoom+howMuch;var center=void 0,x=void 0,y=void 0;if(chartCoords){var chartX=chartCoords[0],chartY=chartCoords[1];var scale=this.getScale();var offsetX=chartX-chart.plotLeft-chart.plotWidth/2;var offsetY=chartY-chart.plotTop-chart.plotHeight/2;x=projectedCenter[0]+offsetX/scale;y=projectedCenter[1]+offsetY/scale}if(typeof x==="number"&&typeof y==="number"){var scale=1-Math.pow(2,this.zoom)/Math.pow(2,zoom);var offsetX=projectedCenter[0]-x;var offsetY=projectedCenter[1]-y;projectedCenter[0]-=offsetX*scale;projectedCenter[1]+=offsetY*scale;center=this.projection.inverse(projectedCenter)}this.setView(coords||center,zoom,void 0,animation)}else{this.fitToBounds(void 0,void 0,void 0,animation)}};return MapView}();var MapViewInset=function(_super){__extends(MapViewInset,_super);function MapViewInset(mapView,options){var _this=_super.call(this,mapView.chart,options)||this;_this.id=options.id;_this.mapView=mapView;_this.options=merge({center:[0,0]},mapView.options.insetOptions,options);_this.allBounds=[];if(_this.options.geoBounds){var path=mapView.projection.path(_this.options.geoBounds);_this.geoBoundsProjectedBox=boundsFromPath(path);_this.geoBoundsProjectedPolygon=path.map(function(segment){return[segment[1]||0,segment[2]||0]})}return _this}MapViewInset.prototype.getField=function(padded){if(padded===void 0){padded=true}var hitZone=this.hitZone;if(hitZone){var padding=padded?this.padding:[0,0,0,0],polygon=hitZone.coordinates[0],xs=polygon.map(function(xy){return xy[0]}),ys=polygon.map(function(xy){return xy[1]}),x=Math.min.apply(0,xs)+padding[3],x2=Math.max.apply(0,xs)-padding[1],y=Math.min.apply(0,ys)+padding[0],y2=Math.max.apply(0,ys)-padding[2];if(isNumber(x)&&isNumber(y)){return{x:x,y:y,width:x2-x,height:y2-y}}}return _super.prototype.getField.call(this,padded)};MapViewInset.prototype.getHitZone=function(){var _a=this,chart=_a.chart,mapView=_a.mapView,options=_a.options,coordinates=(options.field||{}).coordinates;if(coordinates){var polygon=coordinates[0];if(options.units==="percent"){var relativeTo_1=options.relativeTo==="mapBoundingBox"&&mapView.getMapBBox()||merge(chart.plotBox,{x:0,y:0});polygon=polygon.map(function(xy){return[relativeLength("".concat(xy[0],"%"),relativeTo_1.width,relativeTo_1.x),relativeLength("".concat(xy[1],"%"),relativeTo_1.height,relativeTo_1.y)]})}return{type:"Polygon",coordinates:[polygon]}}};MapViewInset.prototype.getProjectedBounds=function(){return MapView.compositeBounds(this.allBounds)};MapViewInset.prototype.isInside=function(point){var _a=this,geoBoundsProjectedBox=_a.geoBoundsProjectedBox,geoBoundsProjectedPolygon=_a.geoBoundsProjectedPolygon;return Boolean(geoBoundsProjectedBox&&point.x>=geoBoundsProjectedBox.x1&&point.x<=geoBoundsProjectedBox.x2&&point.y>=geoBoundsProjectedBox.y1&&point.y<=geoBoundsProjectedBox.y2&&geoBoundsProjectedPolygon&&pointInPolygon(point,geoBoundsProjectedPolygon))};MapViewInset.prototype.render=function(){var _a=this,chart=_a.chart,mapView=_a.mapView,options=_a.options,borderPath=options.borderPath||options.field;if(borderPath&&mapView.group){var animate=true;if(!this.border){this.border=chart.renderer.path().addClass("highcharts-mapview-inset-border").add(mapView.group);animate=false}if(!chart.styledMode){this.border.attr({stroke:options.borderColor,"stroke-width":options.borderWidth})}var strokeWidth_1=this.border.strokeWidth(),field_1=options.relativeTo==="mapBoundingBox"&&mapView.getMapBBox()||mapView.playingField;var d=(borderPath.coordinates||[]).reduce(function(d,lineString){return lineString.reduce(function(d,point,i){var x=point[0],y=point[1];if(options.units==="percent"){x=chart.plotLeft+relativeLength("".concat(x,"%"),field_1.width,field_1.x);y=chart.plotTop+relativeLength("".concat(y,"%"),field_1.height,field_1.y)}x=crisp(x,strokeWidth_1);y=crisp(y,strokeWidth_1);d.push(i===0?["M",x,y]:["L",x,y]);return d},d)},[]);this.border[animate?"animate":"attr"]({d:d})}};MapViewInset.prototype.destroy=function(){if(this.border){this.border=this.border.destroy()}this.eventsToUnbind.forEach(function(f){return f()})};MapViewInset.prototype.setUpEvents=function(){};return MapViewInset}(MapView);export default MapView;