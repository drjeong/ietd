"use strict";var __extends=this&&this.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p]};return extendStatics(d,b)};return function(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}}();import CSVConverter from"../Converters/CSVConverter.js";import DataConnector from"./DataConnector.js";import U from"../../Core/Utilities.js";var merge=U.merge;var CSVConnector=function(_super){__extends(CSVConnector,_super);function CSVConnector(options){var _this=this;var mergedOptions=merge(CSVConnector.defaultOptions,options);_this=_super.call(this,mergedOptions)||this;_this.converter=new CSVConverter(mergedOptions);_this.options=mergedOptions;if(mergedOptions.enablePolling){_this.startPolling(Math.max(mergedOptions.dataRefreshRate||0,1)*1e3)}return _this}CSVConnector.prototype.load=function(eventDetail){var connector=this,converter=connector.converter,table=connector.table,_a=connector.options,csv=_a.csv,csvURL=_a.csvURL,dataModifier=_a.dataModifier;connector.emit({type:"load",csv:csv,detail:eventDetail,table:table});return Promise.resolve(csvURL?fetch(csvURL).then(function(response){return response.text()}):csv||"").then(function(csv){if(csv){table.deleteColumns();converter.parse({csv:csv});table.setColumns(converter.getTable().getColumns())}return connector.setModifierOptions(dataModifier).then(function(){return csv})}).then(function(csv){connector.emit({type:"afterLoad",csv:csv,detail:eventDetail,table:table});return connector})["catch"](function(error){connector.emit({type:"loadError",detail:eventDetail,error:error,table:table});throw error})};CSVConnector.defaultOptions={csv:"",csvURL:"",enablePolling:false,dataRefreshRate:1,firstRowAsNames:true};return CSVConnector}(DataConnector);DataConnector.registerType("CSV",CSVConnector);export default CSVConnector;