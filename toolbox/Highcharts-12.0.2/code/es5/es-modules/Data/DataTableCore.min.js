"use strict";import U from"../Core/Utilities.js";var fireEvent=U.fireEvent,isArray=U.isArray,objectEach=U.objectEach,uniqueKey=U.uniqueKey;var DataTableCore=function(){function DataTableCore(options){if(options===void 0){options={}}var _this=this;this.autoId=!options.id;this.columns={};this.id=options.id||uniqueKey();this.modified=this;this.rowCount=0;this.versionTag=uniqueKey();var rowCount=0;objectEach(options.columns||{},function(column,columnName){_this.columns[columnName]=column.slice();rowCount=Math.max(rowCount,column.length)});this.applyRowCount(rowCount)}DataTableCore.prototype.applyRowCount=function(rowCount){this.rowCount=rowCount;objectEach(this.columns,function(column){if(isArray(column)){column.length=rowCount}})};DataTableCore.prototype.getColumn=function(columnName,asReference){return this.columns[columnName]};DataTableCore.prototype.getColumns=function(columnNames,asReference){var _this=this;return(columnNames||Object.keys(this.columns)).reduce(function(columns,columnName){columns[columnName]=_this.columns[columnName];return columns},{})};DataTableCore.prototype.getRow=function(rowIndex,columnNames){var _this=this;return(columnNames||Object.keys(this.columns)).map(function(key){var _a;return(_a=_this.columns[key])===null||_a===void 0?void 0:_a[rowIndex]})};DataTableCore.prototype.setColumn=function(columnName,column,rowIndex,eventDetail){var _a;if(column===void 0){column=[]}if(rowIndex===void 0){rowIndex=0}this.setColumns((_a={},_a[columnName]=column,_a),rowIndex,eventDetail)};DataTableCore.prototype.setColumns=function(columns,rowIndex,eventDetail){var _this=this;var rowCount=this.rowCount;objectEach(columns,function(column,columnName){_this.columns[columnName]=column.slice();rowCount=column.length});this.applyRowCount(rowCount);if(!(eventDetail===null||eventDetail===void 0?void 0:eventDetail.silent)){fireEvent(this,"afterSetColumns");this.versionTag=uniqueKey()}};DataTableCore.prototype.setRow=function(row,rowIndex,insert,eventDetail){if(rowIndex===void 0){rowIndex=this.rowCount}var columns=this.columns,indexRowCount=insert?this.rowCount+1:rowIndex+1;objectEach(row,function(cellValue,columnName){var column=columns[columnName]||(eventDetail===null||eventDetail===void 0?void 0:eventDetail.addColumns)!==false&&new Array(indexRowCount);if(column){if(insert){column.splice(rowIndex,0,cellValue)}else{column[rowIndex]=cellValue}columns[columnName]=column}});if(indexRowCount>this.rowCount){this.applyRowCount(indexRowCount)}if(!(eventDetail===null||eventDetail===void 0?void 0:eventDetail.silent)){fireEvent(this,"afterSetRows");this.versionTag=uniqueKey()}};return DataTableCore}();export default DataTableCore;"";