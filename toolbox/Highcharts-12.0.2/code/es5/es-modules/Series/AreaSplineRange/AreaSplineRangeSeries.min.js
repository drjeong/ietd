"use strict";var __extends=this&&this.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p]};return extendStatics(d,b)};return function(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}}();import AreaRangeSeries from"../AreaRange/AreaRangeSeries.js";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";var splineProto=SeriesRegistry.seriesTypes.spline.prototype;import U from"../../Core/Utilities.js";var merge=U.merge,extend=U.extend;var AreaSplineRangeSeries=function(_super){__extends(AreaSplineRangeSeries,_super);function AreaSplineRangeSeries(){return _super!==null&&_super.apply(this,arguments)||this}AreaSplineRangeSeries.defaultOptions=merge(AreaRangeSeries.defaultOptions);return AreaSplineRangeSeries}(AreaRangeSeries);extend(AreaSplineRangeSeries.prototype,{getPointSpline:splineProto.getPointSpline});SeriesRegistry.registerSeriesType("areasplinerange",AreaSplineRangeSeries);export default AreaSplineRangeSeries;"";