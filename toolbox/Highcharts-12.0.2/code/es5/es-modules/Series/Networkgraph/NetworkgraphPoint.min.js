"use strict";var __extends=this&&this.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p]};return extendStatics(d,b)};return function(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}}();import NodesComposition from"../NodesComposition.js";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";var _a=SeriesRegistry.series,seriesProto=_a.prototype,Point=_a.prototype.pointClass;import U from"../../Core/Utilities.js";var addEvent=U.addEvent,css=U.css,defined=U.defined,extend=U.extend,pick=U.pick;var NetworkgraphPoint=function(_super){__extends(NetworkgraphPoint,_super);function NetworkgraphPoint(series,options,x){var _this=_super.call(this,series,options,x)||this;if(_this.series.options.draggable&&!_this.series.chart.styledMode){addEvent(_this,"mouseOver",function(){css(this.series.chart.container,{cursor:"move"})});addEvent(_this,"mouseOut",function(){css(this.series.chart.container,{cursor:"default"})})}return _this}NetworkgraphPoint.prototype.destroy=function(){if(this.isNode){this.linksFrom.concat(this.linksTo).forEach(function(link){if(link.destroyElements){link.destroyElements()}})}this.series.layout.removeElementFromCollection(this,this.series.layout[this.isNode?"nodes":"links"]);return Point.prototype.destroy.apply(this,arguments)};NetworkgraphPoint.prototype.getDegree=function(){var deg=this.isNode?this.linksFrom.length+this.linksTo.length:0;return deg===0?1:deg};NetworkgraphPoint.prototype.getLinkAttributes=function(){var linkOptions=this.series.options.link,pointOptions=this.options;return{"stroke-width":pick(pointOptions.width,linkOptions.width),stroke:pointOptions.color||linkOptions.color,dashstyle:pointOptions.dashStyle||linkOptions.dashStyle,opacity:pick(pointOptions.opacity,linkOptions.opacity,1)}};NetworkgraphPoint.prototype.getLinkPath=function(){var left=this.fromNode,right=this.toNode;if(left.plotX>right.plotX){left=this.toNode;right=this.fromNode}return[["M",left.plotX||0,left.plotY||0],["L",right.plotX||0,right.plotY||0]]};NetworkgraphPoint.prototype.getMass=function(){var m1=this.fromNode.mass,m2=this.toNode.mass,sum=m1+m2;return{fromNode:1-m1/sum,toNode:1-m2/sum}};NetworkgraphPoint.prototype.isValid=function(){return!this.isNode||defined(this.id)};NetworkgraphPoint.prototype.redrawLink=function(){var path=this.getLinkPath();var attribs;if(this.graphic){this.shapeArgs={d:path};if(!this.series.chart.styledMode){attribs=this.series.pointAttribs(this);this.graphic.attr(attribs);(this.dataLabels||[]).forEach(function(label){if(label){label.attr({opacity:attribs.opacity})}})}this.graphic.animate(this.shapeArgs);var start=path[0];var end=path[1];if(start[0]==="M"&&end[0]==="L"){this.plotX=(start[1]+end[1])/2;this.plotY=(start[2]+end[2])/2}}};NetworkgraphPoint.prototype.remove=function(redraw,animation){var point=this,series=point.series,nodesOptions=series.options.nodes||[];var index,i=nodesOptions.length;if(point.isNode){series.points=[];[].concat(point.linksFrom).concat(point.linksTo).forEach(function(linkFromTo){index=linkFromTo.fromNode.linksFrom.indexOf(linkFromTo);if(index>-1){linkFromTo.fromNode.linksFrom.splice(index,1)}index=linkFromTo.toNode.linksTo.indexOf(linkFromTo);if(index>-1){linkFromTo.toNode.linksTo.splice(index,1)}seriesProto.removePoint.call(series,series.data.indexOf(linkFromTo),false,false)});series.points=series.data.slice();series.nodes.splice(series.nodes.indexOf(point),1);while(i--){if(nodesOptions[i].id===point.options.id){series.options.nodes.splice(i,1);break}}if(point){point.destroy()}series.isDirty=true;series.isDirtyData=true;if(redraw){series.chart.redraw(redraw)}}else{series.removePoint(series.data.indexOf(point),redraw,animation)}};NetworkgraphPoint.prototype.renderLink=function(){var attribs;if(!this.graphic){this.graphic=this.series.chart.renderer.path(this.getLinkPath()).addClass(this.getClassName(),true).add(this.series.group);if(!this.series.chart.styledMode){attribs=this.series.pointAttribs(this);this.graphic.attr(attribs);(this.dataLabels||[]).forEach(function(label){if(label){label.attr({opacity:attribs.opacity})}})}}};return NetworkgraphPoint}(Point);extend(NetworkgraphPoint.prototype,{setState:NodesComposition.setNodeState});export default NetworkgraphPoint;