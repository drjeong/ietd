"use strict";var __extends=this&&this.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p]};return extendStatics(d,b)};return function(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}}();import SVGElement from"../../Core/Renderer/SVG/SVGElement.js";import DragNodesComposition from"../DragNodesComposition.js";import GraphLayout from"../GraphLayoutComposition.js";import H from"../../Core/Globals.js";var noop=H.noop;import NetworkgraphPoint from"./NetworkgraphPoint.js";import NetworkgraphSeriesDefaults from"./NetworkgraphSeriesDefaults.js";import NodesComposition from"../NodesComposition.js";import ReingoldFruchtermanLayout from"./ReingoldFruchtermanLayout.js";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";var Series=SeriesRegistry.series,_a=SeriesRegistry.seriesTypes,columnProto=_a.column.prototype,lineProto=_a.line.prototype;import D from"../SimulationSeriesUtilities.js";var initDataLabels=D.initDataLabels,initDataLabelsDefer=D.initDataLabelsDefer;import U from"../../Core/Utilities.js";var addEvent=U.addEvent,defined=U.defined,extend=U.extend,merge=U.merge,pick=U.pick;import TextPath from"../../Extensions/TextPath.js";TextPath.compose(SVGElement);var NetworkgraphSeries=function(_super){__extends(NetworkgraphSeries,_super);function NetworkgraphSeries(){var _this=_super!==null&&_super.apply(this,arguments)||this;_this.deferDataLabels=true;return _this}NetworkgraphSeries.compose=function(ChartClass){DragNodesComposition.compose(ChartClass);ReingoldFruchtermanLayout.compose(ChartClass)};NetworkgraphSeries.prototype.deferLayout=function(){var layoutOptions=this.options.layoutAlgorithm,chartOptions=this.chart.options.chart;var layout,graphLayoutsStorage=this.chart.graphLayoutsStorage,graphLayoutsLookup=this.chart.graphLayoutsLookup;if(!this.visible){return}if(!graphLayoutsStorage){this.chart.graphLayoutsStorage=graphLayoutsStorage={};this.chart.graphLayoutsLookup=graphLayoutsLookup=[]}layout=graphLayoutsStorage[layoutOptions.type];if(!layout){layoutOptions.enableSimulation=!defined(chartOptions.forExport)?layoutOptions.enableSimulation:!chartOptions.forExport;graphLayoutsStorage[layoutOptions.type]=layout=new GraphLayout.layouts[layoutOptions.type];layout.init(layoutOptions);graphLayoutsLookup.splice(layout.index,0,layout)}this.layout=layout;layout.setArea(0,0,this.chart.plotWidth,this.chart.plotHeight);layout.addElementsToCollection([this],layout.series);layout.addElementsToCollection(this.nodes,layout.nodes);layout.addElementsToCollection(this.points,layout.links)};NetworkgraphSeries.prototype.destroy=function(){if(this.layout){this.layout.removeElementFromCollection(this,this.layout.series)}NodesComposition.destroy.call(this)};NetworkgraphSeries.prototype.drawDataLabels=function(){if(this.deferDataLabels){return}var dlOptions=this.options.dataLabels;var textPath;if(dlOptions===null||dlOptions===void 0?void 0:dlOptions.textPath){textPath=dlOptions.textPath}Series.prototype.drawDataLabels.call(this,this.nodes);if(dlOptions===null||dlOptions===void 0?void 0:dlOptions.linkTextPath){dlOptions.textPath=dlOptions.linkTextPath}Series.prototype.drawDataLabels.call(this,this.data);if(dlOptions===null||dlOptions===void 0?void 0:dlOptions.textPath){dlOptions.textPath=textPath}};NetworkgraphSeries.prototype.generatePoints=function(){var node,i;NodesComposition.generatePoints.apply(this,arguments);if(this.options.nodes){this.options.nodes.forEach(function(nodeOptions){if(!this.nodeLookup[nodeOptions.id]){this.nodeLookup[nodeOptions.id]=this.createNode(nodeOptions.id)}},this)}for(i=this.nodes.length-1;i>=0;i--){node=this.nodes[i];node.degree=node.getDegree();node.radius=pick(node.marker&&node.marker.radius,this.options.marker&&this.options.marker.radius,0);node.key=node.name;if(!this.nodeLookup[node.id]){node.remove()}}this.data.forEach(function(link){link.formatPrefix="link"});this.indexateNodes()};NetworkgraphSeries.prototype.getPointsCollection=function(){return this.nodes||[]};NetworkgraphSeries.prototype.indexateNodes=function(){this.nodes.forEach(function(node,index){node.index=index})};NetworkgraphSeries.prototype.init=function(chart,options){var _this=this;_super.prototype.init.call(this,chart,options);initDataLabelsDefer.call(this);addEvent(this,"updatedData",function(){if(_this.layout){_this.layout.stop()}});addEvent(this,"afterUpdate",function(){_this.nodes.forEach(function(node){if(node&&node.series){node.resolveColor()}})});addEvent(this,"afterSimulation",function(){this.deferDataLabels=false;this.drawDataLabels()});return this};NetworkgraphSeries.prototype.markerAttribs=function(point,state){var attribs=Series.prototype.markerAttribs.call(this,point,state);if(!defined(point.plotY)){attribs.y=0}attribs.x=(point.plotX||0)-(attribs.width||0)/2;return attribs};NetworkgraphSeries.prototype.pointAttribs=function(point,state){var pointState=state||point&&point.state||"normal",stateOptions=this.options.states[pointState];var attribs=Series.prototype.pointAttribs.call(this,point,pointState);if(point&&!point.isNode){attribs=point.getLinkAttributes();if(stateOptions){attribs={stroke:stateOptions.linkColor||attribs.stroke,dashstyle:stateOptions.linkDashStyle||attribs.dashstyle,opacity:pick(stateOptions.linkOpacity,attribs.opacity),"stroke-width":stateOptions.linkColor||attribs["stroke-width"]}}}return attribs};NetworkgraphSeries.prototype.render=function(){var series=this,points=series.points,hoverPoint=series.chart.hoverPoint,dataLabels=[];series.points=series.nodes;lineProto.render.call(this);series.points=points;points.forEach(function(point){if(point.fromNode&&point.toNode){point.renderLink();point.redrawLink()}});if(hoverPoint&&hoverPoint.series===series){series.redrawHalo(hoverPoint)}if(series.chart.hasRendered&&!series.options.dataLabels.allowOverlap){series.nodes.concat(series.points).forEach(function(node){if(node.dataLabel){dataLabels.push(node.dataLabel)}});series.chart.hideOverlappingLabels(dataLabels)}};NetworkgraphSeries.prototype.setState=function(state,inherit){if(inherit){this.points=this.nodes.concat(this.data);Series.prototype.setState.apply(this,arguments);this.points=this.data}else{Series.prototype.setState.apply(this,arguments)}if(!this.layout.simulation&&!state){this.render()}};NetworkgraphSeries.prototype.translate=function(){this.generatePoints();this.deferLayout();this.nodes.forEach(function(node){node.isInside=true;node.linksFrom.forEach(function(point){point.shapeType="path";point.y=1})})};NetworkgraphSeries.defaultOptions=merge(Series.defaultOptions,NetworkgraphSeriesDefaults);return NetworkgraphSeries}(Series);extend(NetworkgraphSeries.prototype,{pointClass:NetworkgraphPoint,animate:void 0,directTouch:true,drawGraph:void 0,forces:["barycenter","repulsive","attractive"],hasDraggableNodes:true,isCartesian:false,noSharedTooltip:true,pointArrayMap:["from","to"],requireSorting:false,trackerGroups:["group","markerGroup","dataLabelsGroup"],initDataLabels:initDataLabels,buildKDTree:noop,createNode:NodesComposition.createNode,drawTracker:columnProto.drawTracker,onMouseDown:DragNodesComposition.onMouseDown,onMouseMove:DragNodesComposition.onMouseMove,onMouseUp:DragNodesComposition.onMouseUp,redrawHalo:DragNodesComposition.redrawHalo});SeriesRegistry.registerSeriesType("networkgraph",NetworkgraphSeries);export default NetworkgraphSeries;"";