"use strict";var __extends=this&&this.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p]};return extendStatics(d,b)};return function(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}}();var __assign=this&&this.__assign||function(){__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};return __assign.apply(this,arguments)};import ColorMapComposition from"../ColorMapComposition.js";import MU from"../../Maps/MapUtilities.js";var boundsFromPath=MU.boundsFromPath;import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";var ScatterPoint=SeriesRegistry.seriesTypes.scatter.prototype.pointClass;import U from"../../Core/Utilities.js";var extend=U.extend,isNumber=U.isNumber,pick=U.pick;var MapPoint=function(_super){__extends(MapPoint,_super);function MapPoint(){return _super!==null&&_super.apply(this,arguments)||this}MapPoint.getProjectedPath=function(point,projection){if(!point.projectedPath){if(projection&&point.geometry){projection.hasCoordinates=true;point.projectedPath=projection.path(point.geometry)}else{point.projectedPath=point.path}}return point.projectedPath||[]};MapPoint.prototype.applyOptions=function(options,x){var _a;var series=this.series,point=_super.prototype.applyOptions.call(this,options,x),joinBy=series.joinBy;if(series.mapData&&series.mapMap){var joinKey=joinBy[1],mapKey=_super.prototype.getNestedProperty.call(this,joinKey),mapPoint=typeof mapKey!=="undefined"&&series.mapMap[mapKey];if(mapPoint){extend(point,__assign(__assign({},mapPoint),{name:(_a=point.name)!==null&&_a!==void 0?_a:mapPoint.name}))}else if(series.pointArrayMap.indexOf("value")!==-1){point.value=point.value||null}}return point};MapPoint.prototype.getProjectedBounds=function(projection){var path=MapPoint.getProjectedPath(this,projection),bounds=boundsFromPath(path),properties=this.properties,mapView=this.series.chart.mapView;if(bounds){var propMiddleLon=properties&&properties["hc-middle-lon"],propMiddleLat=properties&&properties["hc-middle-lat"];if(mapView&&isNumber(propMiddleLon)&&isNumber(propMiddleLat)){var projectedPoint=projection.forward([propMiddleLon,propMiddleLat]);bounds.midX=projectedPoint[0];bounds.midY=projectedPoint[1]}else{var propMiddleX=properties&&properties["hc-middle-x"],propMiddleY=properties&&properties["hc-middle-y"];bounds.midX=bounds.x1+(bounds.x2-bounds.x1)*pick(this.middleX,isNumber(propMiddleX)?propMiddleX:.5);var middleYFraction=pick(this.middleY,isNumber(propMiddleY)?propMiddleY:.5);if(!this.geometry){middleYFraction=1-middleYFraction}bounds.midY=bounds.y2-(bounds.y2-bounds.y1)*middleYFraction}return bounds}};MapPoint.prototype.onMouseOver=function(e){U.clearTimeout(this.colorInterval);if(!this.isNull&&this.visible||this.series.options.nullInteraction){_super.prototype.onMouseOver.call(this,e)}else{this.series.onMouseOut()}};MapPoint.prototype.setVisible=function(vis){var method=vis?"show":"hide";this.visible=this.options.visible=!!vis;if(this.dataLabel){this.dataLabel[method]()}if(this.graphic){this.graphic.attr(this.series.pointAttribs(this))}};MapPoint.prototype.zoomTo=function(animOptions){var point=this,chart=point.series.chart,mapView=chart.mapView;var bounds=point.bounds;if(mapView&&bounds){var inset=isNumber(point.insetIndex)&&mapView.insets[point.insetIndex];if(inset){var px1=inset.projectedUnitsToPixels({x:bounds.x1,y:bounds.y1}),px2=inset.projectedUnitsToPixels({x:bounds.x2,y:bounds.y2}),proj1=mapView.pixelsToProjectedUnits({x:px1.x,y:px1.y}),proj2=mapView.pixelsToProjectedUnits({x:px2.x,y:px2.y});bounds={x1:proj1.x,y1:proj1.y,x2:proj2.x,y2:proj2.y}}mapView.fitToBounds(bounds,void 0,false);point.series.isDirty=true;chart.redraw(animOptions)}};return MapPoint}(ScatterPoint);extend(MapPoint.prototype,{dataLabelOnNull:ColorMapComposition.pointMembers.dataLabelOnNull,moveToTopOnHover:ColorMapComposition.pointMembers.moveToTopOnHover,isValid:ColorMapComposition.pointMembers.isValid});export default MapPoint;