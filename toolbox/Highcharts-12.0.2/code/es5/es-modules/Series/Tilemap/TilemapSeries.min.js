"use strict";var __extends=this&&this.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p]};return extendStatics(d,b)};return function(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}}();import H from"../../Core/Globals.js";var composed=H.composed,noop=H.noop;import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";var _a=SeriesRegistry.seriesTypes,ColumnSeries=_a.column,HeatmapSeries=_a.heatmap,ScatterSeries=_a.scatter;import TilemapPoint from"./TilemapPoint.js";import TilemapSeriesDefaults from"./TilemapSeriesDefaults.js";import TilemapShapes from"./TilemapShapes.js";import U from"../../Core/Utilities.js";var addEvent=U.addEvent,extend=U.extend,merge=U.merge,pushUnique=U.pushUnique;function onAxisAfterSetAxisTranslation(){if(this.recomputingForTilemap||this.coll==="colorAxis"){return}var axis=this,seriesPadding=axis.series.map(function(series){return series.getSeriesPixelPadding&&series.getSeriesPixelPadding(axis)}).reduce(function(a,b){return(a&&a.padding)>(b&&b.padding)?a:b},void 0)||{padding:0,axisLengthFactor:1},lengthPadding=Math.round(seriesPadding.padding*seriesPadding.axisLengthFactor);if(seriesPadding.padding){axis.len-=lengthPadding;axis.recomputingForTilemap=true;axis.setAxisTranslation();delete axis.recomputingForTilemap;axis.minPixelPadding+=seriesPadding.padding;axis.len+=lengthPadding}}var TilemapSeries=function(_super){__extends(TilemapSeries,_super);function TilemapSeries(){return _super!==null&&_super.apply(this,arguments)||this}TilemapSeries.compose=function(AxisClass){if(pushUnique(composed,"TilemapSeries")){addEvent(AxisClass,"afterSetAxisTranslation",onAxisAfterSetAxisTranslation)}};TilemapSeries.prototype.alignDataLabel=function(){return this.tileShape.alignDataLabel.apply(this,arguments)};TilemapSeries.prototype.drawPoints=function(){ColumnSeries.prototype.drawPoints.call(this);for(var _i=0,_a=this.points;_i<_a.length;_i++){var point=_a[_i];if(point.graphic){point.graphic[this.chart.styledMode?"css":"animate"](this.colorAttribs(point))}}};TilemapSeries.prototype.getSeriesPixelPadding=function(axis){var isX=axis.isXAxis,padding=this.tileShape.getSeriesPadding(this);if(!padding){return{padding:0,axisLengthFactor:1}}var coord1=Math.round(axis.translate(isX?padding.xPad*2:padding.yPad,0,1,0,1));var coord2=Math.round(axis.translate(isX?padding.xPad:0,0,1,0,1));return{padding:(axis.single?Math.abs(coord1-coord2)/2:Math.abs(coord1-coord2))||0,axisLengthFactor:isX?2:1.1}};TilemapSeries.prototype.setOptions=function(){var ret=_super.prototype.setOptions.apply(this,arguments);this.tileShape=TilemapShapes[ret.tileShape];return ret};TilemapSeries.prototype.translate=function(){return this.tileShape.translate.apply(this,arguments)};TilemapSeries.defaultOptions=merge(HeatmapSeries.defaultOptions,TilemapSeriesDefaults);return TilemapSeries}(HeatmapSeries);extend(TilemapSeries.prototype,{getSymbol:noop,markerAttribs:ScatterSeries.prototype.markerAttribs,pointAttribs:ColumnSeries.prototype.pointAttribs,pointClass:TilemapPoint});SeriesRegistry.registerSeriesType("tilemap",TilemapSeries);export default TilemapSeries;"";