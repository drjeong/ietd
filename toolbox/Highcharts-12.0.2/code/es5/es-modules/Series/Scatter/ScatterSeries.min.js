"use strict";var __extends=this&&this.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p]};return extendStatics(d,b)};return function(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}}();import ScatterSeriesDefaults from"./ScatterSeriesDefaults.js";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";var _a=SeriesRegistry.seriesTypes,ColumnSeries=_a.column,LineSeries=_a.line;import U from"../../Core/Utilities.js";var addEvent=U.addEvent,extend=U.extend,merge=U.merge;var ScatterSeries=function(_super){__extends(ScatterSeries,_super);function ScatterSeries(){return _super!==null&&_super.apply(this,arguments)||this}ScatterSeries.prototype.applyJitter=function(){var series=this,jitter=this.options.jitter,len=this.points.length;function unrandom(seed){var rand=Math.sin(seed)*1e4;return rand-Math.floor(rand)}if(jitter){this.points.forEach(function(point,i){["x","y"].forEach(function(dim,j){if(jitter[dim]&&!point.isNull){var plotProp="plot".concat(dim.toUpperCase()),axis=series["".concat(dim,"Axis")],translatedJitter=jitter[dim]*axis.transA;if(axis&&!axis.logarithmic){var min=Math.max(0,(point[plotProp]||0)-translatedJitter),max=Math.min(axis.len,(point[plotProp]||0)+translatedJitter);point[plotProp]=min+(max-min)*unrandom(i+j*len);if(dim==="x"){point.clientX=point.plotX}}}})})}};ScatterSeries.prototype.drawGraph=function(){if(this.options.lineWidth){_super.prototype.drawGraph.call(this)}else if(this.graph){this.graph=this.graph.destroy()}};ScatterSeries.defaultOptions=merge(LineSeries.defaultOptions,ScatterSeriesDefaults);return ScatterSeries}(LineSeries);extend(ScatterSeries.prototype,{drawTracker:ColumnSeries.prototype.drawTracker,sorted:false,requireSorting:false,noSharedTooltip:true,trackerGroups:["group","markerGroup","dataLabelsGroup"]});addEvent(ScatterSeries,"afterTranslate",function(){this.applyJitter()});SeriesRegistry.registerSeriesType("scatter",ScatterSeries);export default ScatterSeries;