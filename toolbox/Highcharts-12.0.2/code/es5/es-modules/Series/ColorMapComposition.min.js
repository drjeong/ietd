"use strict";import SeriesRegistry from"../Core/Series/SeriesRegistry.js";var columnProto=SeriesRegistry.seriesTypes.column.prototype;import SVGElement from"../Core/Renderer/SVG/SVGElement.js";import U from"../Core/Utilities.js";var addEvent=U.addEvent,defined=U.defined;var ColorMapComposition;(function(ColorMapComposition){ColorMapComposition.pointMembers={dataLabelOnNull:true,moveToTopOnHover:true,isValid:pointIsValid};ColorMapComposition.seriesMembers={colorKey:"value",axisTypes:["xAxis","yAxis","colorAxis"],parallelArrays:["x","y","value"],pointArrayMap:["value"],trackerGroups:["group","markerGroup","dataLabelsGroup"],colorAttribs:seriesColorAttribs,pointAttribs:columnProto.pointAttribs};function compose(SeriesClass){var PointClass=SeriesClass.prototype.pointClass;addEvent(PointClass,"afterSetState",onPointAfterSetState);return SeriesClass}ColorMapComposition.compose=compose;function onPointAfterSetState(e){var point=this,series=point.series,renderer=series.chart.renderer;if(point.moveToTopOnHover&&point.graphic){if(!series.stateMarkerGraphic){series.stateMarkerGraphic=new SVGElement(renderer,"use").css({pointerEvents:"none"}).add(point.graphic.parentGroup)}if((e===null||e===void 0?void 0:e.state)==="hover"){point.graphic.attr({id:this.id});series.stateMarkerGraphic.attr({href:"".concat(renderer.url,"#").concat(this.id),visibility:"visible"})}else{series.stateMarkerGraphic.attr({href:""})}}}function pointIsValid(){return this.value!==null&&this.value!==Infinity&&this.value!==-Infinity&&(this.value===void 0||!isNaN(this.value))}function seriesColorAttribs(point){var ret={};if(defined(point.color)&&(!point.state||point.state==="normal")){ret[this.colorProp||"fill"]=point.color}return ret}})(ColorMapComposition||(ColorMapComposition={}));export default ColorMapComposition;