"use strict";var __extends=this&&this.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p]};return extendStatics(d,b)};return function(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}}();import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";var PieSeries=SeriesRegistry.seriesTypes.pie;import U from"../../Core/Utilities.js";var arrayMax=U.arrayMax,arrayMin=U.arrayMin,clamp=U.clamp,extend=U.extend,fireEvent=U.fireEvent,merge=U.merge,pick=U.pick;import VariablePieSeriesDefaults from"./VariablePieSeriesDefaults.js";var VariablePieSeries=function(_super){__extends(VariablePieSeries,_super);function VariablePieSeries(){return _super!==null&&_super.apply(this,arguments)||this}VariablePieSeries.prototype.calculateExtremes=function(){var series=this,chart=series.chart,plotWidth=chart.plotWidth,plotHeight=chart.plotHeight,seriesOptions=series.options,slicingRoom=2*(seriesOptions.slicedOffset||0),zData=series.getColumn("z"),smallestSize=Math.min(plotWidth,plotHeight)-slicingRoom,extremes={},positions=series.center||series.getCenter();var zMin,zMax;for(var _i=0,_a=["minPointSize","maxPointSize"];_i<_a.length;_i++){var prop=_a[_i];var length_1=seriesOptions[prop];var isPercent=/%$/.test(length_1);length_1=parseInt(length_1,10);extremes[prop]=isPercent?smallestSize*length_1/100:length_1*2}series.minPxSize=positions[3]+extremes.minPointSize;series.maxPxSize=clamp(positions[2],positions[3]+extremes.minPointSize,extremes.maxPointSize);if(zData.length){zMin=pick(seriesOptions.zMin,arrayMin(zData.filter(series.zValEval)));zMax=pick(seriesOptions.zMax,arrayMax(zData.filter(series.zValEval)));this.getRadii(zMin,zMax,series.minPxSize,series.maxPxSize)}};VariablePieSeries.prototype.getRadii=function(zMin,zMax,minSize,maxSize){var zData=this.getColumn("z"),radii=[],options=this.options,sizeByArea=options.sizeBy!=="radius",zRange=zMax-zMin;var pos,value,radius;for(var i=0;i<zData.length;i++){value=this.zValEval(zData[i])?zData[i]:zMin;if(value<=zMin){radius=minSize/2}else if(value>=zMax){radius=maxSize/2}else{pos=zRange>0?(value-zMin)/zRange:.5;if(sizeByArea){pos=Math.sqrt(pos)}radius=Math.ceil(minSize+pos*(maxSize-minSize))/2}radii.push(radius)}this.radii=radii};VariablePieSeries.prototype.redraw=function(){this.center=null;_super.prototype.redraw.call(this)};VariablePieSeries.prototype.getDataLabelPosition=function(point,distance){var _a=this,center=_a.center,options=_a.options,angle=point.angle||0,r=this.radii[point.index],x=center[0]+Math.cos(angle)*r,y=center[1]+Math.sin(angle)*r,connectorOffset=(options.slicedOffset||0)+(options.borderWidth||0),finalConnectorOffset=Math.min(connectorOffset,distance/5);return{distance:distance,natural:{x:x+Math.cos(angle)*distance,y:y+Math.sin(angle)*distance},computed:{},alignment:point.half?"right":"left",connectorPosition:{breakAt:{x:x+Math.cos(angle)*finalConnectorOffset,y:y+Math.sin(angle)*finalConnectorOffset},touchingSliceAt:{x:x,y:y}}}};VariablePieSeries.prototype.translate=function(positions){this.generatePoints();var series=this,precision=1e3,options=series.options,slicedOffset=options.slicedOffset,startAngle=options.startAngle||0,startAngleRad=Math.PI/180*(startAngle-90),endAngleRad=Math.PI/180*(pick(options.endAngle,startAngle+360)-90),circ=endAngleRad-startAngleRad,points=series.points,ignoreHiddenPoint=options.ignoreHiddenPoint;var cumulative=0,start,end,angle,radiusX,radiusY,point,pointRadii;series.startAngleRad=startAngleRad;series.endAngleRad=endAngleRad;series.calculateExtremes();if(!positions){series.center=positions=series.getCenter()}for(var i=0;i<points.length;i++){point=points[i];pointRadii=series.radii[i];start=startAngleRad+cumulative*circ;if(!ignoreHiddenPoint||point.visible){cumulative+=point.percentage/100}end=startAngleRad+cumulative*circ;point.shapeType="arc";point.shapeArgs={x:positions[0],y:positions[1],r:pointRadii,innerR:positions[3]/2,start:Math.round(start*precision)/precision,end:Math.round(end*precision)/precision};angle=(end+start)/2;if(angle>1.5*Math.PI){angle-=2*Math.PI}else if(angle<-Math.PI/2){angle+=2*Math.PI}point.slicedTranslation={translateX:Math.round(Math.cos(angle)*slicedOffset),translateY:Math.round(Math.sin(angle)*slicedOffset)};radiusX=Math.cos(angle)*positions[2]/2;radiusY=Math.sin(angle)*positions[2]/2;point.tooltipPos=[positions[0]+radiusX*.7,positions[1]+radiusY*.7];point.half=angle<-Math.PI/2||angle>Math.PI/2?1:0;point.angle=angle}fireEvent(series,"afterTranslate")};VariablePieSeries.prototype.zValEval=function(zVal){if(typeof zVal==="number"&&!isNaN(zVal)){return true}return null};VariablePieSeries.defaultOptions=merge(PieSeries.defaultOptions,VariablePieSeriesDefaults);return VariablePieSeries}(PieSeries);extend(VariablePieSeries.prototype,{pointArrayMap:["y","z"],parallelArrays:["x","y","z"]});SeriesRegistry.registerSeriesType("variablepie",VariablePieSeries);export default VariablePieSeries;"";