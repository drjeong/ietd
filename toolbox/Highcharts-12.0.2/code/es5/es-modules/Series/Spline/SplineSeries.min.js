"use strict";var __extends=this&&this.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p]};return extendStatics(d,b)};return function(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}}();import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";var LineSeries=SeriesRegistry.seriesTypes.line;import U from"../../Core/Utilities.js";var merge=U.merge,pick=U.pick;var SplineSeries=function(_super){__extends(SplineSeries,_super);function SplineSeries(){return _super!==null&&_super.apply(this,arguments)||this}SplineSeries.prototype.getPointSpline=function(points,point,i){var smoothing=1.5,denom=smoothing+1,plotX=point.plotX||0,plotY=point.plotY||0,lastPoint=points[i-1],nextPoint=points[i+1];var leftContX,leftContY,rightContX,rightContY;function doCurve(otherPoint){return otherPoint&&!otherPoint.isNull&&otherPoint.doCurve!==false&&!point.isCliff}if(doCurve(lastPoint)&&doCurve(nextPoint)){var lastX=lastPoint.plotX||0,lastY=lastPoint.plotY||0,nextX=nextPoint.plotX||0,nextY=nextPoint.plotY||0;var correction=0;leftContX=(smoothing*plotX+lastX)/denom;leftContY=(smoothing*plotY+lastY)/denom;rightContX=(smoothing*plotX+nextX)/denom;rightContY=(smoothing*plotY+nextY)/denom;if(rightContX!==leftContX){correction=(rightContY-leftContY)*(rightContX-plotX)/(rightContX-leftContX)+plotY-rightContY}leftContY+=correction;rightContY+=correction;if(leftContY>lastY&&leftContY>plotY){leftContY=Math.max(lastY,plotY);rightContY=2*plotY-leftContY}else if(leftContY<lastY&&leftContY<plotY){leftContY=Math.min(lastY,plotY);rightContY=2*plotY-leftContY}if(rightContY>nextY&&rightContY>plotY){rightContY=Math.max(nextY,plotY);leftContY=2*plotY-rightContY}else if(rightContY<nextY&&rightContY<plotY){rightContY=Math.min(nextY,plotY);leftContY=2*plotY-rightContY}point.rightContX=rightContX;point.rightContY=rightContY;point.controlPoints={low:[leftContX,leftContY],high:[rightContX,rightContY]}}var ret=["C",pick(lastPoint.rightContX,lastPoint.plotX,0),pick(lastPoint.rightContY,lastPoint.plotY,0),pick(leftContX,plotX,0),pick(leftContY,plotY,0),plotX,plotY];lastPoint.rightContX=lastPoint.rightContY=void 0;return ret};SplineSeries.defaultOptions=merge(LineSeries.defaultOptions);return SplineSeries}(LineSeries);SeriesRegistry.registerSeriesType("spline",SplineSeries);export default SplineSeries;"";