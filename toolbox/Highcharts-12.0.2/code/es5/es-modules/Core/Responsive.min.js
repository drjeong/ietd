"use strict";import U from"./Utilities.js";var diffObjects=U.diffObjects,extend=U.extend,find=U.find,merge=U.merge,pick=U.pick,uniqueKey=U.uniqueKey;var Responsive;(function(Responsive){function compose(ChartClass){var chartProto=ChartClass.prototype;if(!chartProto.matchResponsiveRule){extend(chartProto,{matchResponsiveRule:matchResponsiveRule,setResponsive:setResponsive})}return ChartClass}Responsive.compose=compose;function matchResponsiveRule(rule,matches){var condition=rule.condition,fn=condition.callback||function(){return this.chartWidth<=pick(condition.maxWidth,Number.MAX_VALUE)&&this.chartHeight<=pick(condition.maxHeight,Number.MAX_VALUE)&&this.chartWidth>=pick(condition.minWidth,0)&&this.chartHeight>=pick(condition.minHeight,0)};if(fn.call(this)){matches.push(rule._id)}}function setResponsive(redraw,reset){var _this=this;var options=this.options.responsive,currentResponsive=this.currentResponsive;var ruleIds=[],undoOptions;if(!reset&&options&&options.rules){options.rules.forEach(function(rule){if(typeof rule._id==="undefined"){rule._id=uniqueKey()}_this.matchResponsiveRule(rule,ruleIds)},this)}var mergedOptions=merge.apply(void 0,ruleIds.map(function(ruleId){return find((options||{}).rules||[],function(rule){return rule._id===ruleId})}).map(function(rule){return rule&&rule.chartOptions}));mergedOptions.isResponsiveOptions=true;ruleIds=ruleIds.toString()||void 0;var currentRuleIds=currentResponsive&&currentResponsive.ruleIds;if(ruleIds!==currentRuleIds){if(currentResponsive){this.currentResponsive=void 0;this.updatingResponsive=true;this.update(currentResponsive.undoOptions,redraw,true);this.updatingResponsive=false}if(ruleIds){undoOptions=diffObjects(mergedOptions,this.options,true,this.collectionsWithUpdate);undoOptions.isResponsiveOptions=true;this.currentResponsive={ruleIds:ruleIds,mergedOptions:mergedOptions,undoOptions:undoOptions};if(!this.updatingResponsive){this.update(mergedOptions,redraw,true)}}else{this.currentResponsive=void 0}}}})(Responsive||(Responsive={}));export default Responsive;"";"";