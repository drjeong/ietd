"use strict";var __extends=this&&this.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p]};return extendStatics(d,b)};return function(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}}();var __spreadArray=this&&this.__spreadArray||function(to,from,pack){if(pack||arguments.length===2)for(var i=0,l=from.length,ar;i<l;i++){if(ar||!(i in from)){if(!ar)ar=Array.prototype.slice.call(from,0,i);ar[i]=from[i]}}return to.concat(ar||Array.prototype.slice.call(from))};import Chart from"./Chart.js";import D from"../Defaults.js";var getOptions=D.getOptions;import SVGRenderer from"../Renderer/SVG/SVGRenderer.js";import U from"../Utilities.js";var isNumber=U.isNumber,merge=U.merge,pick=U.pick;import"../../Maps/MapSymbols.js";var MapChart=function(_super){__extends(MapChart,_super);function MapChart(){return _super!==null&&_super.apply(this,arguments)||this}MapChart.prototype.init=function(userOptions,callback){var defaultCreditsOptions=getOptions().credits;var options=merge({chart:{panning:{enabled:true,type:"xy"},type:"map"},credits:{mapText:pick(defaultCreditsOptions.mapText,' Â© <a href="{geojson.copyrightUrl}">'+"{geojson.copyrightShort}</a>"),mapTextFull:pick(defaultCreditsOptions.mapTextFull,"{geojson.copyright}")},mapView:{},tooltip:{followTouchMove:false}},userOptions);_super.prototype.init.call(this,options,callback)};MapChart.prototype.mapZoom=function(howMuch,xProjected,yProjected,chartX,chartY){if(this.mapView){if(isNumber(howMuch)){howMuch=Math.log(howMuch)/Math.log(.5)}this.mapView.zoomBy(howMuch,isNumber(xProjected)&&isNumber(yProjected)?this.mapView.projection.inverse([xProjected,yProjected]):void 0,isNumber(chartX)&&isNumber(chartY)?[chartX,chartY]:void 0)}};MapChart.prototype.update=function(options){var _a;if(options.chart&&"map"in options.chart){(_a=this.mapView)===null||_a===void 0?void 0:_a.recommendMapView(this,__spreadArray([options.chart.map],(this.options.series||[]).map(function(s){return s.mapData}),true),true)}_super.prototype.update.apply(this,arguments)};return MapChart}(Chart);(function(MapChart){MapChart.maps={};function mapChart(a,b,c){return new MapChart(a,b,c)}MapChart.mapChart=mapChart;function splitPath(path){var arr;if(typeof path==="string"){path=path.replace(/([A-Z])/gi," $1 ").replace(/^\s*/,"").replace(/\s*$/,"");var split=path.split(/[ ,;]+/);arr=split.map(function(item){if(!/[A-Z]/i.test(item)){return parseFloat(item)}return item})}else{arr=path}return SVGRenderer.prototype.pathToSegments(arr)}MapChart.splitPath=splitPath})(MapChart||(MapChart={}));export default MapChart;