"use strict";import StackItem from"./Stacking/StackItem.js";import U from"../Utilities.js";var addEvent=U.addEvent,find=U.find,fireEvent=U.fireEvent,isArray=U.isArray,isNumber=U.isNumber,pick=U.pick;var BrokenAxis;(function(BrokenAxis){function compose(AxisClass,SeriesClass){if(!AxisClass.keepProps.includes("brokenAxis")){AxisClass.keepProps.push("brokenAxis");addEvent(AxisClass,"init",onAxisInit);addEvent(AxisClass,"afterInit",onAxisAfterInit);addEvent(AxisClass,"afterSetTickPositions",onAxisAfterSetTickPositions);addEvent(AxisClass,"afterSetOptions",onAxisAfterSetOptions);var seriesProto=SeriesClass.prototype;seriesProto.drawBreaks=seriesDrawBreaks;seriesProto.gappedPath=seriesGappedPath;addEvent(SeriesClass,"afterGeneratePoints",onSeriesAfterGeneratePoints);addEvent(SeriesClass,"afterRender",onSeriesAfterRender)}return AxisClass}BrokenAxis.compose=compose;function onAxisAfterInit(){if(typeof this.brokenAxis!=="undefined"){this.brokenAxis.setBreaks(this.options.breaks,false)}}function onAxisAfterSetOptions(){var _a;var axis=this;if((_a=axis.brokenAxis)===null||_a===void 0?void 0:_a.hasBreaks){axis.options.ordinal=false}}function onAxisAfterSetTickPositions(){var axis=this,brokenAxis=axis.brokenAxis;if(brokenAxis===null||brokenAxis===void 0?void 0:brokenAxis.hasBreaks){var tickPositions=axis.tickPositions,info=axis.tickPositions.info,newPositions=[];for(var i=0;i<tickPositions.length;i++){if(!brokenAxis.isInAnyBreak(tickPositions[i])){newPositions.push(tickPositions[i])}}axis.tickPositions=newPositions;axis.tickPositions.info=info}}function onAxisInit(){var axis=this;if(!axis.brokenAxis){axis.brokenAxis=new Additions(axis)}}function onSeriesAfterGeneratePoints(){var _a,_b;var _c=this,isDirty=_c.isDirty,connectNulls=_c.options.connectNulls,points=_c.points,xAxis=_c.xAxis,yAxis=_c.yAxis;if(isDirty){var i=points.length;while(i--){var point=points[i];var nullGap=point.y===null&&connectNulls===false;var isPointInBreak=!nullGap&&(((_a=xAxis===null||xAxis===void 0?void 0:xAxis.brokenAxis)===null||_a===void 0?void 0:_a.isInAnyBreak(point.x,true))||((_b=yAxis===null||yAxis===void 0?void 0:yAxis.brokenAxis)===null||_b===void 0?void 0:_b.isInAnyBreak(point.y,true)));point.visible=isPointInBreak?false:point.options.visible!==false}}}function onSeriesAfterRender(){this.drawBreaks(this.xAxis,["x"]);this.drawBreaks(this.yAxis,pick(this.pointArrayMap,["y"]))}function seriesDrawBreaks(axis,keys){var _a;var series=this,points=series.points;var breaks,threshold,y;if((_a=axis===null||axis===void 0?void 0:axis.brokenAxis)===null||_a===void 0?void 0:_a.hasBreaks){var brokenAxis_1=axis.brokenAxis;keys.forEach(function(key){var _a,_b;breaks=(brokenAxis_1===null||brokenAxis_1===void 0?void 0:brokenAxis_1.breakArray)||[];threshold=axis.isXAxis?axis.min:pick(series.options.threshold,axis.min);var breaksOutOfRange=(_b=(_a=axis===null||axis===void 0?void 0:axis.options)===null||_a===void 0?void 0:_a.breaks)===null||_b===void 0?void 0:_b.filter(function(brk){var isOut=true;for(var i=0;i<breaks.length;i++){var otherBreak=breaks[i];if(otherBreak.from===brk.from&&otherBreak.to===brk.to){isOut=false;break}}return isOut});points.forEach(function(point){y=pick(point["stack"+key.toUpperCase()],point[key]);breaks.forEach(function(brk){if(isNumber(threshold)&&isNumber(y)){var eventName="";if(threshold<brk.from&&y>brk.to||threshold>brk.from&&y<brk.from){eventName="pointBreak"}else if(threshold<brk.from&&y>brk.from&&y<brk.to||threshold>brk.from&&y>brk.to&&y<brk.from){eventName="pointInBreak"}if(eventName){fireEvent(axis,eventName,{point:point,brk:brk})}}});breaksOutOfRange===null||breaksOutOfRange===void 0?void 0:breaksOutOfRange.forEach(function(brk){fireEvent(axis,"pointOutsideOfBreak",{point:point,brk:brk})})})})}}function seriesGappedPath(){var currentDataGrouping=this.currentDataGrouping,groupingSize=currentDataGrouping===null||currentDataGrouping===void 0?void 0:currentDataGrouping.gapSize,points=this.points.slice(),yAxis=this.yAxis;var gapSize=this.options.gapSize,i=points.length-1,stack;if(gapSize&&i>0){if(this.options.gapUnit!=="value"){gapSize*=this.basePointRange}if(groupingSize&&groupingSize>gapSize&&groupingSize>=this.basePointRange){gapSize=groupingSize}var current=void 0,next=void 0;while(i--){if(!(next&&next.visible!==false)){next=points[i+1]}current=points[i];if(next.visible===false||current.visible===false){continue}if(next.x-current.x>gapSize){var xRange=(current.x+next.x)/2;points.splice(i+1,0,{isNull:true,x:xRange});if(yAxis.stacking&&this.options.stacking){stack=yAxis.stacking.stacks[this.stackKey][xRange]=new StackItem(yAxis,yAxis.options.stackLabels,false,xRange,this.stack);stack.total=0}}next=current}}return this.getGraphPath(points)}var Additions=function(){function Additions(axis){this.hasBreaks=false;this.axis=axis}Additions.isInBreak=function(brk,val){var repeat=brk.repeat||Infinity,from=brk.from,length=brk.to-brk.from,test=val>=from?(val-from)%repeat:repeat-(from-val)%repeat;var ret;if(!brk.inclusive){ret=test<length&&test!==0}else{ret=test<=length}return ret};Additions.lin2Val=function(val){var axis=this;var brokenAxis=axis.brokenAxis;var breakArray=brokenAxis&&brokenAxis.breakArray;if(!breakArray||!isNumber(val)){return val}var nval=val,brk,i;for(i=0;i<breakArray.length;i++){brk=breakArray[i];if(brk.from>=nval){break}else if(brk.to<nval){nval+=brk.len}else if(Additions.isInBreak(brk,nval)){nval+=brk.len}}return nval};Additions.val2Lin=function(val){var axis=this;var brokenAxis=axis.brokenAxis;var breakArray=brokenAxis&&brokenAxis.breakArray;if(!breakArray||!isNumber(val)){return val}var nval=val,brk,i;for(i=0;i<breakArray.length;i++){brk=breakArray[i];if(brk.to<=val){nval-=brk.len}else if(brk.from>=val){break}else if(Additions.isInBreak(brk,val)){nval-=val-brk.from;break}}return nval};Additions.prototype.findBreakAt=function(x,breaks){return find(breaks,function(b){return b.from<x&&x<b.to})};Additions.prototype.isInAnyBreak=function(val,testKeep){var brokenAxis=this,axis=brokenAxis.axis,breaks=axis.options.breaks||[];var i=breaks.length,inbrk,keep,ret;if(i&&isNumber(val)){while(i--){if(Additions.isInBreak(breaks[i],val)){inbrk=true;if(!keep){keep=pick(breaks[i].showPoints,!axis.isXAxis)}}}if(inbrk&&testKeep){ret=inbrk&&!keep}else{ret=inbrk}}return ret};Additions.prototype.setBreaks=function(breaks,redraw){var brokenAxis=this,axis=brokenAxis.axis,time=axis.chart.time,hasBreaks=isArray(breaks)&&!!breaks.length&&!!Object.keys(breaks[0]).length;axis.isDirty=brokenAxis.hasBreaks!==hasBreaks;brokenAxis.hasBreaks=hasBreaks;breaks===null||breaks===void 0?void 0:breaks.forEach(function(brk){brk.from=time.parse(brk.from)||0;brk.to=time.parse(brk.to)||0});if(breaks!==axis.options.breaks){axis.options.breaks=axis.userOptions.breaks=breaks}axis.forceRedraw=true;axis.series.forEach(function(series){series.isDirty=true});if(!hasBreaks&&axis.val2lin===Additions.val2Lin){delete axis.val2lin;delete axis.lin2val}if(hasBreaks){axis.userOptions.ordinal=false;axis.lin2val=Additions.lin2Val;axis.val2lin=Additions.val2Lin;axis.setExtremes=function(newMin,newMax,redraw,animation,eventArguments){if(brokenAxis.hasBreaks){var breaks_1=this.options.breaks||[];var axisBreak=void 0;while(axisBreak=brokenAxis.findBreakAt(newMin,breaks_1)){newMin=axisBreak.to}while(axisBreak=brokenAxis.findBreakAt(newMax,breaks_1)){newMax=axisBreak.from}if(newMax<newMin){newMax=newMin}}axis.constructor.prototype.setExtremes.call(this,newMin,newMax,redraw,animation,eventArguments)};axis.setAxisTranslation=function(){axis.constructor.prototype.setAxisTranslation.call(this);brokenAxis.unitLength=void 0;if(brokenAxis.hasBreaks){var breaks_2=axis.options.breaks||[],breakArrayT_1=[],breakArray_1=[],pointRangePadding=pick(axis.pointRangePadding,0);var length_1=0,inBrk_1,repeat_1,min_1=axis.userMin||axis.min,max_1=axis.userMax||axis.max,start_1,i_1;breaks_2.forEach(function(brk){repeat_1=brk.repeat||Infinity;if(isNumber(min_1)&&isNumber(max_1)){if(Additions.isInBreak(brk,min_1)){min_1+=brk.to%repeat_1-min_1%repeat_1}if(Additions.isInBreak(brk,max_1)){max_1-=max_1%repeat_1-brk.from%repeat_1}}});breaks_2.forEach(function(brk){start_1=brk.from;repeat_1=brk.repeat||Infinity;if(isNumber(min_1)&&isNumber(max_1)){while(start_1-repeat_1>min_1){start_1-=repeat_1}while(start_1<min_1){start_1+=repeat_1}for(i_1=start_1;i_1<max_1;i_1+=repeat_1){breakArrayT_1.push({value:i_1,move:"in"});breakArrayT_1.push({value:i_1+brk.to-brk.from,move:"out",size:brk.breakSize})}}});breakArrayT_1.sort(function(a,b){return a.value===b.value?(a.move==="in"?0:1)-(b.move==="in"?0:1):a.value-b.value});inBrk_1=0;start_1=min_1;breakArrayT_1.forEach(function(brk){inBrk_1+=brk.move==="in"?1:-1;if(inBrk_1===1&&brk.move==="in"){start_1=brk.value}if(inBrk_1===0&&isNumber(start_1)){breakArray_1.push({from:start_1,to:brk.value,len:brk.value-start_1-(brk.size||0)});length_1+=brk.value-start_1-(brk.size||0)}});brokenAxis.breakArray=breakArray_1;if(isNumber(min_1)&&isNumber(max_1)&&isNumber(axis.min)){brokenAxis.unitLength=max_1-min_1-length_1+pointRangePadding;fireEvent(axis,"afterBreaks");if(axis.staticScale){axis.transA=axis.staticScale}else if(brokenAxis.unitLength){axis.transA*=(max_1-axis.min+pointRangePadding)/brokenAxis.unitLength}if(pointRangePadding){axis.minPixelPadding=axis.transA*(axis.minPointOffset||0)}axis.min=min_1;axis.max=max_1}}}}if(pick(redraw,true)){axis.chart.redraw()}};return Additions}();BrokenAxis.Additions=Additions})(BrokenAxis||(BrokenAxis={}));export default BrokenAxis;