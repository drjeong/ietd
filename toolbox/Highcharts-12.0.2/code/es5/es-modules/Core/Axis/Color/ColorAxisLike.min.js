"use strict";import Color from"../../Color/Color.js";var color=Color.parse;import U from"../../Utilities.js";var merge=U.merge;var ColorAxisLike;(function(ColorAxisLike){function initDataClasses(userOptions){var axis=this,chart=axis.chart,legendItem=axis.legendItem=axis.legendItem||{},options=axis.options,userDataClasses=userOptions.dataClasses||[];var dataClass,dataClasses,colorCount=chart.options.chart.colorCount,colorCounter=0,colors;axis.dataClasses=dataClasses=[];legendItem.labels=[];for(var i=0,iEnd=userDataClasses.length;i<iEnd;++i){dataClass=userDataClasses[i];dataClass=merge(dataClass);dataClasses.push(dataClass);if(!chart.styledMode&&dataClass.color){continue}if(options.dataClassColor==="category"){if(!chart.styledMode){colors=chart.options.colors||[];colorCount=colors.length;dataClass.color=colors[colorCounter]}dataClass.colorIndex=colorCounter;colorCounter++;if(colorCounter===colorCount){colorCounter=0}}else{dataClass.color=color(options.minColor).tweenTo(color(options.maxColor),iEnd<2?.5:i/(iEnd-1))}}}ColorAxisLike.initDataClasses=initDataClasses;function initStops(){var axis=this,options=axis.options,stops=axis.stops=options.stops||[[0,options.minColor||""],[1,options.maxColor||""]];for(var i=0,iEnd=stops.length;i<iEnd;++i){stops[i].color=color(stops[i][1])}}ColorAxisLike.initStops=initStops;function normalizedValue(value){var axis=this,max=axis.max||0,min=axis.min||0;if(axis.logarithmic){value=axis.logarithmic.log2lin(value)}return 1-(max-value)/(max-min||1)}ColorAxisLike.normalizedValue=normalizedValue;function toColor(value,point){var axis=this;var dataClasses=axis.dataClasses;var stops=axis.stops;var pos,from,to,color,dataClass,i;if(dataClasses){i=dataClasses.length;while(i--){dataClass=dataClasses[i];from=dataClass.from;to=dataClass.to;if((typeof from==="undefined"||value>=from)&&(typeof to==="undefined"||value<=to)){color=dataClass.color;if(point){point.dataClass=i;point.colorIndex=dataClass.colorIndex}break}}}else{pos=axis.normalizedValue(value);i=stops.length;while(i--){if(pos>stops[i][0]){break}}from=stops[i]||stops[i+1];to=stops[i+1]||from;pos=1-(to[0]-pos)/(to[0]-from[0]||1);color=from.color.tweenTo(to.color,pos)}return color}ColorAxisLike.toColor=toColor})(ColorAxisLike||(ColorAxisLike={}));export default ColorAxisLike;