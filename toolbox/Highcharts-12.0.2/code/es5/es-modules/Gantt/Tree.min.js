"use strict";var __rest=this&&this.__rest||function(s,e){var t={};for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0)t[p]=s[p];if(s!=null&&typeof Object.getOwnPropertySymbols==="function")for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++){if(e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i]))t[p[i]]=s[p[i]]}return t};import U from"../Core/Utilities.js";var extend=U.extend,isNumber=U.isNumber,pick=U.pick;function getListOfParents(data){var root="",ids=[],listOfParents=data.reduce(function(prev,curr){var _a=curr.parent,parent=_a===void 0?"":_a,id=curr.id;if(typeof prev[parent]==="undefined"){prev[parent]=[]}prev[parent].push(curr);if(id){ids.push(id)}return prev},{});Object.keys(listOfParents).forEach(function(node){var _a;if(node!==root&&ids.indexOf(node)===-1){var adoptedByRoot=listOfParents[node].map(function(orphan){var parentExcluded=__rest(orphan,[]);return parentExcluded});(_a=listOfParents[root]).push.apply(_a,adoptedByRoot);delete listOfParents[node]}});return listOfParents}function getNode(id,parent,level,data,mapOfIdToChildren,options){var after=options&&options.after,before=options&&options.before,node={data:data,depth:level-1,id:id,level:level,parent:parent||""};var descendants=0,height=0,start,end;if(typeof before==="function"){before(node,options)}var children=(mapOfIdToChildren[id]||[]).map(function(child){var node=getNode(child.id,id,level+1,child,mapOfIdToChildren,options),childStart=child.start||NaN,childEnd=child.milestone===true?childStart:child.end||NaN;start=!isNumber(start)||childStart<start?childStart:start;end=!isNumber(end)||childEnd>end?childEnd:end;descendants=descendants+1+node.descendants;height=Math.max(node.height+1,height);return node});if(data){data.start=pick(data.start,start);data.end=pick(data.end,end)}extend(node,{children:children,descendants:descendants,height:height});if(typeof after==="function"){after(node,options)}return node}function getTree(data,options){return getNode("",null,1,null,getListOfParents(data),options)}var Tree={getNode:getNode,getTree:getTree};export default Tree;