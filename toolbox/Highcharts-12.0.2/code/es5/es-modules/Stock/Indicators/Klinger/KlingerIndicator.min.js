"use strict";var __extends=this&&this.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p]};return extendStatics(d,b)};return function(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}}();import MultipleLinesComposition from"../MultipleLinesComposition.js";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";var _a=SeriesRegistry.seriesTypes,EMAIndicator=_a.ema,SMAIndicator=_a.sma;import U from"../../../Core/Utilities.js";var correctFloat=U.correctFloat,error=U.error,extend=U.extend,isArray=U.isArray,merge=U.merge;var KlingerIndicator=function(_super){__extends(KlingerIndicator,_super);function KlingerIndicator(){return _super!==null&&_super.apply(this,arguments)||this}KlingerIndicator.prototype.calculateTrend=function(yVal,i){var isUpward=yVal[i][1]+yVal[i][2]+yVal[i][3]>yVal[i-1][1]+yVal[i-1][2]+yVal[i-1][3];return isUpward?1:-1};KlingerIndicator.prototype.isValidData=function(firstYVal){var chart=this.chart,options=this.options,series=this.linkedParent,isSeriesOHLC=isArray(firstYVal)&&firstYVal.length===4,volumeSeries=this.volumeSeries||(this.volumeSeries=chart.get(options.params.volumeSeriesID));if(!volumeSeries){error("Series "+options.params.volumeSeriesID+" not found! Check `volumeSeriesID`.",true,series.chart)}var isLengthValid=[series,volumeSeries].every(function(series){return series&&series.dataTable.rowCount>=options.params.slowAvgPeriod});return!!(isLengthValid&&isSeriesOHLC)};KlingerIndicator.prototype.getCM=function(previousCM,DM,trend,previousTrend,prevoiusDM){return correctFloat(DM+(trend===previousTrend?previousCM:prevoiusDM))};KlingerIndicator.prototype.getDM=function(high,low){return correctFloat(high-low)};KlingerIndicator.prototype.getVolumeForce=function(yVal){var volumeForce=[];var CM=0,DM,force,i=1,previousCM=0,previousDM=yVal[0][1]-yVal[0][2],previousTrend=0,trend;for(i;i<yVal.length;i++){trend=this.calculateTrend(yVal,i);DM=this.getDM(yVal[i][1],yVal[i][2]);CM=this.getCM(previousCM,DM,trend,previousTrend,previousDM);force=this.volumeSeries.getColumn("y")[i]*trend*Math.abs(2*(DM/CM-1))*100;volumeForce.push([force]);previousTrend=trend;previousCM=CM;previousDM=DM}return volumeForce};KlingerIndicator.prototype.getEMA=function(yVal,prevEMA,SMA,EMApercent,index,i,xVal){return EMAIndicator.prototype.calculateEma(xVal||[],yVal,typeof i==="undefined"?1:i,EMApercent,prevEMA,typeof index==="undefined"?-1:index,SMA)};KlingerIndicator.prototype.getSMA=function(period,index,values){return EMAIndicator.prototype.accumulatePeriodPoints(period,index,values)/period};KlingerIndicator.prototype.getValues=function(series,params){var Klinger=[],xVal=series.xData,yVal=series.yData,xData=[],yData=[],calcSingal=[];var KO,i=0,fastEMA=0,slowEMA,previousFastEMA=void 0,previousSlowEMA=void 0,signal=null;if(!this.isValidData(yVal[0])){return}var volumeForce=this.getVolumeForce(yVal);var SMAFast=this.getSMA(params.fastAvgPeriod,0,volumeForce),SMASlow=this.getSMA(params.slowAvgPeriod,0,volumeForce);var fastEMApercent=2/(params.fastAvgPeriod+1),slowEMApercent=2/(params.slowAvgPeriod+1);for(i;i<yVal.length;i++){if(i>=params.fastAvgPeriod){fastEMA=this.getEMA(volumeForce,previousFastEMA,SMAFast,fastEMApercent,0,i,xVal)[1];previousFastEMA=fastEMA}if(i>=params.slowAvgPeriod){slowEMA=this.getEMA(volumeForce,previousSlowEMA,SMASlow,slowEMApercent,0,i,xVal)[1];previousSlowEMA=slowEMA;KO=correctFloat(fastEMA-slowEMA);calcSingal.push(KO);if(calcSingal.length>=params.signalPeriod){signal=calcSingal.slice(-params.signalPeriod).reduce(function(prev,curr){return prev+curr})/params.signalPeriod}Klinger.push([xVal[i],KO,signal]);xData.push(xVal[i]);yData.push([KO,signal])}}return{values:Klinger,xData:xData,yData:yData}};KlingerIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{fastAvgPeriod:34,slowAvgPeriod:55,signalPeriod:13,volumeSeriesID:"volume"},signalLine:{styles:{lineWidth:1,lineColor:"#ff0000"}},dataGrouping:{approximation:"averages"},tooltip:{pointFormat:'<span style="color: {point.color}">‚óè</span>'+"<b> {series.name}</b><br/>"+'<span style="color: {point.color}">Klinger</span>: '+"{point.y}<br/>"+'<span style="color: '+'{point.series.options.signalLine.styles.lineColor}">'+"Signal</span>"+": {point.signal}<br/>"}});return KlingerIndicator}(SMAIndicator);extend(KlingerIndicator.prototype,{areaLinesNames:[],linesApiNames:["signalLine"],nameBase:"Klinger",nameComponents:["fastAvgPeriod","slowAvgPeriod"],pointArrayMap:["y","signal"],parallelArrays:["x","y","signal"],pointValKey:"y"});MultipleLinesComposition.compose(KlingerIndicator);SeriesRegistry.registerSeriesType("klinger",KlingerIndicator);export default KlingerIndicator;"";