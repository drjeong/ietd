"use strict";var __extends=this&&this.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p]};return extendStatics(d,b)};return function(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}}();import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";var SMAIndicator=SeriesRegistry.seriesTypes.sma;import U from"../../../Core/Utilities.js";var error=U.error,isArray=U.isArray,merge=U.merge;var VWAPIndicator=function(_super){__extends(VWAPIndicator,_super);function VWAPIndicator(){return _super!==null&&_super.apply(this,arguments)||this}VWAPIndicator.prototype.getValues=function(series,params){var indicator=this,chart=series.chart,xValues=series.xData,yValues=series.yData,period=params.period;var isOHLC=true,volumeSeries;if(!(volumeSeries=chart.get(params.volumeSeriesID))){error("Series "+params.volumeSeriesID+" not found! Check `volumeSeriesID`.",true,chart);return}if(!isArray(yValues[0])){isOHLC=false}return indicator.calculateVWAPValues(isOHLC,xValues,yValues,volumeSeries,period)};VWAPIndicator.prototype.calculateVWAPValues=function(isOHLC,xValues,yValues,volumeSeries,period){var volumeValues=volumeSeries.getColumn("y"),volumeLength=volumeValues.length,pointsLength=xValues.length,cumulativePrice=[],cumulativeVolume=[],xData=[],yData=[],VWAP=[];var commonLength,typicalPrice,cPrice,cVolume,i,j;if(pointsLength<=volumeLength){commonLength=pointsLength}else{commonLength=volumeLength}for(i=0,j=0;i<commonLength;i++){typicalPrice=isOHLC?(yValues[i][1]+yValues[i][2]+yValues[i][3])/3:yValues[i];typicalPrice*=volumeValues[i];cPrice=j?cumulativePrice[i-1]+typicalPrice:typicalPrice;cVolume=j?cumulativeVolume[i-1]+volumeValues[i]:volumeValues[i];cumulativePrice.push(cPrice);cumulativeVolume.push(cVolume);VWAP.push([xValues[i],cPrice/cVolume]);xData.push(VWAP[i][0]);yData.push(VWAP[i][1]);j++;if(j===period){j=0}}return{values:VWAP,xData:xData,yData:yData}};VWAPIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{index:void 0,period:30,volumeSeriesID:"volume"}});return VWAPIndicator}(SMAIndicator);SeriesRegistry.registerSeriesType("vwap",VWAPIndicator);export default VWAPIndicator;"";