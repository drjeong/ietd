"use strict";var __extends=this&&this.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p]};return extendStatics(d,b)};return function(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}}();import MultipleLinesComposition from"../MultipleLinesComposition.js";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";var SMAIndicator=SeriesRegistry.seriesTypes.sma;import U from"../../../Core/Utilities.js";var correctFloat=U.correctFloat,extend=U.extend,merge=U.merge;function getBaseForBand(low,high,factor){return correctFloat(high-low)/(correctFloat(high+low)/2)*1e3*factor}function getPointUB(high,base){return high*correctFloat(1+2*base)}function getPointLB(low,base){return low*correctFloat(1-2*base)}var ABandsIndicator=function(_super){__extends(ABandsIndicator,_super);function ABandsIndicator(){return _super!==null&&_super.apply(this,arguments)||this}ABandsIndicator.prototype.getValues=function(series,params){var period=params.period,factor=params.factor,index=params.index,xVal=series.xData,yVal=series.yData,yValLen=yVal?yVal.length:0,UB=[],LB=[],ABANDS=[],low=2,high=1,xData=[],yData=[];var ML,TL,BL,date,bandBase,pointSMA,ubSMA,lbSMA,slicedX,slicedY,i;if(yValLen<period){return}for(i=0;i<=yValLen;i++){if(i<yValLen){bandBase=getBaseForBand(yVal[i][low],yVal[i][high],factor);UB.push(getPointUB(yVal[i][high],bandBase));LB.push(getPointLB(yVal[i][low],bandBase))}if(i>=period){slicedX=xVal.slice(i-period,i);slicedY=yVal.slice(i-period,i);ubSMA=_super.prototype.getValues.call(this,{xData:slicedX,yData:UB.slice(i-period,i)},{period:period});lbSMA=_super.prototype.getValues.call(this,{xData:slicedX,yData:LB.slice(i-period,i)},{period:period});pointSMA=_super.prototype.getValues.call(this,{xData:slicedX,yData:slicedY},{period:period,index:index});date=pointSMA.xData[0];TL=ubSMA.yData[0];BL=lbSMA.yData[0];ML=pointSMA.yData[0];ABANDS.push([date,TL,ML,BL]);xData.push(date);yData.push([TL,ML,BL])}}return{values:ABANDS,xData:xData,yData:yData}};ABandsIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{period:20,factor:.001,index:3},lineWidth:1,topLine:{styles:{lineWidth:1}},bottomLine:{styles:{lineWidth:1}},dataGrouping:{approximation:"averages"}});return ABandsIndicator}(SMAIndicator);extend(ABandsIndicator.prototype,{areaLinesNames:["top","bottom"],linesApiNames:["topLine","bottomLine"],nameBase:"Acceleration Bands",nameComponents:["period","factor"],pointArrayMap:["top","middle","bottom"],pointValKey:"middle"});MultipleLinesComposition.compose(ABandsIndicator);SeriesRegistry.registerSeriesType("abands",ABandsIndicator);export default ABandsIndicator;"";