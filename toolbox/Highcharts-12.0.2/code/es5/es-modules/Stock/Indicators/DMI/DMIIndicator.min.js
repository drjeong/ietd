"use strict";var __extends=this&&this.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p]};return extendStatics(d,b)};return function(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}}();import MultipleLinesComposition from"../MultipleLinesComposition.js";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";var SMAIndicator=SeriesRegistry.seriesTypes.sma;import U from"../../../Core/Utilities.js";var correctFloat=U.correctFloat,extend=U.extend,isArray=U.isArray,merge=U.merge;var DMIIndicator=function(_super){__extends(DMIIndicator,_super);function DMIIndicator(){return _super!==null&&_super.apply(this,arguments)||this}DMIIndicator.prototype.calculateDM=function(yVal,i,isPositiveDM){var currentHigh=yVal[i][1],currentLow=yVal[i][2],previousHigh=yVal[i-1][1],previousLow=yVal[i-1][2];var DM;if(currentHigh-previousHigh>previousLow-currentLow){DM=isPositiveDM?Math.max(currentHigh-previousHigh,0):0}else{DM=!isPositiveDM?Math.max(previousLow-currentLow,0):0}return correctFloat(DM)};DMIIndicator.prototype.calculateDI=function(smoothedDM,tr){return smoothedDM/tr*100};DMIIndicator.prototype.calculateDX=function(plusDI,minusDI){return correctFloat(Math.abs(plusDI-minusDI)/Math.abs(plusDI+minusDI)*100)};DMIIndicator.prototype.smoothValues=function(accumulatedValues,currentValue,period){return correctFloat(accumulatedValues-accumulatedValues/period+currentValue)};DMIIndicator.prototype.getTR=function(currentPoint,prevPoint){return correctFloat(Math.max(currentPoint[1]-currentPoint[2],!prevPoint?0:Math.abs(currentPoint[1]-prevPoint[3]),!prevPoint?0:Math.abs(currentPoint[2]-prevPoint[3])))};DMIIndicator.prototype.getValues=function(series,params){var period=params.period,xVal=series.xData,yVal=series.yData,yValLen=yVal?yVal.length:0,DMI=[],xData=[],yData=[];if(xVal.length<=period||!isArray(yVal[0])||yVal[0].length!==4){return}var prevSmoothedPlusDM=0,prevSmoothedMinusDM=0,prevSmoothedTR=0,i;for(i=1;i<yValLen;i++){var smoothedPlusDM=void 0,smoothedMinusDM=void 0,smoothedTR=void 0,plusDM=void 0,minusDM=void 0,TR=void 0,plusDI=void 0,minusDI=void 0,DX=void 0;if(i<=period){plusDM=this.calculateDM(yVal,i,true);minusDM=this.calculateDM(yVal,i);TR=this.getTR(yVal[i],yVal[i-1]);prevSmoothedPlusDM+=plusDM;prevSmoothedMinusDM+=minusDM;prevSmoothedTR+=TR;if(i===period){plusDI=this.calculateDI(prevSmoothedPlusDM,prevSmoothedTR);minusDI=this.calculateDI(prevSmoothedMinusDM,prevSmoothedTR);DX=this.calculateDX(prevSmoothedPlusDM,prevSmoothedMinusDM);DMI.push([xVal[i],DX,plusDI,minusDI]);xData.push(xVal[i]);yData.push([DX,plusDI,minusDI])}}else{plusDM=this.calculateDM(yVal,i,true);minusDM=this.calculateDM(yVal,i);TR=this.getTR(yVal[i],yVal[i-1]);smoothedPlusDM=this.smoothValues(prevSmoothedPlusDM,plusDM,period);smoothedMinusDM=this.smoothValues(prevSmoothedMinusDM,minusDM,period);smoothedTR=this.smoothValues(prevSmoothedTR,TR,period);prevSmoothedPlusDM=smoothedPlusDM;prevSmoothedMinusDM=smoothedMinusDM;prevSmoothedTR=smoothedTR;plusDI=this.calculateDI(prevSmoothedPlusDM,prevSmoothedTR);minusDI=this.calculateDI(prevSmoothedMinusDM,prevSmoothedTR);DX=this.calculateDX(prevSmoothedPlusDM,prevSmoothedMinusDM);DMI.push([xVal[i],DX,plusDI,minusDI]);xData.push(xVal[i]);yData.push([DX,plusDI,minusDI])}}return{values:DMI,xData:xData,yData:yData}};DMIIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{index:void 0},marker:{enabled:false},tooltip:{pointFormat:'<span style="color: {point.color}">'+"‚óè</span><b> {series.name}</b><br/>"+'<span style="color: {point.color}">DX</span>: {point.y}<br/>'+'<span style="color: '+'{point.series.options.plusDILine.styles.lineColor}">'+"+DI</span>: {point.plusDI}<br/>"+'<span style="color: '+'{point.series.options.minusDILine.styles.lineColor}">'+"-DI</span>: {point.minusDI}<br/>"},plusDILine:{styles:{lineWidth:1,lineColor:"#06b535"}},minusDILine:{styles:{lineWidth:1,lineColor:"#f21313"}},dataGrouping:{approximation:"averages"}});return DMIIndicator}(SMAIndicator);extend(DMIIndicator.prototype,{areaLinesNames:[],nameBase:"DMI",linesApiNames:["plusDILine","minusDILine"],pointArrayMap:["y","plusDI","minusDI"],parallelArrays:["x","y","plusDI","minusDI"],pointValKey:"y"});MultipleLinesComposition.compose(DMIIndicator);SeriesRegistry.registerSeriesType("dmi",DMIIndicator);export default DMIIndicator;"";