"use strict";var __extends=this&&this.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p]};return extendStatics(d,b)};return function(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}}();import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";var SMAIndicator=SeriesRegistry.seriesTypes.sma;import U from"../../../Core/Utilities.js";var isArray=U.isArray,merge=U.merge;function accumulateAverage(points,xVal,yVal,i,index){var xValue=xVal[i],yValue=index<0?yVal[i]:yVal[i][index];points.push([xValue,yValue])}function weightedSumArray(array,pLen){var denominator=(pLen+1)/2*pLen;return array.reduce(function(prev,cur,i){return[null,prev[1]+cur[1]*(i+1)]})[1]/denominator}function populateAverage(points,xVal,yVal,i){var pLen=points.length,wmaY=weightedSumArray(points,pLen),wmaX=xVal[i-1];points.shift();return[wmaX,wmaY]}var WMAIndicator=function(_super){__extends(WMAIndicator,_super);function WMAIndicator(){return _super!==null&&_super.apply(this,arguments)||this}WMAIndicator.prototype.getValues=function(series,params){var period=params.period,xVal=series.xData,yVal=series.yData,yValLen=yVal?yVal.length:0,xValue=xVal[0],wma=[],xData=[],yData=[];var range=1,index=-1,i,wmaPoint,yValue=yVal[0];if(xVal.length<period){return}if(isArray(yVal[0])){index=params.index;yValue=yVal[0][index]}var points=[[xValue,yValue]];while(range!==period){accumulateAverage(points,xVal,yVal,range,index);range++}for(i=range;i<yValLen;i++){wmaPoint=populateAverage(points,xVal,yVal,i);wma.push(wmaPoint);xData.push(wmaPoint[0]);yData.push(wmaPoint[1]);accumulateAverage(points,xVal,yVal,i,index)}wmaPoint=populateAverage(points,xVal,yVal,i);wma.push(wmaPoint);xData.push(wmaPoint[0]);yData.push(wmaPoint[1]);return{values:wma,xData:xData,yData:yData}};WMAIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{index:3,period:9}});return WMAIndicator}(SMAIndicator);SeriesRegistry.registerSeriesType("wma",WMAIndicator);export default WMAIndicator;"";