"use strict";var __extends=this&&this.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p]};return extendStatics(d,b)};return function(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}}();import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";var SMAIndicator=SeriesRegistry.seriesTypes.sma;import U from"../../../Core/Utilities.js";var merge=U.merge,extend=U.extend;var ZigzagIndicator=function(_super){__extends(ZigzagIndicator,_super);function ZigzagIndicator(){return _super!==null&&_super.apply(this,arguments)||this}ZigzagIndicator.prototype.getValues=function(series,params){var lowIndex=params.lowIndex,highIndex=params.highIndex,deviation=params.deviation/100,deviations={low:1+deviation,high:1-deviation},xVal=series.xData,yVal=series.yData,yValLen=yVal?yVal.length:0,zigzag=[],xData=[],yData=[];var i,j,zigzagPoint,directionUp,exitLoop=false,yIndex=false;if(!xVal||xVal.length<=1||yValLen&&(typeof yVal[0][lowIndex]==="undefined"||typeof yVal[0][highIndex]==="undefined")){return}var firstZigzagLow=yVal[0][lowIndex],firstZigzagHigh=yVal[0][highIndex];for(i=1;i<yValLen;i++){if(yVal[i][lowIndex]<=firstZigzagHigh*deviations.high){zigzag.push([xVal[0],firstZigzagHigh]);zigzagPoint=[xVal[i],yVal[i][lowIndex]];directionUp=true;exitLoop=true}else if(yVal[i][highIndex]>=firstZigzagLow*deviations.low){zigzag.push([xVal[0],firstZigzagLow]);zigzagPoint=[xVal[i],yVal[i][highIndex]];directionUp=false;exitLoop=true}if(exitLoop){xData.push(zigzag[0][0]);yData.push(zigzag[0][1]);j=i++;i=yValLen}}for(i=j;i<yValLen;i++){if(directionUp){if(yVal[i][lowIndex]<=zigzagPoint[1]){zigzagPoint=[xVal[i],yVal[i][lowIndex]]}if(yVal[i][highIndex]>=zigzagPoint[1]*deviations.low){yIndex=highIndex}}else{if(yVal[i][highIndex]>=zigzagPoint[1]){zigzagPoint=[xVal[i],yVal[i][highIndex]]}if(yVal[i][lowIndex]<=zigzagPoint[1]*deviations.high){yIndex=lowIndex}}if(yIndex!==false){zigzag.push(zigzagPoint);xData.push(zigzagPoint[0]);yData.push(zigzagPoint[1]);zigzagPoint=[xVal[i],yVal[i][yIndex]];directionUp=!directionUp;yIndex=false}}var zigzagLen=zigzag.length;if(zigzagLen!==0&&zigzag[zigzagLen-1][0]<xVal[yValLen-1]){zigzag.push(zigzagPoint);xData.push(zigzagPoint[0]);yData.push(zigzagPoint[1])}return{values:zigzag,xData:xData,yData:yData}};ZigzagIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{index:void 0,period:void 0,lowIndex:2,highIndex:1,deviation:1}});return ZigzagIndicator}(SMAIndicator);extend(ZigzagIndicator.prototype,{nameComponents:["deviation"],nameSuffixes:["%"],nameBase:"Zig Zag"});SeriesRegistry.registerSeriesType("zigzag",ZigzagIndicator);export default ZigzagIndicator;"";