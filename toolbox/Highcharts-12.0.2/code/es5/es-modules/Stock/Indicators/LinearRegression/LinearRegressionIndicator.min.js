"use strict";var __extends=this&&this.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p]};return extendStatics(d,b)};return function(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}}();import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";var SMAIndicator=SeriesRegistry.seriesTypes.sma;import U from"../../../Core/Utilities.js";var isArray=U.isArray,extend=U.extend,merge=U.merge;var LinearRegressionIndicator=function(_super){__extends(LinearRegressionIndicator,_super);function LinearRegressionIndicator(){return _super!==null&&_super.apply(this,arguments)||this}LinearRegressionIndicator.prototype.getRegressionLineParameters=function(xData,yData){var yIndex=this.options.params.index,getSingleYValue=function(yValue,yIndex){return isArray(yValue)?yValue[yIndex]:yValue},xSum=xData.reduce(function(accX,val){return val+accX},0),ySum=yData.reduce(function(accY,val){return getSingleYValue(val,yIndex)+accY},0),xMean=xSum/xData.length,yMean=ySum/yData.length;var xError,yError,i,formulaNumerator=0,formulaDenominator=0;for(i=0;i<xData.length;i++){xError=xData[i]-xMean;yError=getSingleYValue(yData[i],yIndex)-yMean;formulaNumerator+=xError*yError;formulaDenominator+=Math.pow(xError,2)}var slope=formulaDenominator?formulaNumerator/formulaDenominator:0;return{slope:slope,intercept:yMean-slope*xMean}};LinearRegressionIndicator.prototype.getEndPointY=function(lineParameters,endPointX){return lineParameters.slope*endPointX+lineParameters.intercept};LinearRegressionIndicator.prototype.transformXData=function(xData,xAxisUnit){var xOffset=xData[0];return xData.map(function(xValue){return(xValue-xOffset)/xAxisUnit})};LinearRegressionIndicator.prototype.findClosestDistance=function(xData){var distance,closestDistance,i;for(i=1;i<xData.length-1;i++){distance=xData[i]-xData[i-1];if(distance>0&&(typeof closestDistance==="undefined"||distance<closestDistance)){closestDistance=distance}}return closestDistance};LinearRegressionIndicator.prototype.getValues=function(baseSeries,regressionSeriesParams){var xData=baseSeries.xData,yData=baseSeries.yData,period=regressionSeriesParams.period,indicatorData={xData:[],yData:[],values:[]},xAxisUnit=this.options.params.xAxisUnit||this.findClosestDistance(xData);var lineParameters,i,periodStart,periodEnd,endPointX,endPointY,periodXData,periodYData,periodTransformedXData;for(i=period-1;i<=xData.length-1;i++){periodStart=i-period+1;periodEnd=i+1;endPointX=xData[i];periodXData=xData.slice(periodStart,periodEnd);periodYData=yData.slice(periodStart,periodEnd);periodTransformedXData=this.transformXData(periodXData,xAxisUnit);lineParameters=this.getRegressionLineParameters(periodTransformedXData,periodYData);endPointY=this.getEndPointY(lineParameters,periodTransformedXData[periodTransformedXData.length-1]);indicatorData.values.push({regressionLineParameters:lineParameters,x:endPointX,y:endPointY});if(isArray(indicatorData.xData)){indicatorData.xData.push(endPointX)}if(isArray(indicatorData.yData)){indicatorData.yData.push(endPointY)}}return indicatorData};LinearRegressionIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{xAxisUnit:null},tooltip:{valueDecimals:4}});return LinearRegressionIndicator}(SMAIndicator);extend(LinearRegressionIndicator.prototype,{nameBase:"Linear Regression Indicator"});SeriesRegistry.registerSeriesType("linearRegression",LinearRegressionIndicator);export default LinearRegressionIndicator;"";