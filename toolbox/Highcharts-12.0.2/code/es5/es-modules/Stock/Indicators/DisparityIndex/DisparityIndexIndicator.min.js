"use strict";var __extends=this&&this.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p]};return extendStatics(d,b)};return function(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}}();import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";var SMAIndicator=SeriesRegistry.seriesTypes.sma;import U from"../../../Core/Utilities.js";var correctFloat=U.correctFloat,defined=U.defined,extend=U.extend,isArray=U.isArray,merge=U.merge;var DisparityIndexIndicator=function(_super){__extends(DisparityIndexIndicator,_super);function DisparityIndexIndicator(){return _super!==null&&_super.apply(this,arguments)||this}DisparityIndexIndicator.prototype.init=function(){var args=arguments,ctx=this,params=args[1].params,averageType=params&&params.average?params.average:void 0;ctx.averageIndicator=SeriesRegistry.seriesTypes[averageType]||SMAIndicator;ctx.averageIndicator.prototype.init.apply(ctx,args)};DisparityIndexIndicator.prototype.calculateDisparityIndex=function(curPrice,periodAverage){return correctFloat(curPrice-periodAverage)/periodAverage*100};DisparityIndexIndicator.prototype.getValues=function(series,params){var index=params.index,xVal=series.xData,yVal=series.yData,yValLen=yVal?yVal.length:0,disparityIndexPoint=[],xData=[],yData=[],averageIndicator=this.averageIndicator,isOHLC=isArray(yVal[0]),values=averageIndicator.prototype.getValues(series,params),yValues=values.yData,start=xVal.indexOf(values.xData[0]);if(!yValues||yValues.length===0||!defined(index)||yVal.length<=start){return}for(var i=start;i<yValLen;i++){var disparityIndexValue=this.calculateDisparityIndex(isOHLC?yVal[i][index]:yVal[i],yValues[i-start]);disparityIndexPoint.push([xVal[i],disparityIndexValue]);xData.push(xVal[i]);yData.push(disparityIndexValue)}return{values:disparityIndexPoint,xData:xData,yData:yData}};DisparityIndexIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{average:"sma",index:3},marker:{enabled:false},dataGrouping:{approximation:"averages"}});return DisparityIndexIndicator}(SMAIndicator);extend(DisparityIndexIndicator.prototype,{nameBase:"Disparity Index",nameComponents:["period","average"]});SeriesRegistry.registerSeriesType("disparityindex",DisparityIndexIndicator);export default DisparityIndexIndicator;"";