"use strict";var __extends=this&&this.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p]};return extendStatics(d,b)};return function(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}}();import PivotPointsPoint from"./PivotPointsPoint.js";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";var SMAIndicator=SeriesRegistry.seriesTypes.sma;import U from"../../../Core/Utilities.js";var merge=U.merge,extend=U.extend,defined=U.defined,isArray=U.isArray;var PivotPointsIndicator=function(_super){__extends(PivotPointsIndicator,_super);function PivotPointsIndicator(){return _super!==null&&_super.apply(this,arguments)||this}PivotPointsIndicator.prototype.toYData=function(point){return[point.P]};PivotPointsIndicator.prototype.translate=function(){var indicator=this;_super.prototype.translate.apply(indicator);indicator.points.forEach(function(point){indicator.pointArrayMap.forEach(function(value){if(defined(point[value])){point["plot"+value]=indicator.yAxis.toPixels(point[value],true)}})});indicator.plotEndPoint=indicator.xAxis.toPixels(indicator.endPoint,true)};PivotPointsIndicator.prototype.getGraphPath=function(points){var indicator=this,allPivotPoints=[[],[],[],[],[],[],[],[],[]],pointArrayMapLength=indicator.pointArrayMap.length;var endPoint=indicator.plotEndPoint,path=[],position,point,pointsLength=points.length,i;while(pointsLength--){point=points[pointsLength];for(i=0;i<pointArrayMapLength;i++){position=indicator.pointArrayMap[i];if(defined(point[position])){allPivotPoints[i].push({plotX:point.plotX,plotY:point["plot"+position],isNull:false},{plotX:endPoint,plotY:point["plot"+position],isNull:false},{plotX:endPoint,plotY:null,isNull:true})}}endPoint=point.plotX}allPivotPoints.forEach(function(pivotPoints){path=path.concat(_super.prototype.getGraphPath.call(indicator,pivotPoints))});return path};PivotPointsIndicator.prototype.drawDataLabels=function(){var indicator=this,pointMapping=indicator.pointArrayMap;var currentLabel,pointsLength,point,i;if(indicator.options.dataLabels.enabled){pointsLength=indicator.points.length;pointMapping.concat([false]).forEach(function(position,k){i=pointsLength;while(i--){point=indicator.points[i];if(!position){point["dataLabel"+pointMapping[k-1]]=point.dataLabel}else{point.y=point[position];point.pivotLine=position;point.plotY=point["plot"+position];currentLabel=point["dataLabel"+position];if(k){point["dataLabel"+pointMapping[k-1]]=point.dataLabel}if(!point.dataLabels){point.dataLabels=[]}point.dataLabels[0]=point.dataLabel=currentLabel=currentLabel&&currentLabel.element?currentLabel:null}}_super.prototype.drawDataLabels.call(indicator)})}};PivotPointsIndicator.prototype.getValues=function(series,params){var period=params.period,xVal=series.xData,yVal=series.yData,yValLen=yVal?yVal.length:0,placement=this[params.algorithm+"Placement"],PP=[],xData=[],yData=[];var endTimestamp,slicedXLen,slicedX,slicedY,lastPP,pivot,avg,i;if(xVal.length<period||!isArray(yVal[0])||yVal[0].length!==4){return}for(i=period+1;i<=yValLen+period;i+=period){slicedX=xVal.slice(i-period-1,i);slicedY=yVal.slice(i-period-1,i);slicedXLen=slicedX.length;endTimestamp=slicedX[slicedXLen-1];pivot=this.getPivotAndHLC(slicedY);avg=placement(pivot);lastPP=PP.push([endTimestamp].concat(avg));xData.push(endTimestamp);yData.push(PP[lastPP-1].slice(1))}this.endPoint=slicedX[0]+(endTimestamp-slicedX[0])/slicedXLen*period;return{values:PP,xData:xData,yData:yData}};PivotPointsIndicator.prototype.getPivotAndHLC=function(values){var close=values[values.length-1][3];var high=-Infinity,low=Infinity;values.forEach(function(p){high=Math.max(high,p[1]);low=Math.min(low,p[2])});var pivot=(high+low+close)/3;return[pivot,high,low,close]};PivotPointsIndicator.prototype.standardPlacement=function(values){var diff=values[1]-values[2],avg=[null,null,values[0]+diff,values[0]*2-values[2],values[0],values[0]*2-values[1],values[0]-diff,null,null];return avg};PivotPointsIndicator.prototype.camarillaPlacement=function(values){var diff=values[1]-values[2],avg=[values[3]+diff*1.5,values[3]+diff*1.25,values[3]+diff*1.1666,values[3]+diff*1.0833,values[0],values[3]-diff*1.0833,values[3]-diff*1.1666,values[3]-diff*1.25,values[3]-diff*1.5];return avg};PivotPointsIndicator.prototype.fibonacciPlacement=function(values){var diff=values[1]-values[2],avg=[null,values[0]+diff,values[0]+diff*.618,values[0]+diff*.382,values[0],values[0]-diff*.382,values[0]-diff*.618,values[0]-diff,null];return avg};PivotPointsIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{index:void 0,period:28,algorithm:"standard"},marker:{enabled:false},enableMouseTracking:false,dataLabels:{enabled:true,format:"{point.pivotLine}"},dataGrouping:{approximation:"averages"}});return PivotPointsIndicator}(SMAIndicator);extend(PivotPointsIndicator.prototype,{nameBase:"Pivot Points",pointArrayMap:["R4","R3","R2","R1","P","S1","S2","S3","S4"],pointValKey:"P",pointClass:PivotPointsPoint});SeriesRegistry.registerSeriesType("pivotpoints",PivotPointsIndicator);export default PivotPointsIndicator;"";