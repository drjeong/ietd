"use strict";var __extends=this&&this.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p]};return extendStatics(d,b)};return function(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}}();import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";var SMAIndicator=SeriesRegistry.seriesTypes.sma;import U from"../../../Core/Utilities.js";var isNumber=U.isNumber,merge=U.merge;function toFixed(a,n){return parseFloat(a.toFixed(n))}var RSIIndicator=function(_super){__extends(RSIIndicator,_super);function RSIIndicator(){return _super!==null&&_super.apply(this,arguments)||this}RSIIndicator.prototype.getValues=function(series,params){var period=params.period,xVal=series.xData,yVal=series.yData,yValLen=yVal?yVal.length:0,decimals=params.decimals,RSI=[],xData=[],yData=[];var gain=0,loss=0,index=params.index,range=1,RSIPoint,change,avgGain,avgLoss,i,values;if(xVal.length<period){return}if(isNumber(yVal[0])){values=yVal}else{index=Math.min(index,yVal[0].length-1);values=yVal.map(function(value){return value[index]})}while(range<period){change=toFixed(values[range]-values[range-1],decimals);if(change>0){gain+=change}else{loss+=Math.abs(change)}range++}avgGain=toFixed(gain/(period-1),decimals);avgLoss=toFixed(loss/(period-1),decimals);for(i=range;i<yValLen;i++){change=toFixed(values[i]-values[i-1],decimals);if(change>0){gain=change;loss=0}else{gain=0;loss=Math.abs(change)}avgGain=toFixed((avgGain*(period-1)+gain)/period,decimals);avgLoss=toFixed((avgLoss*(period-1)+loss)/period,decimals);if(avgLoss===0){RSIPoint=100}else if(avgGain===0){RSIPoint=0}else{RSIPoint=toFixed(100-100/(1+avgGain/avgLoss),decimals)}RSI.push([xVal[i],RSIPoint]);xData.push(xVal[i]);yData.push(RSIPoint)}return{values:RSI,xData:xData,yData:yData}};RSIIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{decimals:4,index:3}});return RSIIndicator}(SMAIndicator);SeriesRegistry.registerSeriesType("rsi",RSIIndicator);export default RSIIndicator;"";