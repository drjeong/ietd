"use strict";var __extends=this&&this.__extends||function(){var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p]};return extendStatics(d,b)};return function(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}}();import MultipleLinesComposition from"../MultipleLinesComposition.js";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";var SMAIndicator=SeriesRegistry.seriesTypes.sma;import U from"../../../Core/Utilities.js";var extend=U.extend,isArray=U.isArray,merge=U.merge;var PriceEnvelopesIndicator=function(_super){__extends(PriceEnvelopesIndicator,_super);function PriceEnvelopesIndicator(){return _super!==null&&_super.apply(this,arguments)||this}PriceEnvelopesIndicator.prototype.init=function(){_super.prototype.init.apply(this,arguments);this.options=merge({topLine:{styles:{lineColor:this.color}},bottomLine:{styles:{lineColor:this.color}}},this.options)};PriceEnvelopesIndicator.prototype.getValues=function(series,params){var period=params.period,topPercent=params.topBand,botPercent=params.bottomBand,xVal=series.xData,yVal=series.yData,yValLen=yVal?yVal.length:0,PE=[],xData=[],yData=[];var ML,TL,BL,date,slicedX,slicedY,point,i;if(xVal.length<period||!isArray(yVal[0])||yVal[0].length!==4){return}for(i=period;i<=yValLen;i++){slicedX=xVal.slice(i-period,i);slicedY=yVal.slice(i-period,i);point=_super.prototype.getValues.call(this,{xData:slicedX,yData:slicedY},params);date=point.xData[0];ML=point.yData[0];TL=ML*(1+topPercent);BL=ML*(1-botPercent);PE.push([date,TL,ML,BL]);xData.push(date);yData.push([TL,ML,BL])}return{values:PE,xData:xData,yData:yData}};PriceEnvelopesIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{marker:{enabled:false},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span><b> {series.name}</b><br/>Top: {point.top}<br/>Middle: {point.middle}<br/>Bottom: {point.bottom}<br/>'},params:{period:20,topBand:.1,bottomBand:.1},bottomLine:{styles:{lineWidth:1,lineColor:void 0}},topLine:{styles:{lineWidth:1}},dataGrouping:{approximation:"averages"}});return PriceEnvelopesIndicator}(SMAIndicator);extend(PriceEnvelopesIndicator.prototype,{areaLinesNames:["top","bottom"],linesApiNames:["topLine","bottomLine"],nameComponents:["period","topBand","bottomBand"],nameBase:"Price envelopes",pointArrayMap:["top","middle","bottom"],parallelArrays:["x","y","top","bottom"],pointValKey:"middle"});MultipleLinesComposition.compose(PriceEnvelopesIndicator);SeriesRegistry.registerSeriesType("priceenvelopes",PriceEnvelopesIndicator);export default PriceEnvelopesIndicator;"";