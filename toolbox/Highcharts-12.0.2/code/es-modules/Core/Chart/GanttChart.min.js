"use strict";import Chart from"./Chart.js";import D from"../Defaults.js";const{defaultOptions}=D;import U from"../Utilities.js";const{isArray,merge,splat}=U;class GanttChart extends Chart{init(userOptions,callback){const xAxisOptions=userOptions.xAxis,yAxisOptions=userOptions.yAxis;let defaultLinkedTo;userOptions.xAxis=userOptions.yAxis=void 0;const options=merge(true,{chart:{type:"gantt"},title:{text:""},legend:{enabled:false},navigator:{series:{type:"gantt"},yAxis:{type:"category"}}},userOptions,{isGantt:true});userOptions.xAxis=xAxisOptions;userOptions.yAxis=yAxisOptions;options.xAxis=(!isArray(userOptions.xAxis)?[userOptions.xAxis||{},{}]:userOptions.xAxis).map((xAxisOptions,i)=>{if(i===1){defaultLinkedTo=0}return merge({grid:{borderColor:"#cccccc",enabled:true},opposite:defaultOptions.xAxis?.opposite??xAxisOptions.opposite??true,linkedTo:defaultLinkedTo},xAxisOptions,{type:"datetime"})});options.yAxis=splat(userOptions.yAxis||{}).map(yAxisOptions=>merge({grid:{borderColor:"#cccccc",enabled:true},staticScale:50,reversed:true,type:yAxisOptions.categories?yAxisOptions.type:"treegrid"},yAxisOptions));super.init(options,callback)}}(function(GanttChart){function ganttChart(a,b,c){return new GanttChart(a,b,c)}GanttChart.ganttChart=ganttChart})(GanttChart||(GanttChart={}));export default GanttChart;