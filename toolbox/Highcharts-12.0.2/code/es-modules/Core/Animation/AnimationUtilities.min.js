"use strict";import Fx from"./Fx.js";import U from"../Utilities.js";const{defined,getStyle,isArray,isNumber,isObject,merge,objectEach,pick}=U;function setAnimation(animation,chart){chart.renderer.globalAnimation=pick(animation,chart.options.chart.animation,true)}function animObject(animation){return isObject(animation)?merge({duration:500,defer:0},animation):{duration:animation?500:0,defer:0}}function getDeferredAnimation(chart,animation,series){const labelAnimation=animObject(animation),s=series?[series]:chart.series;let defer=0,duration=0;s.forEach(series=>{const seriesAnim=animObject(series.options.animation);defer=isObject(animation)&&defined(animation.defer)?labelAnimation.defer:Math.max(defer,seriesAnim.duration+seriesAnim.defer);duration=Math.min(labelAnimation.duration,seriesAnim.duration)});if(chart.renderer.forExport){defer=0}const anim={defer:Math.max(0,defer-duration),duration:Math.min(defer,duration)};return anim}function animate(el,params,opt){let start,unit="",end,fx,args;if(!isObject(opt)){args=arguments;opt={duration:args[2],easing:args[3],complete:args[4]}}if(!isNumber(opt.duration)){opt.duration=400}opt.easing=typeof opt.easing==="function"?opt.easing:Math[opt.easing]||Math.easeInOutSine;opt.curAnim=merge(params);objectEach(params,function(val,prop){stop(el,prop);fx=new Fx(el,opt,prop);end=void 0;if(prop==="d"&&isArray(params.d)){fx.paths=fx.initPath(el,el.pathArray,params.d);fx.toD=params.d;start=0;end=1}else if(el.attr){start=el.attr(prop)}else{start=parseFloat(getStyle(el,prop))||0;if(prop!=="opacity"){unit="px"}}if(!end){end=val}if(typeof end==="string"&&end.match("px")){end=end.replace(/px/g,"")}fx.run(start,end,unit)})}function stop(el,prop){let i=Fx.timers.length;while(i--){if(Fx.timers[i].elem===el&&(!prop||prop===Fx.timers[i].prop)){Fx.timers[i].stopped=true}}}const animationExports={animate:animate,animObject:animObject,getDeferredAnimation:getDeferredAnimation,setAnimation:setAnimation,stop:stop};export default animationExports;