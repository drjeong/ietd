"use strict";import AST from"../HTML/AST.js";import H from"../../Globals.js";const{doc,SVG_NS,win}=H;import U from"../../Utilities.js";const{attr,extend,fireEvent,isString,objectEach,pick}=U;const stringWithEllipsis=(text,currentIndex)=>text.substring(0,currentIndex)+"…";class TextBuilder{constructor(svgElement){const textStyles=svgElement.styles;this.renderer=svgElement.renderer;this.svgElement=svgElement;this.width=svgElement.textWidth;this.textLineHeight=textStyles&&textStyles.lineHeight;this.textOutline=textStyles&&textStyles.textOutline;this.ellipsis=Boolean(textStyles&&textStyles.textOverflow==="ellipsis");this.lineClamp=textStyles?.lineClamp;this.noWrap=Boolean(textStyles&&textStyles.whiteSpace==="nowrap")}buildSVG(){const wrapper=this.svgElement,textNode=wrapper.element,renderer=wrapper.renderer,textStr=pick(wrapper.textStr,"").toString(),hasMarkup=textStr.indexOf("<")!==-1,childNodes=textNode.childNodes,tempParent=!wrapper.added&&renderer.box,regexMatchBreaks=/<br.*?>/g,textCache=[textStr,this.ellipsis,this.noWrap,this.textLineHeight,this.textOutline,wrapper.getStyle("font-size"),wrapper.styles.lineClamp,this.width].join(",");if(textCache===wrapper.textCache){return}wrapper.textCache=textCache;delete wrapper.actualWidth;for(let i=childNodes.length;i--;){textNode.removeChild(childNodes[i])}if(!hasMarkup&&!this.ellipsis&&!this.width&&!wrapper.textPath&&(textStr.indexOf(" ")===-1||this.noWrap&&!regexMatchBreaks.test(textStr))){textNode.appendChild(doc.createTextNode(this.unescapeEntities(textStr)))}else if(textStr!==""){if(tempParent){tempParent.appendChild(textNode)}const ast=new AST(textStr);this.modifyTree(ast.nodes);ast.addToDOM(textNode);this.modifyDOM();if(this.ellipsis&&(textNode.textContent||"").indexOf("…")!==-1){wrapper.attr("title",this.unescapeEntities(wrapper.textStr||"",["&lt;","&gt;"]))}if(tempParent){tempParent.removeChild(textNode)}}if(isString(this.textOutline)&&wrapper.applyTextOutline){wrapper.applyTextOutline(this.textOutline)}}modifyDOM(){const wrapper=this.svgElement;const x=attr(wrapper.element,"x");wrapper.firstLineMetrics=void 0;let firstChild;while(firstChild=wrapper.element.firstChild){if(/^[\s\u200B]*$/.test(firstChild.textContent||" ")){wrapper.element.removeChild(firstChild)}else{break}}[].forEach.call(wrapper.element.querySelectorAll("tspan.highcharts-br"),(br,i)=>{if(br.nextSibling&&br.previousSibling){if(i===0&&br.previousSibling.nodeType===1){wrapper.firstLineMetrics=wrapper.renderer.fontMetrics(br.previousSibling)}attr(br,{dy:this.getLineHeight(br.nextSibling),x:x})}});const width=this.width||0;if(!width){return}const modifyTextNode=(textNode,parentElement)=>{const text=textNode.textContent||"";const words=text.replace(/([^\^])-/g,"$1- ").split(" ");const hasWhiteSpace=!this.noWrap&&(words.length>1||wrapper.element.childNodes.length>1);const dy=this.getLineHeight(parentElement),ellipsisWidth=Math.max(0,width-.8*dy);let lineNo=0;let startAt=wrapper.actualWidth;if(hasWhiteSpace){const lines=[];const precedingSiblings=[];while(parentElement.firstChild&&parentElement.firstChild!==textNode){precedingSiblings.push(parentElement.firstChild);parentElement.removeChild(parentElement.firstChild)}while(words.length){if(words.length&&!this.noWrap&&lineNo>0){lines.push(textNode.textContent||"");textNode.textContent=words.join(" ").replace(/- /g,"-")}this.truncate(textNode,void 0,words,lineNo===0?startAt||0:0,width,ellipsisWidth,(t,currentIndex)=>words.slice(0,currentIndex).join(" ").replace(/- /g,"-"));startAt=wrapper.actualWidth;lineNo++;if(this.lineClamp&&lineNo>=this.lineClamp){if(words.length){this.truncate(textNode,textNode.textContent||"",void 0,0,width,ellipsisWidth,stringWithEllipsis);textNode.textContent=textNode.textContent?.replace("…","")+"…"}break}}precedingSiblings.forEach(childNode=>{parentElement.insertBefore(childNode,textNode)});lines.forEach(line=>{parentElement.insertBefore(doc.createTextNode(line),textNode);const br=doc.createElementNS(SVG_NS,"tspan");br.textContent="​";attr(br,{dy:dy,x:x});parentElement.insertBefore(br,textNode)})}else if(this.ellipsis){if(text){this.truncate(textNode,text,void 0,0,width,ellipsisWidth,stringWithEllipsis)}}};const modifyChildren=node=>{const childNodes=[].slice.call(node.childNodes);childNodes.forEach(childNode=>{if(childNode.nodeType===win.Node.TEXT_NODE){modifyTextNode(childNode,node)}else{if(childNode.className.baseVal.indexOf("highcharts-br")!==-1){wrapper.actualWidth=0}modifyChildren(childNode)}})};modifyChildren(wrapper.element)}getLineHeight(node){const element=node.nodeType===win.Node.TEXT_NODE?node.parentElement:node;return this.textLineHeight?parseInt(this.textLineHeight.toString(),10):this.renderer.fontMetrics(element||this.svgElement.element).h}modifyTree(nodes){const modifyChild=(node,i)=>{const{attributes={},children,style={},tagName}=node,styledMode=this.renderer.styledMode;if(tagName==="b"||tagName==="strong"){if(styledMode){attributes["class"]="highcharts-strong"}else{style.fontWeight="bold"}}else if(tagName==="i"||tagName==="em"){if(styledMode){attributes["class"]="highcharts-emphasized"}else{style.fontStyle="italic"}}if(style&&style.color){style.fill=style.color}if(tagName==="br"){attributes["class"]="highcharts-br";node.textContent="​";const nextNode=nodes[i+1];if(nextNode&&nextNode.textContent){nextNode.textContent=nextNode.textContent.replace(/^ +/gm,"")}}else if(tagName==="a"&&children&&children.some(child=>child.tagName==="#text")){node.children=[{children:children,tagName:"tspan"}]}if(tagName!=="#text"&&tagName!=="a"){node.tagName="tspan"}extend(node,{attributes:attributes,style:style});if(children){children.filter(c=>c.tagName!=="#text").forEach(modifyChild)}};nodes.forEach(modifyChild);fireEvent(this.svgElement,"afterModifyTree",{nodes:nodes})}truncate(textNode,text,words,startAt,width,ellipsisWidth,getString){const svgElement=this.svgElement;const{rotation}=svgElement;const lengths=[];let minIndex=words&&!startAt?1:0;let maxIndex=(text||words||"").length;let currentIndex=maxIndex;let str;let actualWidth;if(!words){width=ellipsisWidth}const getSubStringLength=function(charEnd,concatenatedEnd){const end=concatenatedEnd||charEnd;const parentNode=textNode.parentNode;if(parentNode&&typeof lengths[end]==="undefined"){if(parentNode.getSubStringLength){try{lengths[end]=startAt+parentNode.getSubStringLength(0,words?end+1:end)}catch(e){""}}}return lengths[end]};svgElement.rotation=0;actualWidth=getSubStringLength(textNode.textContent.length);if(startAt+actualWidth>width){while(minIndex<=maxIndex){currentIndex=Math.ceil((minIndex+maxIndex)/2);if(words){str=getString(words,currentIndex)}actualWidth=getSubStringLength(currentIndex,str&&str.length-1);if(minIndex===maxIndex){minIndex=maxIndex+1}else if(actualWidth>width){maxIndex=currentIndex-1}else{minIndex=currentIndex}}if(maxIndex===0){textNode.textContent=""}else if(!(text&&maxIndex===text.length-1)){textNode.textContent=str||getString(text||words,currentIndex)}if(this.ellipsis&&actualWidth>width){this.truncate(textNode,textNode.textContent||"",void 0,0,width,ellipsisWidth,stringWithEllipsis)}}if(words){words.splice(0,currentIndex)}svgElement.actualWidth=actualWidth;svgElement.rotation=rotation}unescapeEntities(inputStr,except){objectEach(this.renderer.escapes,function(value,key){if(!except||except.indexOf(value)===-1){inputStr=inputStr.toString().replace(new RegExp(value,"g"),key)}});return inputStr}}export default TextBuilder;