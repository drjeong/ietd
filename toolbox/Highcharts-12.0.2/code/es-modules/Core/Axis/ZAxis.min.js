"use strict";import Axis from"./Axis.js";import D from"../Defaults.js";const{defaultOptions}=D;import U from"../Utilities.js";const{addEvent,merge,pick,splat}=U;function chartAddZAxis(options){return new ZAxis(this,options)}function onChartAfterCreateAxes(){const zAxisOptions=this.options.zAxis=splat(this.options.zAxis||{});if(!this.is3d()){return}this.zAxis=[];zAxisOptions.forEach(axisOptions=>{this.addZAxis(axisOptions).setScale()})}class ZAxis extends Axis{constructor(){super(...arguments);this.isZAxis=true}static compose(ChartClass){const chartProto=ChartClass.prototype;if(!chartProto.addZAxis){defaultOptions.zAxis=merge(defaultOptions.xAxis,{offset:0,lineWidth:0});chartProto.addZAxis=chartAddZAxis;chartProto.collectionsWithInit.zAxis=[chartProto.addZAxis];chartProto.collectionsWithUpdate.push("zAxis");addEvent(ChartClass,"afterCreateAxes",onChartAfterCreateAxes)}}init(chart,userOptions){this.isZAxis=true;super.init(chart,userOptions,"zAxis")}getSeriesExtremes(){this.hasVisibleSeries=false;this.dataMin=this.dataMax=this.ignoreMinPadding=this.ignoreMaxPadding=void 0;if(this.stacking){this.stacking.buildStacks()}this.series.forEach(series=>{if(series.reserveSpace()){let threshold=series.options.threshold;this.hasVisibleSeries=true;if(this.positiveValuesOnly&&threshold<=0){threshold=void 0}const zData=series.getColumn("z");if(zData.length){this.dataMin=Math.min(pick(this.dataMin,zData[0]),Math.min.apply(null,zData));this.dataMax=Math.max(pick(this.dataMax,zData[0]),Math.max.apply(null,zData))}}})}setAxisSize(){const chart=this.chart;super.setAxisSize();this.width=this.len=chart.options.chart.options3d&&chart.options.chart.options3d.depth||0;this.right=chart.chartWidth-this.width-this.left}}export default ZAxis;