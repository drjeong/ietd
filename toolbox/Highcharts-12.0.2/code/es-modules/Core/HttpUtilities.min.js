"use strict";import G from"../Core/Globals.js";const{win}=G;import U from"../Core/Utilities.js";const{discardElement,objectEach}=U;function ajax(settings){const headers={json:"application/json",xml:"application/xml",text:"text/plain",octet:"application/octet-stream"},r=new XMLHttpRequest;function handleError(xhr,err){if(settings.error){settings.error(xhr,err)}else{}}if(!settings.url){return false}r.open((settings.type||"get").toUpperCase(),settings.url,true);if(!settings.headers||!settings.headers["Content-Type"]){r.setRequestHeader("Content-Type",headers[settings.dataType||"json"]||headers.text)}objectEach(settings.headers,function(val,key){r.setRequestHeader(key,val)});if(settings.responseType){r.responseType=settings.responseType}r.onreadystatechange=function(){let res;if(r.readyState===4){if(r.status===200){if(settings.responseType!=="blob"){res=r.responseText;if(settings.dataType==="json"){try{res=JSON.parse(res)}catch(e){if(e instanceof Error){return handleError(r,e)}}}}return settings.success&&settings.success(res,r)}handleError(r,r.responseText)}};if(settings.data&&typeof settings.data!=="string"){settings.data=JSON.stringify(settings.data)}r.send(settings.data)}function getJSON(url,success){HttpUtilities.ajax({url:url,success:success,dataType:"json",headers:{"Content-Type":"text/plain"}})}function post(url,data,fetchOptions){const formData=new win.FormData;objectEach(data,function(val,name){formData.append(name,val)});formData.append("b64","true");const{filename,type}=data;return win.fetch(url,{method:"POST",body:formData,...fetchOptions}).then(res=>{if(res.ok){res.text().then(text=>{const link=document.createElement("a");link.href=`data:${type};base64,${text}`;link.download=filename;link.click();discardElement(link)})}})}const HttpUtilities={ajax:ajax,getJSON:getJSON,post:post};export default HttpUtilities;"";