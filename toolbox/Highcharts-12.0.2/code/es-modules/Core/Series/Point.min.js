"use strict";import AST from"../Renderer/HTML/AST.js";import A from"../Animation/AnimationUtilities.js";const{animObject}=A;import D from"../Defaults.js";const{defaultOptions}=D;import F from"../Templating.js";const{format}=F;import U from"../Utilities.js";const{addEvent,crisp,erase,extend,fireEvent,getNestedProperty,isArray,isFunction,isNumber,isObject,merge,pick,syncTimeout,removeEvent,uniqueKey}=U;class Point{animateBeforeDestroy(){const point=this,animateParams={x:point.startXPos,opacity:0},graphicalProps=point.getGraphicalProps();graphicalProps.singular.forEach(function(prop){const isDataLabel=prop==="dataLabel";point[prop]=point[prop].animate(isDataLabel?{x:point[prop].startXPos,y:point[prop].startYPos,opacity:0}:animateParams)});graphicalProps.plural.forEach(function(plural){point[plural].forEach(function(item){if(item.element){item.animate(extend({x:point.startXPos},item.startYPos?{x:item.startXPos,y:item.startYPos}:{}))}})})}applyOptions(options,x){const point=this,series=point.series,pointValKey=series.options.pointValKey||series.pointValKey;options=Point.prototype.optionsToObject.call(this,options);extend(point,options);point.options=point.options?extend(point.options,options):options;if(options.group){delete point.group}if(options.dataLabels){delete point.dataLabels}if(pointValKey){point.y=Point.prototype.getNestedProperty.call(point,pointValKey)}if(point.selected){point.state="select"}if("name"in point&&typeof x==="undefined"&&series.xAxis&&series.xAxis.hasNames){point.x=series.xAxis.nameToX(point)}if(typeof point.x==="undefined"&&series){point.x=x??series.autoIncrement()}else if(isNumber(options.x)&&series.options.relativeXValue){point.x=series.autoIncrement(options.x)}else if(typeof point.x==="string"){x??(x=series.chart.time.parse(point.x));if(isNumber(x)){point.x=x}}point.isNull=this.isValid&&!this.isValid();point.formatPrefix=point.isNull?"null":"point";return point}destroy(){if(!this.destroyed){const point=this,series=point.series,chart=series.chart,dataSorting=series.options.dataSorting,hoverPoints=chart.hoverPoints,globalAnimation=point.series.chart.renderer.globalAnimation,animation=animObject(globalAnimation);const destroyPoint=()=>{if(point.graphic||point.graphics||point.dataLabel||point.dataLabels){removeEvent(point);point.destroyElements()}for(const prop in point){delete point[prop]}};if(point.legendItem){chart.legend.destroyItem(point)}if(hoverPoints){point.setState();erase(hoverPoints,point);if(!hoverPoints.length){chart.hoverPoints=null}}if(point===chart.hoverPoint){point.onMouseOut()}if(!dataSorting||!dataSorting.enabled){destroyPoint()}else{this.animateBeforeDestroy();syncTimeout(destroyPoint,animation.duration)}chart.pointCount--}this.destroyed=true}destroyElements(kinds){const point=this,props=point.getGraphicalProps(kinds);props.singular.forEach(function(prop){point[prop]=point[prop].destroy()});props.plural.forEach(function(plural){point[plural].forEach(function(item){if(item&&item.element){item.destroy()}});delete point[plural]})}firePointEvent(eventType,eventArgs,defaultFunction){const point=this,series=this.series,seriesOptions=series.options;point.manageEvent(eventType);if(eventType==="click"&&seriesOptions.allowPointSelect){defaultFunction=function(event){if(!point.destroyed&&point.select){point.select(null,event.ctrlKey||event.metaKey||event.shiftKey)}}}fireEvent(point,eventType,eventArgs,defaultFunction)}getClassName(){const point=this;return"highcharts-point"+(point.selected?" highcharts-point-select":"")+(point.negative?" highcharts-negative":"")+(point.isNull?" highcharts-null-point":"")+(typeof point.colorIndex!=="undefined"?" highcharts-color-"+point.colorIndex:"")+(point.options.className?" "+point.options.className:"")+(point.zone&&point.zone.className?" "+point.zone.className.replace("highcharts-negative",""):"")}getGraphicalProps(kinds){const point=this,props=[],graphicalProps={singular:[],plural:[]};let prop,i;kinds=kinds||{graphic:1,dataLabel:1};if(kinds.graphic){props.push("graphic","connector")}if(kinds.dataLabel){props.push("dataLabel","dataLabelPath","dataLabelUpper")}i=props.length;while(i--){prop=props[i];if(point[prop]){graphicalProps.singular.push(prop)}}["graphic","dataLabel"].forEach(function(prop){const plural=prop+"s";if(kinds[prop]&&point[plural]){graphicalProps.plural.push(plural)}});return graphicalProps}getNestedProperty(key){if(!key){return}if(key.indexOf("custom.")===0){return getNestedProperty(key,this.options)}return this[key]}getZone(){const series=this.series,zones=series.zones,zoneAxis=series.zoneAxis||"y";let zone,i=0;zone=zones[i];while(this[zoneAxis]>=zone.value){zone=zones[++i]}if(!this.nonZonedColor){this.nonZonedColor=this.color}if(zone&&zone.color&&!this.options.color){this.color=zone.color}else{this.color=this.nonZonedColor}return zone}hasNewShapeType(){const point=this;const oldShapeType=point.graphic&&(point.graphic.symbolName||point.graphic.element.nodeName);return oldShapeType!==this.shapeType}constructor(series,options,x){this.formatPrefix="point";this.visible=true;this.point=this;this.series=series;this.applyOptions(options,x);this.id??(this.id=uniqueKey());this.resolveColor();series.chart.pointCount++;fireEvent(this,"afterInit")}isValid(){return(isNumber(this.x)||this.x instanceof Date)&&isNumber(this.y)}optionsToObject(options){const series=this.series,keys=series.options.keys,pointArrayMap=keys||series.pointArrayMap||["y"],valueCount=pointArrayMap.length;let ret={},firstItemType,i=0,j=0;if(isNumber(options)||options===null){ret[pointArrayMap[0]]=options}else if(isArray(options)){if(!keys&&options.length>valueCount){firstItemType=typeof options[0];if(firstItemType==="string"){if(series.xAxis?.dateTime){ret.x=series.chart.time.parse(options[0])}else{ret.name=options[0]}}else if(firstItemType==="number"){ret.x=options[0]}i++}while(j<valueCount){if(!keys||typeof options[i]!=="undefined"){if(pointArrayMap[j].indexOf(".")>0){Point.prototype.setNestedProperty(ret,options[i],pointArrayMap[j])}else{ret[pointArrayMap[j]]=options[i]}}i++;j++}}else if(typeof options==="object"){ret=options;if(options.dataLabels){series.hasDataLabels=()=>true}if(options.marker){series._hasPointMarkers=true}}return ret}pos(chartCoordinates,plotY=this.plotY){if(!this.destroyed){const{plotX,series}=this,{chart,xAxis,yAxis}=series;let posX=0,posY=0;if(isNumber(plotX)&&isNumber(plotY)){if(chartCoordinates){posX=xAxis?xAxis.pos:chart.plotLeft;posY=yAxis?yAxis.pos:chart.plotTop}return chart.inverted&&xAxis&&yAxis?[yAxis.len-plotY+posY,xAxis.len-plotX+posX]:[plotX+posX,plotY+posY]}}}resolveColor(){const series=this.series,optionsChart=series.chart.options.chart,styledMode=series.chart.styledMode;let color,colors,colorCount=optionsChart.colorCount,colorIndex;delete this.nonZonedColor;if(series.options.colorByPoint){if(!styledMode){colors=series.options.colors||series.chart.options.colors;color=colors[series.colorCounter];colorCount=colors.length}colorIndex=series.colorCounter;series.colorCounter++;if(series.colorCounter===colorCount){series.colorCounter=0}}else{if(!styledMode){color=series.color}colorIndex=series.colorIndex}this.colorIndex=pick(this.options.colorIndex,colorIndex);this.color=pick(this.options.color,color)}setNestedProperty(object,value,key){const nestedKeys=key.split(".");nestedKeys.reduce(function(result,key,i,arr){const isLastKey=arr.length-1===i;result[key]=isLastKey?value:isObject(result[key],true)?result[key]:{};return result[key]},object);return object}shouldDraw(){return!this.isNull}tooltipFormatter(pointFormat){const{chart,pointArrayMap=["y"],tooltipOptions}=this.series,{valueDecimals="",valuePrefix="",valueSuffix=""}=tooltipOptions;if(chart.styledMode){pointFormat=chart.tooltip?.styledModeFormat(pointFormat)||pointFormat}pointArrayMap.forEach(key=>{key="{point."+key;if(valuePrefix||valueSuffix){pointFormat=pointFormat.replace(RegExp(key+"}","g"),valuePrefix+key+"}"+valueSuffix)}pointFormat=pointFormat.replace(RegExp(key+"}","g"),key+":,."+valueDecimals+"f}")});return format(pointFormat,this,chart)}update(options,redraw,animation,runEvent){const point=this,series=point.series,graphic=point.graphic,chart=series.chart,seriesOptions=series.options;let i;redraw=pick(redraw,true);function update(){point.applyOptions(options);const hasMockGraphic=graphic&&point.hasMockGraphic;const shouldDestroyGraphic=point.y===null?!hasMockGraphic:hasMockGraphic;if(graphic&&shouldDestroyGraphic){point.graphic=graphic.destroy();delete point.hasMockGraphic}if(isObject(options,true)){if(graphic&&graphic.element){if(options&&options.marker&&typeof options.marker.symbol!=="undefined"){point.graphic=graphic.destroy()}}if(options?.dataLabels&&point.dataLabel){point.dataLabel=point.dataLabel.destroy()}}i=point.index;const row={};for(const key of series.dataColumnKeys()){row[key]=point[key]}series.dataTable.setRow(row,i);seriesOptions.data[i]=isObject(seriesOptions.data[i],true)||isObject(options,true)?point.options:pick(options,seriesOptions.data[i]);series.isDirty=series.isDirtyData=true;if(!series.fixedBox&&series.hasCartesianSeries){chart.isDirtyBox=true}if(seriesOptions.legendType==="point"){chart.isDirtyLegend=true}if(redraw){chart.redraw(animation)}}if(runEvent===false){update()}else{point.firePointEvent("update",{options:options},update)}}remove(redraw,animation){this.series.removePoint(this.series.data.indexOf(this),redraw,animation)}select(selected,accumulate){const point=this,series=point.series,chart=series.chart;selected=pick(selected,!point.selected);this.selectedStaging=selected;point.firePointEvent(selected?"select":"unselect",{accumulate:accumulate},function(){point.selected=point.options.selected=selected;series.options.data[series.data.indexOf(point)]=point.options;point.setState(selected&&"select");if(!accumulate){chart.getSelectedPoints().forEach(function(loopPoint){const loopSeries=loopPoint.series;if(loopPoint.selected&&loopPoint!==point){loopPoint.selected=loopPoint.options.selected=false;loopSeries.options.data[loopSeries.data.indexOf(loopPoint)]=loopPoint.options;loopPoint.setState(chart.hoverPoints&&loopSeries.options.inactiveOtherPoints?"inactive":"");loopPoint.firePointEvent("unselect")}})}});delete this.selectedStaging}onMouseOver(e){const point=this,series=point.series,{inverted,pointer}=series.chart;if(pointer){e=e?pointer.normalize(e):pointer.getChartCoordinatesFromPoint(point,inverted);pointer.runPointActions(e,point)}}onMouseOut(){const point=this,chart=point.series.chart;point.firePointEvent("mouseOut");if(!point.series.options.inactiveOtherPoints){(chart.hoverPoints||[]).forEach(function(p){p.setState()})}chart.hoverPoints=chart.hoverPoint=null}manageEvent(eventType){const point=this,options=merge(point.series.options.point,point.options),userEvent=options.events?.[eventType];if(isFunction(userEvent)&&(!point.hcEvents?.[eventType]||point.hcEvents?.[eventType]?.map(el=>el.fn).indexOf(userEvent)===-1)){point.importedUserEvent?.();point.importedUserEvent=addEvent(point,eventType,userEvent);if(point.hcEvents){point.hcEvents[eventType].userEvent=true}}else if(point.importedUserEvent&&!userEvent&&point.hcEvents?.[eventType]&&point.hcEvents?.[eventType].userEvent){removeEvent(point,eventType);delete point.hcEvents[eventType];if(!Object.keys(point.hcEvents)){delete point.importedUserEvent}}}setState(state,move){const point=this,series=point.series,previousState=point.state,stateOptions=series.options.states[state||"normal"]||{},markerOptions=defaultOptions.plotOptions[series.type].marker&&series.options.marker,normalDisabled=markerOptions&&markerOptions.enabled===false,markerStateOptions=markerOptions&&markerOptions.states&&markerOptions.states[state||"normal"]||{},stateDisabled=markerStateOptions.enabled===false,pointMarker=point.marker||{},chart=series.chart,hasMarkers=markerOptions&&series.markerAttribs;let halo=series.halo,markerAttribs,pointAttribs,pointAttribsAnimation,stateMarkerGraphic=series.stateMarkerGraphic,newSymbol;state=state||"";if(state===point.state&&!move||point.selected&&state!=="select"||stateOptions.enabled===false||state&&(stateDisabled||normalDisabled&&markerStateOptions.enabled===false)||state&&pointMarker.states&&pointMarker.states[state]&&pointMarker.states[state].enabled===false){return}point.state=state;if(hasMarkers){markerAttribs=series.markerAttribs(point,state)}if(point.graphic&&!point.hasMockGraphic){if(previousState){point.graphic.removeClass("highcharts-point-"+previousState)}if(state){point.graphic.addClass("highcharts-point-"+state)}if(!chart.styledMode){pointAttribs=series.pointAttribs(point,state);pointAttribsAnimation=pick(chart.options.chart.animation,stateOptions.animation);const opacity=pointAttribs.opacity;if(series.options.inactiveOtherPoints&&isNumber(opacity)){(point.dataLabels||[]).forEach(function(label){if(label&&!label.hasClass("highcharts-data-label-hidden")){label.animate({opacity:opacity},pointAttribsAnimation);if(label.connector){label.connector.animate({opacity:opacity},pointAttribsAnimation)}}})}point.graphic.animate(pointAttribs,pointAttribsAnimation)}if(markerAttribs){point.graphic.animate(markerAttribs,pick(chart.options.chart.animation,markerStateOptions.animation,markerOptions.animation))}if(stateMarkerGraphic){stateMarkerGraphic.hide()}}else{if(state&&markerStateOptions){newSymbol=pointMarker.symbol||series.symbol;if(stateMarkerGraphic&&stateMarkerGraphic.currentSymbol!==newSymbol){stateMarkerGraphic=stateMarkerGraphic.destroy()}if(markerAttribs){if(!stateMarkerGraphic){if(newSymbol){series.stateMarkerGraphic=stateMarkerGraphic=chart.renderer.symbol(newSymbol,markerAttribs.x,markerAttribs.y,markerAttribs.width,markerAttribs.height,merge(markerOptions,markerStateOptions)).add(series.markerGroup);stateMarkerGraphic.currentSymbol=newSymbol}}else{stateMarkerGraphic[move?"animate":"attr"]({x:markerAttribs.x,y:markerAttribs.y})}}if(!chart.styledMode&&stateMarkerGraphic&&point.state!=="inactive"){stateMarkerGraphic.attr(series.pointAttribs(point,state))}}if(stateMarkerGraphic){stateMarkerGraphic[state&&point.isInside?"show":"hide"]();stateMarkerGraphic.element.point=point;stateMarkerGraphic.addClass(point.getClassName(),true)}}const haloOptions=stateOptions.halo;const markerGraphic=point.graphic||stateMarkerGraphic;const markerVisibility=markerGraphic&&markerGraphic.visibility||"inherit";if(haloOptions&&haloOptions.size&&markerGraphic&&markerVisibility!=="hidden"&&!point.isCluster){if(!halo){series.halo=halo=chart.renderer.path().add(markerGraphic.parentGroup)}halo.show()[move?"animate":"attr"]({d:point.haloPath(haloOptions.size)});halo.attr({class:"highcharts-halo highcharts-color-"+pick(point.colorIndex,series.colorIndex)+(point.className?" "+point.className:""),visibility:markerVisibility,zIndex:-1});halo.point=point;if(!chart.styledMode){halo.attr(extend({fill:point.color||series.color,"fill-opacity":haloOptions.opacity},AST.filterUserAttributes(haloOptions.attributes||{})))}}else if(halo?.point?.haloPath&&!halo.point.destroyed){halo.animate({d:halo.point.haloPath(0)},null,halo.hide)}fireEvent(point,"afterSetState",{state:state})}haloPath(size){const pos=this.pos();return pos?this.series.chart.renderer.symbols.circle(crisp(pos[0],1)-size,pos[1]-size,size*2,size*2):[]}}export default Point;"";