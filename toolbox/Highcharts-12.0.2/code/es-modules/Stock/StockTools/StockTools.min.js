"use strict";import D from"../../Core/Defaults.js";const{setOptions}=D;import NBU from"../../Extensions/Annotations/NavigationBindingsUtilities.js";const{getAssignedAxis}=NBU;import StockToolsBindings from"./StockToolsBindings.js";import StockToolsDefaults from"./StockToolsDefaults.js";import STU from"./StockToolsUtilities.js";const{isNotNavigatorYAxis,isPriceIndicatorEnabled}=STU;import U from"../../Core/Utilities.js";const{correctFloat,defined,isNumber,pick}=U;function compose(NavigationBindingsClass){const navigationProto=NavigationBindingsClass.prototype;if(!navigationProto.utils?.manageIndicators){navigationProto.getYAxisPositions=navigationGetYAxisPositions;navigationProto.getYAxisResizers=navigationGetYAxisResizers;navigationProto.recalculateYAxisPositions=navigationRecalculateYAxisPositions;navigationProto.resizeYAxes=navigationResizeYAxes;navigationProto.utils=navigationProto.utils||{};navigationProto.utils.indicatorsWithAxes=STU.indicatorsWithAxes;navigationProto.utils.indicatorsWithVolume=STU.indicatorsWithVolume;navigationProto.utils.getAssignedAxis=getAssignedAxis;navigationProto.utils.isPriceIndicatorEnabled=isPriceIndicatorEnabled;navigationProto.utils.manageIndicators=STU.manageIndicators;setOptions(StockToolsDefaults);setOptions({navigation:{bindings:StockToolsBindings}})}}function navigationGetYAxisPositions(yAxes,plotHeight,defaultHeight,removedYAxisProps){let allAxesHeight=0,previousAxisHeight,removedHeight,removedTop;function isPercentage(prop){return defined(prop)&&!isNumber(prop)&&prop.match("%")}if(removedYAxisProps){removedTop=correctFloat(parseFloat(removedYAxisProps.top)/100);removedHeight=correctFloat(parseFloat(removedYAxisProps.height)/100)}const positions=yAxes.map((yAxis,index)=>{let height=correctFloat(isPercentage(yAxis.options.height)?parseFloat(yAxis.options.height)/100:yAxis.height/plotHeight),top=correctFloat(isPercentage(yAxis.options.top)?parseFloat(yAxis.options.top)/100:(yAxis.top-yAxis.chart.plotTop)/plotHeight);if(!removedHeight){if(!isNumber(height)){height=yAxes[index-1].series.every(s=>s.is("sma"))?previousAxisHeight:defaultHeight/100}if(!isNumber(top)){top=allAxesHeight}previousAxisHeight=height;allAxesHeight=correctFloat(Math.max(allAxesHeight,(top||0)+(height||0)))}else{if(top>removedTop){top-=removedHeight}allAxesHeight=Math.max(allAxesHeight,(top||0)+(height||0))}return{height:height*100,top:top*100}});return{positions:positions,allAxesHeight:allAxesHeight}}function navigationGetYAxisResizers(yAxes){const resizers=[];yAxes.forEach(function(_yAxis,index){const nextYAxis=yAxes[index+1];if(nextYAxis){resizers[index]={enabled:true,controlledAxis:{next:[pick(nextYAxis.options.id,nextYAxis.index)]}}}else{resizers[index]={enabled:false}}});return resizers}function navigationRecalculateYAxisPositions(positions,changedSpace,modifyHeight,adder){positions.forEach(function(position,index){const prevPosition=positions[index-1];position.top=!prevPosition?0:correctFloat(prevPosition.height+prevPosition.top);if(modifyHeight){position.height=correctFloat(position.height+adder*changedSpace)}});return positions}function navigationResizeYAxes(removedYAxisProps){const defaultHeight=20;const chart=this.chart,yAxes=chart.yAxis.filter(isNotNavigatorYAxis),plotHeight=chart.plotHeight,{positions,allAxesHeight}=this.getYAxisPositions(yAxes,plotHeight,defaultHeight,removedYAxisProps),resizers=this.getYAxisResizers(yAxes);if(!removedYAxisProps&&allAxesHeight<=correctFloat(.8+defaultHeight/100)){positions[positions.length-1]={height:defaultHeight,top:correctFloat(allAxesHeight*100-defaultHeight)}}else{positions.forEach(function(position){position.height=position.height/(allAxesHeight*100)*100;position.top=position.top/(allAxesHeight*100)*100})}positions.forEach(function(position,index){yAxes[index].update({height:position.height+"%",top:position.top+"%",resize:resizers[index],offset:0},false)})}const StockTools={compose:compose};export default StockTools;