"use strict";import D from"../../Core/Defaults.js";const{getOptions}=D;import NBU from"../../Extensions/Annotations/NavigationBindingsUtilities.js";const{getAssignedAxis,getFieldType}=NBU;import Series from"../../Core/Series/Series.js";import U from"../../Core/Utilities.js";const{defined,fireEvent,isNumber,uniqueKey}=U;const indicatorsWithAxes=["apo","ad","aroon","aroonoscillator","atr","ao","cci","chaikin","cmf","cmo","disparityindex","dmi","dpo","linearRegressionAngle","linearRegressionIntercept","linearRegressionSlope","klinger","macd","mfi","momentum","natr","obv","ppo","roc","rsi","slowstochastic","stochastic","trix","williamsr"];const indicatorsWithVolume=["ad","cmf","klinger","mfi","obv","vbp","vwap"];function addFlagFromForm(type){return function(e){const navigation=this,chart=navigation.chart,toolbar=chart.stockTools,point=attractToPoint(e,chart);if(!point){return}const pointConfig={x:point.x,y:point.y};const seriesOptions={type:"flags",onSeries:point.series.id,shape:type,data:[pointConfig],xAxis:point.xAxis,yAxis:point.yAxis,point:{events:{click:function(){const point=this,options=point.options;fireEvent(navigation,"showPopup",{point:point,formType:"annotation-toolbar",options:{langKey:"flags",type:"flags",title:[options.title,getFieldType("title",options.title)],name:[options.name,getFieldType("name",options.name)]},onSubmit:function(updated){if(updated.actionType==="remove"){point.remove()}else{point.update(navigation.fieldsToOptions(updated.fields,{}))}}})}}}};if(!toolbar||!toolbar.guiEnabled){chart.addSeries(seriesOptions)}fireEvent(navigation,"showPopup",{formType:"flag",options:{langKey:"flags",type:"flags",title:["A",getFieldType("label","A")],name:["Flag A",getFieldType("label","Flag A")]},onSubmit:function(data){navigation.fieldsToOptions(data.fields,seriesOptions.data[0]);chart.addSeries(seriesOptions)}})}}function attractToPoint(e,chart){const coords=chart.pointer?.getCoordinates(e);let coordsX,coordsY,distX=Number.MAX_VALUE,closestPoint;if(chart.navigationBindings&&coords){coordsX=getAssignedAxis(coords.xAxis);coordsY=getAssignedAxis(coords.yAxis)}if(!coordsX||!coordsY){return}const x=coordsX.value;const y=coordsY.value;coordsY.axis.series.forEach(series=>{if(series.points){const point=series.searchPoint(e,true);if(point&&distX>Math.abs(point.x-x)){distX=Math.abs(point.x-x);closestPoint=point}}});if(closestPoint&&closestPoint.x&&closestPoint.y){return{x:closestPoint.x,y:closestPoint.y,below:y<closestPoint.y,series:closestPoint.series,xAxis:closestPoint.series.xAxis.index||0,yAxis:closestPoint.series.yAxis.index||0}}}function isNotNavigatorYAxis(axis){return axis.userOptions.className!=="highcharts-navigator-yaxis"}function isPriceIndicatorEnabled(series){return series.some(s=>s.lastVisiblePrice||s.lastPrice)}function manageIndicators(data){const chart=this.chart,seriesConfig={linkedTo:data.linkedTo,type:data.type};let yAxis,parentSeries,defaultOptions,series;if(data.actionType==="edit"){this.fieldsToOptions(data.fields,seriesConfig);series=chart.get(data.seriesId);if(series){series.update(seriesConfig,false)}}else if(data.actionType==="remove"){series=chart.get(data.seriesId);if(series){yAxis=series.yAxis;if(series.linkedSeries){series.linkedSeries.forEach(linkedSeries=>{linkedSeries.remove(false)})}series.remove(false);if(indicatorsWithAxes.indexOf(series.type)>=0){const removedYAxisProps={height:yAxis.options.height,top:yAxis.options.top};yAxis.remove(false);this.resizeYAxes(removedYAxisProps)}}}else{seriesConfig.id=uniqueKey();this.fieldsToOptions(data.fields,seriesConfig);parentSeries=chart.get(seriesConfig.linkedTo);defaultOptions=getOptions().plotOptions;if(typeof parentSeries!=="undefined"&&parentSeries instanceof Series&&parentSeries.getDGApproximation()==="sum"&&!defined(defaultOptions&&defaultOptions[seriesConfig.type]&&defaultOptions.dataGrouping&&defaultOptions.dataGrouping.approximation)){seriesConfig.dataGrouping={approximation:"sum"}}if(indicatorsWithAxes.indexOf(data.type)>=0){yAxis=chart.addAxis({id:uniqueKey(),offset:0,opposite:true,title:{text:""},tickPixelInterval:40,showLastLabel:false,labels:{align:"left",y:-2}},false,false);seriesConfig.yAxis=yAxis.options.id;this.resizeYAxes()}else{seriesConfig.yAxis=chart.get(data.linkedTo).options.yAxis}if(indicatorsWithVolume.indexOf(data.type)>=0){seriesConfig.params.volumeSeriesID=chart.series.filter(function(series){return series.options.type==="column"})[0].options.id}chart.addSeries(seriesConfig,false)}fireEvent(this,"deselectButton",{button:this.selectedButtonElement});chart.redraw()}function updateHeight(e,annotation){const options=annotation.options.typeOptions,yAxis=isNumber(options.yAxis)&&this.chart.yAxis[options.yAxis];if(yAxis&&options.points){annotation.update({typeOptions:{height:yAxis.toValue(e[yAxis.horiz?"chartX":"chartY"])-(options.points[1].y||0)}})}}function updateNthPoint(startIndex){return function(e,annotation){const options=annotation.options.typeOptions,xAxis=isNumber(options.xAxis)&&this.chart.xAxis[options.xAxis],yAxis=isNumber(options.yAxis)&&this.chart.yAxis[options.yAxis];if(xAxis&&yAxis){options.points.forEach((point,index)=>{if(index>=startIndex){point.x=xAxis.toValue(e[xAxis.horiz?"chartX":"chartY"]);point.y=yAxis.toValue(e[yAxis.horiz?"chartX":"chartY"])}});annotation.update({typeOptions:{points:options.points}})}}}function updateRectSize(event,annotation){const chart=annotation.chart,options=annotation.options.typeOptions,xAxis=isNumber(options.xAxis)&&chart.xAxis[options.xAxis],yAxis=isNumber(options.yAxis)&&chart.yAxis[options.yAxis];if(xAxis&&yAxis){const x=xAxis.toValue(event[xAxis.horiz?"chartX":"chartY"]),y=yAxis.toValue(event[yAxis.horiz?"chartX":"chartY"]),width=x-options.point.x,height=options.point.y-y;annotation.update({typeOptions:{background:{width:chart.inverted?height:width,height:chart.inverted?width:height}}})}}function shallowArraysEqual(a,b){if(!defined(a)||!defined(b)){return false}if(a.length!==b.length){return false}for(let i=0;i<a.length;i++){if(a[i]!==b[i]){return false}}return true}const StockToolsUtilities={indicatorsWithAxes:indicatorsWithAxes,indicatorsWithVolume:indicatorsWithVolume,addFlagFromForm:addFlagFromForm,attractToPoint:attractToPoint,getAssignedAxis:getAssignedAxis,isNotNavigatorYAxis:isNotNavigatorYAxis,isPriceIndicatorEnabled:isPriceIndicatorEnabled,manageIndicators:manageIndicators,shallowArraysEqual:shallowArraysEqual,updateHeight:updateHeight,updateNthPoint:updateNthPoint,updateRectSize:updateRectSize};export default StockToolsUtilities;