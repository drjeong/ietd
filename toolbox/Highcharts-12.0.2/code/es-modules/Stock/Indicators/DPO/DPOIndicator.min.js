"use strict";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const{sma:SMAIndicator}=SeriesRegistry.seriesTypes;import U from"../../../Core/Utilities.js";const{extend,merge,correctFloat,pick}=U;function accumulatePoints(sum,yVal,i,index,subtract){const price=pick(yVal[i][index],yVal[i]);if(subtract){return correctFloat(sum-price)}return correctFloat(sum+price)}class DPOIndicator extends SMAIndicator{getValues(series,params){const period=params.period,index=params.index,offset=Math.floor(period/2+1),range=period+offset,xVal=series.xData||[],yVal=series.yData||[],yValLen=yVal.length,DPO=[],xData=[],yData=[];let oscillator,periodIndex,rangeIndex,price,i,j,sum=0;if(xVal.length<=range){return}for(i=0;i<period-1;i++){sum=accumulatePoints(sum,yVal,i,index)}for(j=0;j<=yValLen-range;j++){periodIndex=j+period-1;rangeIndex=j+range-1;sum=accumulatePoints(sum,yVal,periodIndex,index);price=pick(yVal[rangeIndex][index],yVal[rangeIndex]);oscillator=price-sum/period;sum=accumulatePoints(sum,yVal,j,index,true);DPO.push([xVal[rangeIndex],oscillator]);xData.push(xVal[rangeIndex]);yData.push(oscillator)}return{values:DPO,xData:xData,yData:yData}}}DPOIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{index:0,period:21}});extend(DPOIndicator.prototype,{nameBase:"DPO"});SeriesRegistry.registerSeriesType("dpo",DPOIndicator);export default DPOIndicator;"";