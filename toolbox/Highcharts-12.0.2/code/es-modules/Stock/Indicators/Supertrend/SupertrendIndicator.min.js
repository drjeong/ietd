"use strict";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const{atr:ATRIndicator,sma:SMAIndicator}=SeriesRegistry.seriesTypes;import U from"../../../Core/Utilities.js";const{addEvent,correctFloat,isArray,isNumber,extend,merge,objectEach}=U;function createPointObj(mainSeries,index){return{index:index,close:mainSeries.getColumn("close")[index],x:mainSeries.getColumn("x")[index]}}class SupertrendIndicator extends SMAIndicator{init(){const indicator=this;super.init.apply(indicator,arguments);const unbinder=addEvent(this.chart.constructor,"afterLinkSeries",()=>{if(indicator.options){const options=indicator.options,parentOptions=indicator.linkedParent.options;options.cropThreshold=parentOptions.cropThreshold-(options.params.period-1)}unbinder()},{order:1})}drawGraph(){const indicator=this,indicOptions=indicator.options,mainSeries=indicator.linkedParent,mainXData=mainSeries.getColumn("x"),mainLinePoints=mainSeries?mainSeries.points:[],indicPoints=indicator.points,indicPath=indicator.graph,tempOffset=mainLinePoints.length-indicPoints.length,offset=tempOffset>0?tempOffset:0,gappedExtend={options:{gapSize:indicOptions.gapSize}},groupedPoints={top:[],bottom:[],intersect:[]},supertrendLineOptions={top:{styles:{lineWidth:indicOptions.lineWidth,lineColor:indicOptions.fallingTrendColor||indicOptions.color,dashStyle:indicOptions.dashStyle}},bottom:{styles:{lineWidth:indicOptions.lineWidth,lineColor:indicOptions.risingTrendColor||indicOptions.color,dashStyle:indicOptions.dashStyle}},intersect:indicOptions.changeTrendLine};let point,nextPoint,mainPoint,nextMainPoint,prevMainPoint,prevPrevMainPoint,pointColor,newPoint,newNextPoint,indicPointsLen=indicPoints.length;while(indicPointsLen--){point=indicPoints[indicPointsLen];nextPoint=indicPoints[indicPointsLen-1];mainPoint=mainLinePoints[indicPointsLen-1+offset];nextMainPoint=mainLinePoints[indicPointsLen-2+offset];prevMainPoint=mainLinePoints[indicPointsLen+offset];prevPrevMainPoint=mainLinePoints[indicPointsLen+offset+1];pointColor=point.options.color;newPoint={x:point.x,plotX:point.plotX,plotY:point.plotY,isNull:false};if(!nextMainPoint&&mainPoint&&isNumber(mainXData[mainPoint.index-1])){nextMainPoint=createPointObj(mainSeries,mainPoint.index-1)}if(!prevPrevMainPoint&&prevMainPoint&&isNumber(mainXData[prevMainPoint.index+1])){prevPrevMainPoint=createPointObj(mainSeries,prevMainPoint.index+1)}if(!mainPoint&&nextMainPoint&&isNumber(mainXData[nextMainPoint.index+1])){mainPoint=createPointObj(mainSeries,nextMainPoint.index+1)}else if(!mainPoint&&prevMainPoint&&isNumber(mainXData[prevMainPoint.index-1])){mainPoint=createPointObj(mainSeries,prevMainPoint.index-1)}if(point&&mainPoint&&prevMainPoint&&nextMainPoint&&point.x!==mainPoint.x){if(point.x===prevMainPoint.x){nextMainPoint=mainPoint;mainPoint=prevMainPoint}else if(point.x===nextMainPoint.x){mainPoint=nextMainPoint;nextMainPoint={close:mainSeries.getColumn("close")[mainPoint.index-1],x:mainXData[mainPoint.index-1]}}else if(prevPrevMainPoint&&point.x===prevPrevMainPoint.x){mainPoint=prevPrevMainPoint;nextMainPoint=prevMainPoint}}if(nextPoint&&nextMainPoint&&mainPoint){newNextPoint={x:nextPoint.x,plotX:nextPoint.plotX,plotY:nextPoint.plotY,isNull:false};if(point.y>=mainPoint.close&&nextPoint.y>=nextMainPoint.close){point.color=pointColor||indicOptions.fallingTrendColor||indicOptions.color;groupedPoints.top.push(newPoint)}else if(point.y<mainPoint.close&&nextPoint.y<nextMainPoint.close){point.color=pointColor||indicOptions.risingTrendColor||indicOptions.color;groupedPoints.bottom.push(newPoint)}else{groupedPoints.intersect.push(newPoint);groupedPoints.intersect.push(newNextPoint);groupedPoints.intersect.push(merge(newNextPoint,{isNull:true}));if(point.y>=mainPoint.close&&nextPoint.y<nextMainPoint.close){point.color=pointColor||indicOptions.fallingTrendColor||indicOptions.color;nextPoint.color=pointColor||indicOptions.risingTrendColor||indicOptions.color;groupedPoints.top.push(newPoint);groupedPoints.top.push(merge(newNextPoint,{isNull:true}))}else if(point.y<mainPoint.close&&nextPoint.y>=nextMainPoint.close){point.color=pointColor||indicOptions.risingTrendColor||indicOptions.color;nextPoint.color=pointColor||indicOptions.fallingTrendColor||indicOptions.color;groupedPoints.bottom.push(newPoint);groupedPoints.bottom.push(merge(newNextPoint,{isNull:true}))}}}else if(mainPoint){if(point.y>=mainPoint.close){point.color=pointColor||indicOptions.fallingTrendColor||indicOptions.color;groupedPoints.top.push(newPoint)}else{point.color=pointColor||indicOptions.risingTrendColor||indicOptions.color;groupedPoints.bottom.push(newPoint)}}}objectEach(groupedPoints,function(values,lineName){indicator.points=values;indicator.options=merge(supertrendLineOptions[lineName].styles,gappedExtend);indicator.graph=indicator["graph"+lineName+"Line"];SMAIndicator.prototype.drawGraph.call(indicator);indicator["graph"+lineName+"Line"]=indicator.graph});indicator.points=indicPoints;indicator.options=indicOptions;indicator.graph=indicPath}getValues(series,params){const period=params.period,multiplier=params.multiplier,xVal=series.xData,yVal=series.yData,st=[],xData=[],yData=[],close=3,low=2,high=1,periodsOffset=period===0?0:period-1,finalUp=[],finalDown=[];let atrData=[],basicUp,basicDown,supertrend,prevFinalUp,prevFinalDown,prevST,prevY,y,i;if(xVal.length<=period||!isArray(yVal[0])||yVal[0].length!==4||period<0){return}atrData=ATRIndicator.prototype.getValues.call(this,series,{period:period}).yData;for(i=0;i<atrData.length;i++){y=yVal[periodsOffset+i];prevY=yVal[periodsOffset+i-1]||[];prevFinalUp=finalUp[i-1];prevFinalDown=finalDown[i-1];prevST=yData[i-1];if(i===0){prevFinalUp=prevFinalDown=prevST=0}basicUp=correctFloat((y[high]+y[low])/2+multiplier*atrData[i]);basicDown=correctFloat((y[high]+y[low])/2-multiplier*atrData[i]);if(basicUp<prevFinalUp||prevY[close]>prevFinalUp){finalUp[i]=basicUp}else{finalUp[i]=prevFinalUp}if(basicDown>prevFinalDown||prevY[close]<prevFinalDown){finalDown[i]=basicDown}else{finalDown[i]=prevFinalDown}if(prevST===prevFinalUp&&y[close]<finalUp[i]||prevST===prevFinalDown&&y[close]<finalDown[i]){supertrend=finalUp[i]}else if(prevST===prevFinalUp&&y[close]>finalUp[i]||prevST===prevFinalDown&&y[close]>finalDown[i]){supertrend=finalDown[i]}st.push([xVal[periodsOffset+i],supertrend]);xData.push(xVal[periodsOffset+i]);yData.push(supertrend)}return{values:st,xData:xData,yData:yData}}}SupertrendIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{index:void 0,multiplier:3,period:10},risingTrendColor:"#06b535",fallingTrendColor:"#f21313",changeTrendLine:{styles:{lineWidth:1,lineColor:"#333333",dashStyle:"LongDash"}}});extend(SupertrendIndicator.prototype,{nameBase:"Supertrend",nameComponents:["multiplier","period"]});SeriesRegistry.registerSeriesType("supertrend",SupertrendIndicator);export default SupertrendIndicator;"";