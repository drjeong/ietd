"use strict";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const{ema:EMAIndicator}=SeriesRegistry.seriesTypes;import U from"../../../Core/Utilities.js";const{correctFloat,isArray,merge}=U;class TEMAIndicator extends EMAIndicator{getEMA(yVal,prevEMA,SMA,index,i,xVal){return super.calculateEma(xVal||[],yVal,typeof i==="undefined"?1:i,this.EMApercent,prevEMA,typeof index==="undefined"?-1:index,SMA)}getTemaPoint(xVal,tripledPeriod,EMAlevels,i){const TEMAPoint=[xVal[i-3],correctFloat(3*EMAlevels.level1-3*EMAlevels.level2+EMAlevels.level3)];return TEMAPoint}getValues(series,params){const period=params.period,doubledPeriod=2*period,tripledPeriod=3*period,xVal=series.xData,yVal=series.yData,yValLen=yVal?yVal.length:0,tema=[],xDataTema=[],yDataTema=[],emaValues=[],emaLevel2Values=[],emaLevels={};let index=-1,accumulatePeriodPoints=0,sma=0,prevEMA,prevEMAlevel2,i,temaPoint;this.EMApercent=2/(period+1);if(yValLen<3*period-2){return}if(isArray(yVal[0])){index=params.index?params.index:0}accumulatePeriodPoints=super.accumulatePeriodPoints(period,index,yVal);sma=accumulatePeriodPoints/period;accumulatePeriodPoints=0;for(i=period;i<yValLen+3;i++){if(i<yValLen+1){emaLevels.level1=this.getEMA(yVal,prevEMA,sma,index,i)[1];emaValues.push(emaLevels.level1)}prevEMA=emaLevels.level1;if(i<doubledPeriod){accumulatePeriodPoints+=emaLevels.level1}else{if(i===doubledPeriod){sma=accumulatePeriodPoints/period;accumulatePeriodPoints=0}emaLevels.level1=emaValues[i-period-1];emaLevels.level2=this.getEMA([emaLevels.level1],prevEMAlevel2,sma)[1];emaLevel2Values.push(emaLevels.level2);prevEMAlevel2=emaLevels.level2;if(i<tripledPeriod){accumulatePeriodPoints+=emaLevels.level2}else{if(i===tripledPeriod){sma=accumulatePeriodPoints/period}if(i===yValLen+1){emaLevels.level1=emaValues[i-period-1];emaLevels.level2=this.getEMA([emaLevels.level1],prevEMAlevel2,sma)[1];emaLevel2Values.push(emaLevels.level2)}emaLevels.level1=emaValues[i-period-2];emaLevels.level2=emaLevel2Values[i-2*period-1];emaLevels.level3=this.getEMA([emaLevels.level2],emaLevels.prevLevel3,sma)[1];temaPoint=this.getTemaPoint(xVal,tripledPeriod,emaLevels,i);if(temaPoint){tema.push(temaPoint);xDataTema.push(temaPoint[0]);yDataTema.push(temaPoint[1])}emaLevels.prevLevel3=emaLevels.level3}}}return{values:tema,xData:xDataTema,yData:yDataTema}}}TEMAIndicator.defaultOptions=merge(EMAIndicator.defaultOptions);SeriesRegistry.registerSeriesType("tema",TEMAIndicator);export default TEMAIndicator;"";