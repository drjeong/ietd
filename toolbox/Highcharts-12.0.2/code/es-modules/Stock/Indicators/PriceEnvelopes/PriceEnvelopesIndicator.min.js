"use strict";import MultipleLinesComposition from"../MultipleLinesComposition.js";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const{sma:SMAIndicator}=SeriesRegistry.seriesTypes;import U from"../../../Core/Utilities.js";const{extend,isArray,merge}=U;class PriceEnvelopesIndicator extends SMAIndicator{init(){super.init.apply(this,arguments);this.options=merge({topLine:{styles:{lineColor:this.color}},bottomLine:{styles:{lineColor:this.color}}},this.options)}getValues(series,params){const period=params.period,topPercent=params.topBand,botPercent=params.bottomBand,xVal=series.xData,yVal=series.yData,yValLen=yVal?yVal.length:0,PE=[],xData=[],yData=[];let ML,TL,BL,date,slicedX,slicedY,point,i;if(xVal.length<period||!isArray(yVal[0])||yVal[0].length!==4){return}for(i=period;i<=yValLen;i++){slicedX=xVal.slice(i-period,i);slicedY=yVal.slice(i-period,i);point=super.getValues({xData:slicedX,yData:slicedY},params);date=point.xData[0];ML=point.yData[0];TL=ML*(1+topPercent);BL=ML*(1-botPercent);PE.push([date,TL,ML,BL]);xData.push(date);yData.push([TL,ML,BL])}return{values:PE,xData:xData,yData:yData}}}PriceEnvelopesIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{marker:{enabled:false},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span><b> {series.name}</b><br/>Top: {point.top}<br/>Middle: {point.middle}<br/>Bottom: {point.bottom}<br/>'},params:{period:20,topBand:.1,bottomBand:.1},bottomLine:{styles:{lineWidth:1,lineColor:void 0}},topLine:{styles:{lineWidth:1}},dataGrouping:{approximation:"averages"}});extend(PriceEnvelopesIndicator.prototype,{areaLinesNames:["top","bottom"],linesApiNames:["topLine","bottomLine"],nameComponents:["period","topBand","bottomBand"],nameBase:"Price envelopes",pointArrayMap:["top","middle","bottom"],parallelArrays:["x","y","top","bottom"],pointValKey:"middle"});MultipleLinesComposition.compose(PriceEnvelopesIndicator);SeriesRegistry.registerSeriesType("priceenvelopes",PriceEnvelopesIndicator);export default PriceEnvelopesIndicator;"";