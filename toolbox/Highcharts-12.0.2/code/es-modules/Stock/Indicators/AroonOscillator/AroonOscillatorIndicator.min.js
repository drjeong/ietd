"use strict";import MultipleLinesComposition from"../MultipleLinesComposition.js";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const{aroon:AroonIndicator}=SeriesRegistry.seriesTypes;import U from"../../../Core/Utilities.js";const{extend,merge}=U;class AroonOscillatorIndicator extends AroonIndicator{getValues(series,params){const ARO=[],xData=[],yData=[];let aroonUp,aroonDown,oscillator,i;const aroon=super.getValues.call(this,series,params);for(i=0;i<aroon.yData.length;i++){aroonUp=aroon.yData[i][0];aroonDown=aroon.yData[i][1];oscillator=aroonUp-aroonDown;ARO.push([aroon.xData[i],oscillator]);xData.push(aroon.xData[i]);yData.push(oscillator)}return{values:ARO,xData:xData,yData:yData}}}AroonOscillatorIndicator.defaultOptions=merge(AroonIndicator.defaultOptions,{tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span><b> {series.name}</b>: {point.y}'}});extend(AroonOscillatorIndicator.prototype,{nameBase:"Aroon Oscillator",linesApiNames:[],pointArrayMap:["y"],pointValKey:"y"});MultipleLinesComposition.compose(AroonIndicator);SeriesRegistry.registerSeriesType("aroonoscillator",AroonOscillatorIndicator);export default AroonOscillatorIndicator;"";