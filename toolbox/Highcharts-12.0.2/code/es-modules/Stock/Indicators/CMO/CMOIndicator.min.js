"use strict";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const{sma:SMAIndicator}=SeriesRegistry.seriesTypes;import U from"../../../Core/Utilities.js";const{isNumber,merge}=U;class CMOIndicator extends SMAIndicator{getValues(series,params){const period=params.period,xVal=series.xData,yVal=series.yData,yValLen=yVal?yVal.length:0,CMO=[],xData=[],yData=[];let i,index=params.index,values;if(xVal.length<period){return}if(isNumber(yVal[0])){values=yVal}else{index=Math.min(index,yVal[0].length-1);values=yVal.map(value=>value[index])}let firstAddedSum=0,sumOfHigherValues=0,sumOfLowerValues=0,y;for(let j=period;j>0;j--){if(values[j]>values[j-1]){sumOfHigherValues+=values[j]-values[j-1]}else if(values[j]<values[j-1]){sumOfLowerValues+=values[j-1]-values[j]}}y=sumOfHigherValues+sumOfLowerValues>0?100*(sumOfHigherValues-sumOfLowerValues)/(sumOfHigherValues+sumOfLowerValues):0;xData.push(xVal[period]);yData.push(y);CMO.push([xVal[period],y]);for(i=period+1;i<yValLen;i++){firstAddedSum=Math.abs(values[i-period-1]-values[i-period]);if(values[i]>values[i-1]){sumOfHigherValues+=values[i]-values[i-1]}else if(values[i]<values[i-1]){sumOfLowerValues+=values[i-1]-values[i]}if(values[i-period]>values[i-period-1]){sumOfHigherValues-=firstAddedSum}else{sumOfLowerValues-=firstAddedSum}y=sumOfHigherValues+sumOfLowerValues>0?100*(sumOfHigherValues-sumOfLowerValues)/(sumOfHigherValues+sumOfLowerValues):0;xData.push(xVal[i]);yData.push(y);CMO.push([xVal[i],y])}return{values:CMO,xData:xData,yData:yData}}}CMOIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{period:20,index:3}});SeriesRegistry.registerSeriesType("cmo",CMOIndicator);export default CMOIndicator;"";