"use strict";import MultipleLinesComposition from"../MultipleLinesComposition.js";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const{sma:SMAIndicator}=SeriesRegistry.seriesTypes;import U from"../../../Core/Utilities.js";const{correctFloat,extend,merge}=U;function getBaseForBand(low,high,factor){return correctFloat(high-low)/(correctFloat(high+low)/2)*1e3*factor}function getPointUB(high,base){return high*correctFloat(1+2*base)}function getPointLB(low,base){return low*correctFloat(1-2*base)}class ABandsIndicator extends SMAIndicator{getValues(series,params){const period=params.period,factor=params.factor,index=params.index,xVal=series.xData,yVal=series.yData,yValLen=yVal?yVal.length:0,UB=[],LB=[],ABANDS=[],low=2,high=1,xData=[],yData=[];let ML,TL,BL,date,bandBase,pointSMA,ubSMA,lbSMA,slicedX,slicedY,i;if(yValLen<period){return}for(i=0;i<=yValLen;i++){if(i<yValLen){bandBase=getBaseForBand(yVal[i][low],yVal[i][high],factor);UB.push(getPointUB(yVal[i][high],bandBase));LB.push(getPointLB(yVal[i][low],bandBase))}if(i>=period){slicedX=xVal.slice(i-period,i);slicedY=yVal.slice(i-period,i);ubSMA=super.getValues.call(this,{xData:slicedX,yData:UB.slice(i-period,i)},{period:period});lbSMA=super.getValues.call(this,{xData:slicedX,yData:LB.slice(i-period,i)},{period:period});pointSMA=super.getValues.call(this,{xData:slicedX,yData:slicedY},{period:period,index:index});date=pointSMA.xData[0];TL=ubSMA.yData[0];BL=lbSMA.yData[0];ML=pointSMA.yData[0];ABANDS.push([date,TL,ML,BL]);xData.push(date);yData.push([TL,ML,BL])}}return{values:ABANDS,xData:xData,yData:yData}}}ABandsIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{period:20,factor:.001,index:3},lineWidth:1,topLine:{styles:{lineWidth:1}},bottomLine:{styles:{lineWidth:1}},dataGrouping:{approximation:"averages"}});extend(ABandsIndicator.prototype,{areaLinesNames:["top","bottom"],linesApiNames:["topLine","bottomLine"],nameBase:"Acceleration Bands",nameComponents:["period","factor"],pointArrayMap:["top","middle","bottom"],pointValKey:"middle"});MultipleLinesComposition.compose(ABandsIndicator);SeriesRegistry.registerSeriesType("abands",ABandsIndicator);export default ABandsIndicator;"";