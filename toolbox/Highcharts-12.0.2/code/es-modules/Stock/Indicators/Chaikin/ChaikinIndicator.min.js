"use strict";import AD from"../AD/ADIndicator.js";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const{ema:EMAIndicator}=SeriesRegistry.seriesTypes;import U from"../../../Core/Utilities.js";const{correctFloat,extend,merge,error}=U;class ChaikinIndicator extends EMAIndicator{getValues(series,params){const periods=params.periods,period=params.period,CHA=[],xData=[],yData=[];let oscillator,i;if(periods.length!==2||periods[1]<=periods[0]){error('Error: "Chaikin requires two periods. Notice, first '+'period should be lower than the second one."');return}const ADL=AD.prototype.getValues.call(this,series,{volumeSeriesID:params.volumeSeriesID,period:period});if(!ADL){return}const SPE=super.getValues.call(this,ADL,{period:periods[0]});const LPE=super.getValues.call(this,ADL,{period:periods[1]});if(!SPE||!LPE){return}const periodsOffset=periods[1]-periods[0];for(i=0;i<LPE.yData.length;i++){oscillator=correctFloat(SPE.yData[i+periodsOffset]-LPE.yData[i]);CHA.push([LPE.xData[i],oscillator]);xData.push(LPE.xData[i]);yData.push(oscillator)}return{values:CHA,xData:xData,yData:yData}}}ChaikinIndicator.defaultOptions=merge(EMAIndicator.defaultOptions,{params:{index:void 0,volumeSeriesID:"volume",period:9,periods:[3,10]}});extend(ChaikinIndicator.prototype,{nameBase:"Chaikin Osc",nameComponents:["periods"]});SeriesRegistry.registerSeriesType("chaikin",ChaikinIndicator);export default ChaikinIndicator;"";