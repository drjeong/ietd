"use strict";import H from"../../../Core/Globals.js";const{noop}=H;import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const{column:{prototype:columnProto},sma:SMAIndicator}=SeriesRegistry.seriesTypes;import U from"../../../Core/Utilities.js";const{extend,merge,correctFloat,isArray}=U;class AOIndicator extends SMAIndicator{drawGraph(){const indicator=this,options=indicator.options,points=indicator.points,userColor=indicator.userOptions.color,positiveColor=options.greaterBarColor,negativeColor=options.lowerBarColor,firstPoint=points[0];let i;if(!userColor&&firstPoint){firstPoint.color=positiveColor;for(i=1;i<points.length;i++){if(points[i].y>points[i-1].y){points[i].color=positiveColor}else if(points[i].y<points[i-1].y){points[i].color=negativeColor}else{points[i].color=points[i-1].color}}}}getValues(series){const shortPeriod=5,longPeriod=34,xVal=series.xData||[],yVal=series.yData||[],yValLen=yVal.length,AO=[],xData=[],yData=[],high=1,low=2;let shortSMA,longSMA,awesome,shortLastIndex,longLastIndex,price,i,j,longSum=0,shortSum=0;if(xVal.length<=longPeriod||!isArray(yVal[0])||yVal[0].length!==4){return}for(i=0;i<longPeriod-1;i++){price=(yVal[i][high]+yVal[i][low])/2;if(i>=longPeriod-shortPeriod){shortSum=correctFloat(shortSum+price)}longSum=correctFloat(longSum+price)}for(j=longPeriod-1;j<yValLen;j++){price=(yVal[j][high]+yVal[j][low])/2;shortSum=correctFloat(shortSum+price);longSum=correctFloat(longSum+price);shortSMA=shortSum/shortPeriod;longSMA=longSum/longPeriod;awesome=correctFloat(shortSMA-longSMA);AO.push([xVal[j],awesome]);xData.push(xVal[j]);yData.push(awesome);shortLastIndex=j+1-shortPeriod;longLastIndex=j+1-longPeriod;shortSum=correctFloat(shortSum-(yVal[shortLastIndex][high]+yVal[shortLastIndex][low])/2);longSum=correctFloat(longSum-(yVal[longLastIndex][high]+yVal[longLastIndex][low])/2)}return{values:AO,xData:xData,yData:yData}}}AOIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{index:void 0,period:void 0},greaterBarColor:"#06b535",lowerBarColor:"#f21313",threshold:0,groupPadding:.2,pointPadding:.2,crisp:false,states:{hover:{halo:{size:0}}}});extend(AOIndicator.prototype,{nameBase:"AO",nameComponents:void 0,markerAttribs:noop,getColumnMetrics:columnProto.getColumnMetrics,crispCol:columnProto.crispCol,translate:columnProto.translate,drawPoints:columnProto.drawPoints});SeriesRegistry.registerSeriesType("ao",AOIndicator);export default AOIndicator;"";