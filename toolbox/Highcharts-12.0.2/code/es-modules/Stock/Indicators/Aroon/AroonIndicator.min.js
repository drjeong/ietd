"use strict";import MultipleLinesComposition from"../MultipleLinesComposition.js";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const{sma:SMAIndicator}=SeriesRegistry.seriesTypes;import U from"../../../Core/Utilities.js";const{extend,merge,pick}=U;function getExtremeIndexInArray(arr,extreme){let extremeValue=arr[0],valueIndex=0,i;for(i=1;i<arr.length;i++){if(extreme==="max"&&arr[i]>=extremeValue||extreme==="min"&&arr[i]<=extremeValue){extremeValue=arr[i];valueIndex=i}}return valueIndex}class AroonIndicator extends SMAIndicator{getValues(series,params){const period=params.period,xVal=series.xData,yVal=series.yData,yValLen=yVal?yVal.length:0,AR=[],xData=[],yData=[],low=2,high=1;let aroonUp,aroonDown,xLow,xHigh,i,slicedY;for(i=period-1;i<yValLen;i++){slicedY=yVal.slice(i-period+1,i+2);xLow=getExtremeIndexInArray(slicedY.map(function(elem){return pick(elem[low],elem)}),"min");xHigh=getExtremeIndexInArray(slicedY.map(function(elem){return pick(elem[high],elem)}),"max");aroonUp=xHigh/period*100;aroonDown=xLow/period*100;if(xVal[i+1]){AR.push([xVal[i+1],aroonUp,aroonDown]);xData.push(xVal[i+1]);yData.push([aroonUp,aroonDown])}}return{values:AR,xData:xData,yData:yData}}}AroonIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{index:void 0,period:25},marker:{enabled:false},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span><b> {series.name}</b><br/>Aroon Up: {point.y}<br/>Aroon Down: {point.aroonDown}<br/>'},aroonDown:{styles:{lineWidth:1,lineColor:void 0}},dataGrouping:{approximation:"averages"}});extend(AroonIndicator.prototype,{areaLinesNames:[],linesApiNames:["aroonDown"],nameBase:"Aroon",pointArrayMap:["y","aroonDown"],pointValKey:"y"});MultipleLinesComposition.compose(AroonIndicator);SeriesRegistry.registerSeriesType("aroon",AroonIndicator);export default AroonIndicator;"";