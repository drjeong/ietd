"use strict";import MultipleLinesComposition from"../MultipleLinesComposition.js";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const{ema:EMAIndicator,sma:SMAIndicator}=SeriesRegistry.seriesTypes;import U from"../../../Core/Utilities.js";const{correctFloat,error,extend,isArray,merge}=U;class KlingerIndicator extends SMAIndicator{calculateTrend(yVal,i){const isUpward=yVal[i][1]+yVal[i][2]+yVal[i][3]>yVal[i-1][1]+yVal[i-1][2]+yVal[i-1][3];return isUpward?1:-1}isValidData(firstYVal){const chart=this.chart,options=this.options,series=this.linkedParent,isSeriesOHLC=isArray(firstYVal)&&firstYVal.length===4,volumeSeries=this.volumeSeries||(this.volumeSeries=chart.get(options.params.volumeSeriesID));if(!volumeSeries){error("Series "+options.params.volumeSeriesID+" not found! Check `volumeSeriesID`.",true,series.chart)}const isLengthValid=[series,volumeSeries].every(function(series){return series&&series.dataTable.rowCount>=options.params.slowAvgPeriod});return!!(isLengthValid&&isSeriesOHLC)}getCM(previousCM,DM,trend,previousTrend,prevoiusDM){return correctFloat(DM+(trend===previousTrend?previousCM:prevoiusDM))}getDM(high,low){return correctFloat(high-low)}getVolumeForce(yVal){const volumeForce=[];let CM=0,DM,force,i=1,previousCM=0,previousDM=yVal[0][1]-yVal[0][2],previousTrend=0,trend;for(i;i<yVal.length;i++){trend=this.calculateTrend(yVal,i);DM=this.getDM(yVal[i][1],yVal[i][2]);CM=this.getCM(previousCM,DM,trend,previousTrend,previousDM);force=this.volumeSeries.getColumn("y")[i]*trend*Math.abs(2*(DM/CM-1))*100;volumeForce.push([force]);previousTrend=trend;previousCM=CM;previousDM=DM}return volumeForce}getEMA(yVal,prevEMA,SMA,EMApercent,index,i,xVal){return EMAIndicator.prototype.calculateEma(xVal||[],yVal,typeof i==="undefined"?1:i,EMApercent,prevEMA,typeof index==="undefined"?-1:index,SMA)}getSMA(period,index,values){return EMAIndicator.prototype.accumulatePeriodPoints(period,index,values)/period}getValues(series,params){const Klinger=[],xVal=series.xData,yVal=series.yData,xData=[],yData=[],calcSingal=[];let KO,i=0,fastEMA=0,slowEMA,previousFastEMA=void 0,previousSlowEMA=void 0,signal=null;if(!this.isValidData(yVal[0])){return}const volumeForce=this.getVolumeForce(yVal);const SMAFast=this.getSMA(params.fastAvgPeriod,0,volumeForce),SMASlow=this.getSMA(params.slowAvgPeriod,0,volumeForce);const fastEMApercent=2/(params.fastAvgPeriod+1),slowEMApercent=2/(params.slowAvgPeriod+1);for(i;i<yVal.length;i++){if(i>=params.fastAvgPeriod){fastEMA=this.getEMA(volumeForce,previousFastEMA,SMAFast,fastEMApercent,0,i,xVal)[1];previousFastEMA=fastEMA}if(i>=params.slowAvgPeriod){slowEMA=this.getEMA(volumeForce,previousSlowEMA,SMASlow,slowEMApercent,0,i,xVal)[1];previousSlowEMA=slowEMA;KO=correctFloat(fastEMA-slowEMA);calcSingal.push(KO);if(calcSingal.length>=params.signalPeriod){signal=calcSingal.slice(-params.signalPeriod).reduce((prev,curr)=>prev+curr)/params.signalPeriod}Klinger.push([xVal[i],KO,signal]);xData.push(xVal[i]);yData.push([KO,signal])}}return{values:Klinger,xData:xData,yData:yData}}}KlingerIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{fastAvgPeriod:34,slowAvgPeriod:55,signalPeriod:13,volumeSeriesID:"volume"},signalLine:{styles:{lineWidth:1,lineColor:"#ff0000"}},dataGrouping:{approximation:"averages"},tooltip:{pointFormat:'<span style="color: {point.color}">‚óè</span>'+"<b> {series.name}</b><br/>"+'<span style="color: {point.color}">Klinger</span>: '+"{point.y}<br/>"+'<span style="color: '+'{point.series.options.signalLine.styles.lineColor}">'+"Signal</span>"+": {point.signal}<br/>"}});extend(KlingerIndicator.prototype,{areaLinesNames:[],linesApiNames:["signalLine"],nameBase:"Klinger",nameComponents:["fastAvgPeriod","slowAvgPeriod"],pointArrayMap:["y","signal"],parallelArrays:["x","y","signal"],pointValKey:"y"});MultipleLinesComposition.compose(KlingerIndicator);SeriesRegistry.registerSeriesType("klinger",KlingerIndicator);export default KlingerIndicator;"";