"use strict";import MultipleLinesComposition from"../MultipleLinesComposition.js";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const{sma:SMAIndicator}=SeriesRegistry.seriesTypes;import U from"../../../Core/Utilities.js";const{extend,isArray,merge}=U;function getStandardDeviation(arr,index,isOHLC,mean){const arrLen=arr.length;let i=0,std=0,value,variance=0;for(;i<arrLen;i++){value=(isOHLC?arr[i][index]:arr[i])-mean;variance+=value*value}variance=variance/(arrLen-1);std=Math.sqrt(variance);return std}class BBIndicator extends SMAIndicator{init(){SeriesRegistry.seriesTypes.sma.prototype.init.apply(this,arguments);this.options=merge({topLine:{styles:{lineColor:this.color}},bottomLine:{styles:{lineColor:this.color}}},this.options)}getValues(series,params){const period=params.period,standardDeviation=params.standardDeviation,xData=[],yData=[],xVal=series.xData,yVal=series.yData,yValLen=yVal?yVal.length:0,BB=[];let ML,TL,BL,date,slicedX,slicedY,stdDev,point,i;if(xVal.length<period){return}const isOHLC=isArray(yVal[0]);for(i=period;i<=yValLen;i++){slicedX=xVal.slice(i-period,i);slicedY=yVal.slice(i-period,i);point=SeriesRegistry.seriesTypes.sma.prototype.getValues.call(this,{xData:slicedX,yData:slicedY},params);date=point.xData[0];ML=point.yData[0];stdDev=getStandardDeviation(slicedY,params.index,isOHLC,ML);TL=ML+standardDeviation*stdDev;BL=ML-standardDeviation*stdDev;BB.push([date,TL,ML,BL]);xData.push(date);yData.push([TL,ML,BL])}return{values:BB,xData:xData,yData:yData}}}BBIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{period:20,standardDeviation:2,index:3},bottomLine:{styles:{lineWidth:1,lineColor:void 0}},topLine:{styles:{lineWidth:1,lineColor:void 0}},tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span><b> {series.name}</b><br/>Top: {point.top}<br/>Middle: {point.middle}<br/>Bottom: {point.bottom}<br/>'},marker:{enabled:false},dataGrouping:{approximation:"averages"}});extend(BBIndicator.prototype,{areaLinesNames:["top","bottom"],linesApiNames:["topLine","bottomLine"],nameComponents:["period","standardDeviation"],pointArrayMap:["top","middle","bottom"],pointValKey:"middle"});MultipleLinesComposition.compose(BBIndicator);SeriesRegistry.registerSeriesType("bb",BBIndicator);export default BBIndicator;"";