"use strict";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const{sma:SMAIndicator}=SeriesRegistry.seriesTypes;import U from"../../../Core/Utilities.js";const{merge,extend}=U;class ZigzagIndicator extends SMAIndicator{getValues(series,params){const lowIndex=params.lowIndex,highIndex=params.highIndex,deviation=params.deviation/100,deviations={low:1+deviation,high:1-deviation},xVal=series.xData,yVal=series.yData,yValLen=yVal?yVal.length:0,zigzag=[],xData=[],yData=[];let i,j,zigzagPoint,directionUp,exitLoop=false,yIndex=false;if(!xVal||xVal.length<=1||yValLen&&(typeof yVal[0][lowIndex]==="undefined"||typeof yVal[0][highIndex]==="undefined")){return}const firstZigzagLow=yVal[0][lowIndex],firstZigzagHigh=yVal[0][highIndex];for(i=1;i<yValLen;i++){if(yVal[i][lowIndex]<=firstZigzagHigh*deviations.high){zigzag.push([xVal[0],firstZigzagHigh]);zigzagPoint=[xVal[i],yVal[i][lowIndex]];directionUp=true;exitLoop=true}else if(yVal[i][highIndex]>=firstZigzagLow*deviations.low){zigzag.push([xVal[0],firstZigzagLow]);zigzagPoint=[xVal[i],yVal[i][highIndex]];directionUp=false;exitLoop=true}if(exitLoop){xData.push(zigzag[0][0]);yData.push(zigzag[0][1]);j=i++;i=yValLen}}for(i=j;i<yValLen;i++){if(directionUp){if(yVal[i][lowIndex]<=zigzagPoint[1]){zigzagPoint=[xVal[i],yVal[i][lowIndex]]}if(yVal[i][highIndex]>=zigzagPoint[1]*deviations.low){yIndex=highIndex}}else{if(yVal[i][highIndex]>=zigzagPoint[1]){zigzagPoint=[xVal[i],yVal[i][highIndex]]}if(yVal[i][lowIndex]<=zigzagPoint[1]*deviations.high){yIndex=lowIndex}}if(yIndex!==false){zigzag.push(zigzagPoint);xData.push(zigzagPoint[0]);yData.push(zigzagPoint[1]);zigzagPoint=[xVal[i],yVal[i][yIndex]];directionUp=!directionUp;yIndex=false}}const zigzagLen=zigzag.length;if(zigzagLen!==0&&zigzag[zigzagLen-1][0]<xVal[yValLen-1]){zigzag.push(zigzagPoint);xData.push(zigzagPoint[0]);yData.push(zigzagPoint[1])}return{values:zigzag,xData:xData,yData:yData}}}ZigzagIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{index:void 0,period:void 0,lowIndex:2,highIndex:1,deviation:1}});extend(ZigzagIndicator.prototype,{nameComponents:["deviation"],nameSuffixes:["%"],nameBase:"Zig Zag"});SeriesRegistry.registerSeriesType("zigzag",ZigzagIndicator);export default ZigzagIndicator;"";