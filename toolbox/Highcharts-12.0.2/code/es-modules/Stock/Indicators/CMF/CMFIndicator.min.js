"use strict";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const{sma:SMAIndicator}=SeriesRegistry.seriesTypes;import U from"../../../Core/Utilities.js";const{merge}=U;class CMFIndicator extends SMAIndicator{constructor(){super(...arguments);this.nameBase="Chaikin Money Flow"}isValid(){const chart=this.chart,options=this.options,series=this.linkedParent,volumeSeries=this.volumeSeries||(this.volumeSeries=chart.get(options.params.volumeSeriesID)),isSeriesOHLC=series?.pointArrayMap?.length===4;function isLengthValid(serie){return serie.dataTable.rowCount>=options.params.period}return!!(series&&volumeSeries&&isLengthValid(series)&&isLengthValid(volumeSeries)&&isSeriesOHLC)}getValues(series,params){if(!this.isValid()){return}return this.getMoneyFlow(series.xData,series.yData,this.volumeSeries.getColumn("y"),params.period)}getMoneyFlow(xData,seriesYData,volumeSeriesYData,period){const len=seriesYData.length,moneyFlowVolume=[],moneyFlowXData=[],moneyFlowYData=[],values=[];let i,point,nullIndex=-1,sumVolume=0,sumMoneyFlowVolume=0;function getMoneyFlowVolume(ohlc,volume){const high=ohlc[1],low=ohlc[2],close=ohlc[3],isValid=volume!==null&&high!==null&&low!==null&&close!==null&&high!==low;function getMoneyFlowMultiplier(h,l,c){return(c-l-(h-c))/(h-l)}return isValid?getMoneyFlowMultiplier(high,low,close)*volume:(nullIndex=i,null)}if(period>0&&period<=len){for(i=0;i<period;i++){moneyFlowVolume[i]=getMoneyFlowVolume(seriesYData[i],volumeSeriesYData[i]);sumVolume+=volumeSeriesYData[i];sumMoneyFlowVolume+=moneyFlowVolume[i]}moneyFlowXData.push(xData[i-1]);moneyFlowYData.push(i-nullIndex>=period&&sumVolume!==0?sumMoneyFlowVolume/sumVolume:null);values.push([moneyFlowXData[0],moneyFlowYData[0]]);for(;i<len;i++){moneyFlowVolume[i]=getMoneyFlowVolume(seriesYData[i],volumeSeriesYData[i]);sumVolume-=volumeSeriesYData[i-period];sumVolume+=volumeSeriesYData[i];sumMoneyFlowVolume-=moneyFlowVolume[i-period];sumMoneyFlowVolume+=moneyFlowVolume[i];point=[xData[i],i-nullIndex>=period?sumMoneyFlowVolume/sumVolume:null];moneyFlowXData.push(point[0]);moneyFlowYData.push(point[1]);values.push([point[0],point[1]])}}return{values:values,xData:moneyFlowXData,yData:moneyFlowYData}}}CMFIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{index:void 0,volumeSeriesID:"volume"}});SeriesRegistry.registerSeriesType("cmf",CMFIndicator);export default CMFIndicator;"";