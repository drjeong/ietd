"use strict";import AU from"../ArrayUtilities.js";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const{sma:SMAIndicator}=SeriesRegistry.seriesTypes;import U from"../../../Core/Utilities.js";const{extend,isArray,merge}=U;class WilliamsRIndicator extends SMAIndicator{getValues(series,params){const period=params.period,xVal=series.xData,yVal=series.yData,yValLen=yVal?yVal.length:0,WR=[],xData=[],yData=[],close=3,low=2,high=1;let slicedY,extremes,R,HH,LL,CC,i;if(xVal.length<period||!isArray(yVal[0])||yVal[0].length!==4){return}for(i=period-1;i<yValLen;i++){slicedY=yVal.slice(i-period+1,i+1);extremes=AU.getArrayExtremes(slicedY,low,high);LL=extremes[0];HH=extremes[1];CC=yVal[i][close];R=(HH-CC)/(HH-LL)*-100;if(xVal[i]){WR.push([xVal[i],R]);xData.push(xVal[i]);yData.push(R)}}return{values:WR,xData:xData,yData:yData}}}WilliamsRIndicator.defaultOptions=merge(SMAIndicator.defaultOptions,{params:{index:void 0,period:14}});extend(WilliamsRIndicator.prototype,{nameBase:"Williams %R"});SeriesRegistry.registerSeriesType("williamsr",WilliamsRIndicator);export default WilliamsRIndicator;"";