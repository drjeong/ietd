"use strict";import SeriesRegistry from"../../../Core/Series/SeriesRegistry.js";const{ema:EMAIndicator}=SeriesRegistry.seriesTypes;import U from"../../../Core/Utilities.js";const{correctFloat,extend,merge,error}=U;class PPOIndicator extends EMAIndicator{getValues(series,params){const periods=params.periods,index=params.index,PPO=[],xData=[],yData=[];let oscillator,i;if(periods.length!==2||periods[1]<=periods[0]){error('Error: "PPO requires two periods. Notice, first period '+'should be lower than the second one."');return}const SPE=super.getValues.call(this,series,{index:index,period:periods[0]});const LPE=super.getValues.call(this,series,{index:index,period:periods[1]});if(!SPE||!LPE){return}const periodsOffset=periods[1]-periods[0];for(i=0;i<LPE.yData.length;i++){oscillator=correctFloat((SPE.yData[i+periodsOffset]-LPE.yData[i])/LPE.yData[i]*100);PPO.push([LPE.xData[i],oscillator]);xData.push(LPE.xData[i]);yData.push(oscillator)}return{values:PPO,xData:xData,yData:yData}}}PPOIndicator.defaultOptions=merge(EMAIndicator.defaultOptions,{params:{period:void 0,periods:[12,26]}});extend(PPOIndicator.prototype,{nameBase:"PPO",nameComponents:["periods"]});SeriesRegistry.registerSeriesType("ppo",PPOIndicator);export default PPOIndicator;"";