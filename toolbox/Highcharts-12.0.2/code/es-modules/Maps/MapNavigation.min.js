"use strict";import D from"../Core/Defaults.js";const{setOptions}=D;import H from"../Core/Globals.js";const{composed}=H;import MapNavigationDefaults from"./MapNavigationDefaults.js";import MapPointer from"./MapPointer.js";import MapSymbols from"./MapSymbols.js";import U from"../Core/Utilities.js";const{addEvent,extend,merge,objectEach,pick,pushUnique}=U;function stopEvent(e){if(e){e.preventDefault?.();e.stopPropagation?.();e.cancelBubble=true}}class MapNavigation{static compose(MapChartClass,PointerClass,SVGRendererClass){MapPointer.compose(PointerClass);MapSymbols.compose(SVGRendererClass);if(pushUnique(composed,"Map.Navigation")){addEvent(MapChartClass,"beforeRender",function(){this.mapNavigation=new MapNavigation(this);this.mapNavigation.update()});setOptions(MapNavigationDefaults)}}constructor(chart){this.chart=chart;this.navButtons=[]}update(options){const mapNav=this,chart=mapNav.chart,navButtons=mapNav.navButtons,outerHandler=function(e){this.handler.call(chart,e);stopEvent(e)};let navOptions=chart.options.mapNavigation;if(options){navOptions=chart.options.mapNavigation=merge(chart.options.mapNavigation,options)}while(navButtons.length){navButtons.pop()?.destroy()}if(!chart.renderer.forExport&&pick(navOptions.enableButtons,navOptions.enabled)){if(!mapNav.navButtonsGroup){mapNav.navButtonsGroup=chart.renderer.g().attr({zIndex:7}).add()}objectEach(navOptions.buttons,(buttonOptions,n)=>{buttonOptions=merge(navOptions.buttonOptions,buttonOptions);const attr={padding:buttonOptions.padding};if(!chart.styledMode&&buttonOptions.theme){extend(attr,buttonOptions.theme);attr.style=merge(buttonOptions.theme.style,buttonOptions.style)}const{text,width=0,height=0,padding=0}=buttonOptions;const button=chart.renderer.button(text!=="+"&&text!=="-"&&text||"",0,0,outerHandler,attr,void 0,void 0,void 0,n==="zoomIn"?"topbutton":"bottombutton").addClass("highcharts-map-navigation highcharts-"+{zoomIn:"zoom-in",zoomOut:"zoom-out"}[n]).attr({width:width,height:height,title:chart.options.lang[n],zIndex:5}).add(mapNav.navButtonsGroup);if(text==="+"||text==="-"){const w=width+1,d=[["M",padding+3,padding+height/2],["L",padding+w-3,padding+height/2]];if(text==="+"){d.push(["M",padding+w/2,padding+3],["L",padding+w/2,padding+height-3])}chart.renderer.path(d).addClass("highcharts-button-symbol").attr(chart.styledMode?{}:{stroke:buttonOptions.style?.color,"stroke-width":3,"stroke-linecap":"round"}).add(button)}button.handler=buttonOptions.onclick;addEvent(button.element,"dblclick",stopEvent);navButtons.push(button);extend(buttonOptions,{width:button.width,height:2*(button.height||0)});if(!chart.hasLoaded){const unbind=addEvent(chart,"load",()=>{if(button.element){button.align(buttonOptions,false,buttonOptions.alignTo)}unbind()})}else{button.align(buttonOptions,false,buttonOptions.alignTo)}});const isIntersectRect=(box1,box2)=>!(box2.x>=box1.x+box1.width||box2.x+box2.width<=box1.x||box2.y>=box1.y+box1.height||box2.y+box2.height<=box1.y);const adjustMapNavBtn=function(){const expBtnBBox=chart.exportingGroup?.getBBox();if(expBtnBBox){const navBtnsBBox=mapNav.navButtonsGroup.getBBox();if(isIntersectRect(expBtnBBox,navBtnsBBox)){const aboveExpBtn=-navBtnsBBox.y-navBtnsBBox.height+expBtnBBox.y-5,belowExpBtn=expBtnBBox.y+expBtnBBox.height-navBtnsBBox.y+5,mapNavVerticalAlign=navOptions.buttonOptions&&navOptions.buttonOptions.verticalAlign;mapNav.navButtonsGroup.attr({translateY:mapNavVerticalAlign==="bottom"?aboveExpBtn:belowExpBtn})}}};if(!chart.hasLoaded){addEvent(chart,"render",adjustMapNavBtn)}}this.updateEvents(navOptions)}updateEvents(options){const chart=this.chart;if(pick(options.enableDoubleClickZoom,options.enabled)||options.enableDoubleClickZoomTo){this.unbindDblClick=this.unbindDblClick||addEvent(chart.container,"dblclick",function(e){chart.pointer.onContainerDblClick(e)})}else if(this.unbindDblClick){this.unbindDblClick=this.unbindDblClick()}if(pick(options.enableMouseWheelZoom,options.enabled)){this.unbindMouseWheel=this.unbindMouseWheel||addEvent(chart.container,"wheel",function(e){if(!chart.pointer.inClass(e.target,"highcharts-no-mousewheel")){const initialZoom=chart.mapView?.zoom;chart.pointer.onContainerMouseWheel(e);if(initialZoom!==chart.mapView?.zoom){stopEvent(e)}}return false})}else if(this.unbindMouseWheel){this.unbindMouseWheel=this.unbindMouseWheel()}}}export default MapNavigation;