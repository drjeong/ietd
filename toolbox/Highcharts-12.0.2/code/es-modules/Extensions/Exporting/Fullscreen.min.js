"use strict";import AST from"../../Core/Renderer/HTML/AST.js";import H from"../../Core/Globals.js";const{composed}=H;import U from"../../Core/Utilities.js";const{addEvent,fireEvent,pushUnique}=U;function onChartBeforeRender(){this.fullscreen=new Fullscreen(this)}class Fullscreen{static compose(ChartClass){if(pushUnique(composed,"Fullscreen")){addEvent(ChartClass,"beforeRender",onChartBeforeRender)}}constructor(chart){this.chart=chart;this.isOpen=false;const container=chart.renderTo;if(!this.browserProps){if(typeof container.requestFullscreen==="function"){this.browserProps={fullscreenChange:"fullscreenchange",requestFullscreen:"requestFullscreen",exitFullscreen:"exitFullscreen"}}else if(container.mozRequestFullScreen){this.browserProps={fullscreenChange:"mozfullscreenchange",requestFullscreen:"mozRequestFullScreen",exitFullscreen:"mozCancelFullScreen"}}else if(container.webkitRequestFullScreen){this.browserProps={fullscreenChange:"webkitfullscreenchange",requestFullscreen:"webkitRequestFullScreen",exitFullscreen:"webkitExitFullscreen"}}else if(container.msRequestFullscreen){this.browserProps={fullscreenChange:"MSFullscreenChange",requestFullscreen:"msRequestFullscreen",exitFullscreen:"msExitFullscreen"}}}}close(){const fullscreen=this,chart=fullscreen.chart,optionsChart=chart.options.chart;fireEvent(chart,"fullscreenClose",null,function(){if(fullscreen.isOpen&&fullscreen.browserProps&&chart.container.ownerDocument instanceof Document){chart.container.ownerDocument[fullscreen.browserProps.exitFullscreen]()}if(fullscreen.unbindFullscreenEvent){fullscreen.unbindFullscreenEvent=fullscreen.unbindFullscreenEvent()}chart.setSize(fullscreen.origWidth,fullscreen.origHeight,false);fullscreen.origWidth=void 0;fullscreen.origHeight=void 0;optionsChart.width=fullscreen.origWidthOption;optionsChart.height=fullscreen.origHeightOption;fullscreen.origWidthOption=void 0;fullscreen.origHeightOption=void 0;fullscreen.isOpen=false;fullscreen.setButtonText()})}open(){const fullscreen=this,chart=fullscreen.chart,optionsChart=chart.options.chart;fireEvent(chart,"fullscreenOpen",null,function(){if(optionsChart){fullscreen.origWidthOption=optionsChart.width;fullscreen.origHeightOption=optionsChart.height}fullscreen.origWidth=chart.chartWidth;fullscreen.origHeight=chart.chartHeight;if(fullscreen.browserProps){const unbindChange=addEvent(chart.container.ownerDocument,fullscreen.browserProps.fullscreenChange,function(){if(fullscreen.isOpen){fullscreen.isOpen=false;fullscreen.close()}else{chart.setSize(null,null,false);fullscreen.isOpen=true;fullscreen.setButtonText()}});const unbindDestroy=addEvent(chart,"destroy",unbindChange);fullscreen.unbindFullscreenEvent=()=>{unbindChange();unbindDestroy()};const promise=chart.renderTo[fullscreen.browserProps.requestFullscreen]();if(promise){promise["catch"](function(){alert("Full screen is not supported inside a frame.")})}}})}setButtonText(){const chart=this.chart,exportDivElements=chart.exportDivElements,exportingOptions=chart.options.exporting,menuItems=exportingOptions&&exportingOptions.buttons&&exportingOptions.buttons.contextButton.menuItems,lang=chart.options.lang;if(exportingOptions&&exportingOptions.menuItemDefinitions&&lang&&lang.exitFullscreen&&lang.viewFullscreen&&menuItems&&exportDivElements){const exportDivElement=exportDivElements[menuItems.indexOf("viewFullscreen")];if(exportDivElement){AST.setElementHTML(exportDivElement,!this.isOpen?exportingOptions.menuItemDefinitions.viewFullscreen.text||lang.viewFullscreen:lang.exitFullscreen)}}}toggle(){const fullscreen=this;if(!fullscreen.isOpen){fullscreen.open()}else{fullscreen.close()}}}export default Fullscreen;"";"";