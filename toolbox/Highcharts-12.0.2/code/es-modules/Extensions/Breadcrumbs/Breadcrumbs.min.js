"use strict";import BreadcrumbsDefaults from"./BreadcrumbsDefaults.js";import F from"../../Core/Templating.js";const{format}=F;import H from"../../Core/Globals.js";const{composed}=H;import U from"../../Core/Utilities.js";const{addEvent,defined,extend,fireEvent,isString,merge,objectEach,pick,pushUnique}=U;function onChartAfterShowResetZoom(){const chart=this;if(chart.breadcrumbs){const bbox=chart.resetZoomButton&&chart.resetZoomButton.getBBox(),breadcrumbsOptions=chart.breadcrumbs.options;if(bbox&&breadcrumbsOptions.position.align==="right"&&breadcrumbsOptions.relativeTo==="plotBox"){chart.breadcrumbs.alignBreadcrumbsGroup(-bbox.width-breadcrumbsOptions.buttonSpacing)}}}function onChartDestroy(){if(this.breadcrumbs){this.breadcrumbs.destroy();this.breadcrumbs=void 0}}function onChartGetMargins(){const breadcrumbs=this.breadcrumbs;if(breadcrumbs&&!breadcrumbs.options.floating&&breadcrumbs.level){const breadcrumbsOptions=breadcrumbs.options,buttonTheme=breadcrumbsOptions.buttonTheme,breadcrumbsHeight=(buttonTheme.height||0)+2*(buttonTheme.padding||0)+breadcrumbsOptions.buttonSpacing,verticalAlign=breadcrumbsOptions.position.verticalAlign;if(verticalAlign==="bottom"){this.marginBottom=(this.marginBottom||0)+breadcrumbsHeight;breadcrumbs.yOffset=breadcrumbsHeight}else if(verticalAlign!=="middle"){this.plotTop+=breadcrumbsHeight;breadcrumbs.yOffset=-breadcrumbsHeight}else{breadcrumbs.yOffset=void 0}}}function onChartRedraw(){this.breadcrumbs&&this.breadcrumbs.redraw()}function onChartSelection(event){if(event.resetSelection===true&&this.breadcrumbs){this.breadcrumbs.alignBreadcrumbsGroup()}}class Breadcrumbs{static compose(ChartClass,highchartsDefaultOptions){if(pushUnique(composed,"Breadcrumbs")){addEvent(ChartClass,"destroy",onChartDestroy);addEvent(ChartClass,"afterShowResetZoom",onChartAfterShowResetZoom);addEvent(ChartClass,"getMargins",onChartGetMargins);addEvent(ChartClass,"redraw",onChartRedraw);addEvent(ChartClass,"selection",onChartSelection);extend(highchartsDefaultOptions.lang,BreadcrumbsDefaults.lang)}}constructor(chart,userOptions){this.elementList={};this.isDirty=true;this.level=0;this.list=[];const chartOptions=merge(chart.options.drilldown&&chart.options.drilldown.drillUpButton,Breadcrumbs.defaultOptions,chart.options.navigation&&chart.options.navigation.breadcrumbs,userOptions);this.chart=chart;this.options=chartOptions||{}}updateProperties(list){this.setList(list);this.setLevel();this.isDirty=true}setList(list){this.list=list}setLevel(){this.level=this.list.length&&this.list.length-1}getLevel(){return this.level}getButtonText(breadcrumb){const breadcrumbs=this,chart=breadcrumbs.chart,breadcrumbsOptions=breadcrumbs.options,lang=chart.options.lang,textFormat=pick(breadcrumbsOptions.format,breadcrumbsOptions.showFullPath?"{level.name}":"← {level.name}"),defaultText=lang&&pick(lang.drillUpText,lang.mainBreadcrumb);let returnText=breadcrumbsOptions.formatter&&breadcrumbsOptions.formatter(breadcrumb)||format(textFormat,{level:breadcrumb.levelOptions},chart)||"";if((isString(returnText)&&!returnText.length||returnText==="← ")&&defined(defaultText)){returnText=!breadcrumbsOptions.showFullPath?"← "+defaultText:defaultText}return returnText}redraw(){if(this.isDirty){this.render()}if(this.group){this.group.align()}this.isDirty=false}render(){const breadcrumbs=this,chart=breadcrumbs.chart,breadcrumbsOptions=breadcrumbs.options;if(!breadcrumbs.group&&breadcrumbsOptions){breadcrumbs.group=chart.renderer.g("breadcrumbs-group").addClass("highcharts-no-tooltip highcharts-breadcrumbs").attr({zIndex:breadcrumbsOptions.zIndex}).add()}if(breadcrumbsOptions.showFullPath){this.renderFullPathButtons()}else{this.renderSingleButton()}this.alignBreadcrumbsGroup()}renderFullPathButtons(){this.destroySingleButton();this.resetElementListState();this.updateListElements();this.destroyListElements()}renderSingleButton(){const breadcrumbs=this,chart=breadcrumbs.chart,list=breadcrumbs.list,breadcrumbsOptions=breadcrumbs.options,buttonSpacing=breadcrumbsOptions.buttonSpacing;this.destroyListElements();const posX=breadcrumbs.group?breadcrumbs.group.getBBox().width:buttonSpacing,posY=buttonSpacing;const previousBreadcrumb=list[list.length-2];if(!chart.drillUpButton&&this.level>0){chart.drillUpButton=breadcrumbs.renderButton(previousBreadcrumb,posX,posY)}else if(chart.drillUpButton){if(this.level>0){this.updateSingleButton()}else{this.destroySingleButton()}}}alignBreadcrumbsGroup(xOffset){const breadcrumbs=this;if(breadcrumbs.group){const breadcrumbsOptions=breadcrumbs.options,buttonTheme=breadcrumbsOptions.buttonTheme,positionOptions=breadcrumbsOptions.position,alignTo=breadcrumbsOptions.relativeTo==="chart"||breadcrumbsOptions.relativeTo==="spacingBox"?void 0:"plotBox",bBox=breadcrumbs.group.getBBox(),additionalSpace=2*(buttonTheme.padding||0)+breadcrumbsOptions.buttonSpacing;positionOptions.width=bBox.width+additionalSpace;positionOptions.height=bBox.height+additionalSpace;const newPositions=merge(positionOptions);if(xOffset){newPositions.x+=xOffset}if(breadcrumbs.options.rtl){newPositions.x+=positionOptions.width}newPositions.y=pick(newPositions.y,this.yOffset,0);breadcrumbs.group.align(newPositions,true,alignTo)}}renderButton(breadcrumb,posX,posY){const breadcrumbs=this,chart=this.chart,breadcrumbsOptions=breadcrumbs.options,buttonTheme=merge(breadcrumbsOptions.buttonTheme);const button=chart.renderer.button(breadcrumbs.getButtonText(breadcrumb),posX,posY,function(e){const buttonEvents=breadcrumbsOptions.events&&breadcrumbsOptions.events.click;let callDefaultEvent;if(buttonEvents){callDefaultEvent=buttonEvents.call(breadcrumbs,e,breadcrumb)}if(callDefaultEvent!==false){if(!breadcrumbsOptions.showFullPath){e.newLevel=breadcrumbs.level-1}else{e.newLevel=breadcrumb.level}fireEvent(breadcrumbs,"up",e)}},buttonTheme).addClass("highcharts-breadcrumbs-button").add(breadcrumbs.group);if(!chart.styledMode){button.attr(breadcrumbsOptions.style)}return button}renderSeparator(posX,posY){const breadcrumbs=this,chart=this.chart,breadcrumbsOptions=breadcrumbs.options,separatorOptions=breadcrumbsOptions.separator;const separator=chart.renderer.label(separatorOptions.text,posX,posY,void 0,void 0,void 0,false).addClass("highcharts-breadcrumbs-separator").add(breadcrumbs.group);if(!chart.styledMode){separator.css(separatorOptions.style)}return separator}update(options){merge(true,this.options,options);this.destroy();this.isDirty=true}updateSingleButton(){const chart=this.chart,currentBreadcrumb=this.list[this.level-1];if(chart.drillUpButton){chart.drillUpButton.attr({text:this.getButtonText(currentBreadcrumb)})}}destroy(){this.destroySingleButton();this.destroyListElements(true);if(this.group){this.group.destroy()}this.group=void 0}destroyListElements(force){const elementList=this.elementList;objectEach(elementList,(element,level)=>{if(force||!elementList[level].updated){element=elementList[level];element.button&&element.button.destroy();element.separator&&element.separator.destroy();delete element.button;delete element.separator;delete elementList[level]}});if(force){this.elementList={}}}destroySingleButton(){if(this.chart.drillUpButton){this.chart.drillUpButton.destroy();this.chart.drillUpButton=void 0}}resetElementListState(){objectEach(this.elementList,element=>{element.updated=false})}updateListElements(){const breadcrumbs=this,elementList=breadcrumbs.elementList,buttonSpacing=breadcrumbs.options.buttonSpacing,posY=buttonSpacing,list=breadcrumbs.list,rtl=breadcrumbs.options.rtl,rtlFactor=rtl?-1:1,updateXPosition=function(element,spacing){return rtlFactor*element.getBBox().width+rtlFactor*spacing},adjustToRTL=function(element,posX,posY){element.translate(posX-element.getBBox().width,posY)};let posX=breadcrumbs.group?updateXPosition(breadcrumbs.group,buttonSpacing):buttonSpacing,currentBreadcrumb,breadcrumb;for(let i=0,iEnd=list.length;i<iEnd;++i){const isLast=i===iEnd-1;let button,separator;breadcrumb=list[i];if(elementList[breadcrumb.level]){currentBreadcrumb=elementList[breadcrumb.level];button=currentBreadcrumb.button;if(!currentBreadcrumb.separator&&!isLast){posX+=rtlFactor*buttonSpacing;currentBreadcrumb.separator=breadcrumbs.renderSeparator(posX,posY);if(rtl){adjustToRTL(currentBreadcrumb.separator,posX,posY)}posX+=updateXPosition(currentBreadcrumb.separator,buttonSpacing)}else if(currentBreadcrumb.separator&&isLast){currentBreadcrumb.separator.destroy();delete currentBreadcrumb.separator}elementList[breadcrumb.level].updated=true}else{button=breadcrumbs.renderButton(breadcrumb,posX,posY);if(rtl){adjustToRTL(button,posX,posY)}posX+=updateXPosition(button,buttonSpacing);if(!isLast){separator=breadcrumbs.renderSeparator(posX,posY);if(rtl){adjustToRTL(separator,posX,posY)}posX+=updateXPosition(separator,buttonSpacing)}elementList[breadcrumb.level]={button:button,separator:separator,updated:true}}if(button){button.setState(isLast?2:0)}}}}Breadcrumbs.defaultOptions=BreadcrumbsDefaults.options;export default Breadcrumbs;"";