"use strict";import U from"../../Core/Utilities.js";const{addEvent,isObject,pick,defined,merge}=U;import NBU from"../Annotations/NavigationBindingsUtilities.js";const{getAssignedAxis}=NBU;const composedClasses=[],defaultOptions={enabled:true,sensitivity:1.1};let wheelTimer;const optionsToObject=options=>{if(!isObject(options)){options={enabled:options??true}}return merge(defaultOptions,options)};const zoomBy=function(chart,howMuch,xAxis,yAxis,mouseX,mouseY,options){const type=pick(options.type,chart.zooming.type,"");let axes=[];if(type==="x"){axes=xAxis}else if(type==="y"){axes=yAxis}else if(type==="xy"){axes=chart.axes}const hasZoomed=chart.transform({axes:axes,to:{x:mouseX-5,y:mouseY-5,width:10,height:10},from:{x:mouseX-5*howMuch,y:mouseY-5*howMuch,width:10*howMuch,height:10*howMuch},trigger:"mousewheel"});if(hasZoomed){if(defined(wheelTimer)){clearTimeout(wheelTimer)}wheelTimer=setTimeout(()=>{chart.pointer?.drop()},400)}return hasZoomed};function onAfterGetContainer(){const wheelZoomOptions=optionsToObject(this.zooming.mouseWheel);if(wheelZoomOptions.enabled){addEvent(this.container,"wheel",e=>{e=this.pointer?.normalize(e)||e;const{pointer}=this,allowZoom=pointer&&!pointer.inClass(e.target,"highcharts-no-mousewheel");if(this.isInsidePlot(e.chartX-this.plotLeft,e.chartY-this.plotTop)&&allowZoom){const wheelSensitivity=wheelZoomOptions.sensitivity||1.1,delta=e.detail||(e.deltaY||0)/120,xAxisCoords=getAssignedAxis(pointer.getCoordinates(e).xAxis),yAxisCoords=getAssignedAxis(pointer.getCoordinates(e).yAxis);const hasZoomed=zoomBy(this,Math.pow(wheelSensitivity,delta),xAxisCoords?[xAxisCoords.axis]:this.xAxis,yAxisCoords?[yAxisCoords.axis]:this.yAxis,e.chartX,e.chartY,wheelZoomOptions);if(hasZoomed){e.preventDefault?.()}}})}}function compose(ChartClass){if(composedClasses.indexOf(ChartClass)===-1){composedClasses.push(ChartClass);addEvent(ChartClass,"afterGetContainer",onAfterGetContainer)}}const MouseWheelZoomComposition={compose:compose};export default MouseWheelZoomComposition;"";