"use strict";import Annotation from"../Annotation.js";import CrookedLine from"./CrookedLine.js";import U from"../../../Core/Utilities.js";const{merge}=U;class ElliottWave extends CrookedLine{addLabels(){this.getPointsOptions().forEach((point,i)=>{const typeOptions=this.options.typeOptions,label=this.initLabel(merge(point.label,{text:typeOptions.labels[i],point:function(target){return target.annotation.points[i]}}),false);point.label=label.options})}}ElliottWave.prototype.defaultOptions=merge(CrookedLine.prototype.defaultOptions,{typeOptions:{labels:["(0)","(A)","(B)","(C)","(D)","(E)"],line:{strokeWidth:1}},labelOptions:{align:"center",allowOverlap:true,crop:true,overflow:"none",type:"rect",backgroundColor:"none",borderWidth:0,y:-5}});Annotation.types.elliottWave=ElliottWave;export default ElliottWave;