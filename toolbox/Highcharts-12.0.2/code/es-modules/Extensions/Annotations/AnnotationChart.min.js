"use strict";import U from"../../Core/Utilities.js";const{addEvent,erase,find,fireEvent,pick,wrap}=U;function chartAddAnnotation(userOptions,redraw){const annotation=this.initAnnotation(userOptions);this.options.annotations.push(annotation.options);if(pick(redraw,true)){annotation.redraw();annotation.graphic.attr({opacity:1})}return annotation}function chartCallback(){const chart=this;chart.plotBoxClip=this.renderer.clipRect(this.plotBox);chart.controlPointsGroup=chart.renderer.g("control-points").attr({zIndex:99}).clip(chart.plotBoxClip).add();chart.options.annotations.forEach((annotationOptions,i)=>{if(!chart.annotations.some(annotation=>annotation.options===annotationOptions)){const annotation=chart.initAnnotation(annotationOptions);chart.options.annotations[i]=annotation.options}});chart.drawAnnotations();addEvent(chart,"redraw",chart.drawAnnotations);addEvent(chart,"destroy",function(){chart.plotBoxClip.destroy();chart.controlPointsGroup.destroy()});addEvent(chart,"exportData",function(event){const annotations=chart.annotations,csvColumnHeaderFormatter=(this.options.exporting&&this.options.exporting.csv||{}).columnHeaderFormatter,multiLevelHeaders=!event.dataRows[1].xValues,annotationHeader=chart.options.lang&&chart.options.lang.exportData&&chart.options.lang.exportData.annotationHeader,columnHeaderFormatter=function(index){let s;if(csvColumnHeaderFormatter){s=csvColumnHeaderFormatter(index);if(s!==false){return s}}s=annotationHeader+" "+index;if(multiLevelHeaders){return{columnTitle:s,topLevelColumnTitle:s}}return s},startRowLength=event.dataRows[0].length,annotationSeparator=chart.options.exporting&&chart.options.exporting.csv&&chart.options.exporting.csv.annotations&&chart.options.exporting.csv.annotations.itemDelimiter,joinAnnotations=chart.options.exporting&&chart.options.exporting.csv&&chart.options.exporting.csv.annotations&&chart.options.exporting.csv.annotations.join;annotations.forEach(annotation=>{if(annotation.options.labelOptions&&annotation.options.labelOptions.includeInDataExport){annotation.labels.forEach(label=>{if(label.options.text){const annotationText=label.options.text;label.points.forEach(points=>{const annotationX=points.x,xAxisIndex=points.series.xAxis?points.series.xAxis.index:-1;let wasAdded=false;if(xAxisIndex===-1){const n=event.dataRows[0].length,newRow=new Array(n);for(let i=0;i<n;++i){newRow[i]=""}newRow.push(annotationText);newRow.xValues=[];newRow.xValues[xAxisIndex]=annotationX;event.dataRows.push(newRow);wasAdded=true}if(!wasAdded){event.dataRows.forEach(row=>{if(!wasAdded&&row.xValues&&xAxisIndex!==void 0&&annotationX===row.xValues[xAxisIndex]){if(joinAnnotations&&row.length>startRowLength){row[row.length-1]+=annotationSeparator+annotationText}else{row.push(annotationText)}wasAdded=true}})}if(!wasAdded){const n=event.dataRows[0].length,newRow=new Array(n);for(let i=0;i<n;++i){newRow[i]=""}newRow[0]=annotationX;newRow.push(annotationText);newRow.xValues=[];if(xAxisIndex!==void 0){newRow.xValues[xAxisIndex]=annotationX}event.dataRows.push(newRow)}})}})}});let maxRowLen=0;event.dataRows.forEach(row=>{maxRowLen=Math.max(maxRowLen,row.length)});const newRows=maxRowLen-event.dataRows[0].length;for(let i=0;i<newRows;i++){const header=columnHeaderFormatter(i+1);if(multiLevelHeaders){event.dataRows[0].push(header.topLevelColumnTitle);event.dataRows[1].push(header.columnTitle)}else{event.dataRows[0].push(header)}}})}function chartDrawAnnotations(){this.plotBoxClip.attr(this.plotBox);this.annotations.forEach(annotation=>{annotation.redraw();annotation.graphic.animate({opacity:1},annotation.animationConfig)})}function chartRemoveAnnotation(idOrAnnotation){const annotations=this.annotations,annotation=idOrAnnotation.coll==="annotations"?idOrAnnotation:find(annotations,function(annotation){return annotation.options.id===idOrAnnotation});if(annotation){fireEvent(annotation,"remove");erase(this.options.annotations,annotation.options);erase(annotations,annotation);annotation.destroy()}}function onChartAfterInit(){const chart=this;chart.annotations=[];if(!this.options.annotations){this.options.annotations=[]}}function wrapPointerOnContainerMouseDown(proceed){if(!this.chart.hasDraggedAnnotation){proceed.apply(this,Array.prototype.slice.call(arguments,1))}}var AnnotationChart;(function(AnnotationChart){function compose(AnnotationClass,ChartClass,PointerClass){const chartProto=ChartClass.prototype;if(!chartProto.addAnnotation){const pointerProto=PointerClass.prototype;addEvent(ChartClass,"afterInit",onChartAfterInit);chartProto.addAnnotation=chartAddAnnotation;chartProto.callbacks.push(chartCallback);chartProto.collectionsWithInit.annotations=[chartAddAnnotation];chartProto.collectionsWithUpdate.push("annotations");chartProto.drawAnnotations=chartDrawAnnotations;chartProto.removeAnnotation=chartRemoveAnnotation;chartProto.initAnnotation=function chartInitAnnotation(userOptions){const Constructor=AnnotationClass.types[userOptions.type]||AnnotationClass,annotation=new Constructor(this,userOptions);this.annotations.push(annotation);return annotation};wrap(pointerProto,"onContainerMouseDown",wrapPointerOnContainerMouseDown)}}AnnotationChart.compose=compose})(AnnotationChart||(AnnotationChart={}));export default AnnotationChart;