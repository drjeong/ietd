"use strict";import A from"../Core/Animation/AnimationUtilities.js";const{animObject}=A;import D from"../Core/Defaults.js";const{getOptions}=D;import U from"../Core/Utilities.js";const{addEvent,defined,erase,extend,merge,pick,removeEvent,wrap}=U;const patterns=createPatterns();function compose(ChartClass,SeriesClass,SVGRendererClass){const PointClass=SeriesClass.prototype.pointClass,pointProto=PointClass.prototype;if(!pointProto.calculatePatternDimensions){addEvent(ChartClass,"endResize",onChartEndResize);addEvent(ChartClass,"redraw",onChartRedraw);extend(pointProto,{calculatePatternDimensions:pointCalculatePatternDimensions});addEvent(PointClass,"afterInit",onPointAfterInit);addEvent(SeriesClass,"render",onSeriesRender);wrap(SeriesClass.prototype,"getColor",wrapSeriesGetColor);addEvent(SeriesClass,"afterRender",onPatternScaleCorrection);addEvent(SeriesClass,"mapZoomComplete",onPatternScaleCorrection);extend(SVGRendererClass.prototype,{addPattern:rendererAddPattern});addEvent(SVGRendererClass,"complexColor",onRendererComplexColor)}}function createPatterns(){const patterns=[],colors=getOptions().colors;let i=0;for(const pattern of["M 0 0 L 5 5 M 4.5 -0.5 L 5.5 0.5 M -0.5 4.5 L 0.5 5.5","M 0 5 L 5 0 M -0.5 0.5 L 0.5 -0.5 M 4.5 5.5 L 5.5 4.5","M 2 0 L 2 5 M 4 0 L 4 5","M 0 2 L 5 2 M 0 4 L 5 4","M 0 1.5 L 2.5 1.5 L 2.5 0 M 2.5 5 L 2.5 3.5 L 5 3.5"]){patterns.push({path:pattern,color:colors[i++],width:5,height:5,patternTransform:"scale(1.4 1.4)"})}i=5;for(const pattern of["M 0 0 L 5 10 L 10 0","M 3 3 L 8 3 L 8 8 L 3 8 Z","M 5 5 m -4 0 a 4 4 0 1 1 8 0 a 4 4 0 1 1 -8 0","M 0 0 L 10 10 M 9 -1 L 11 1 M -1 9 L 1 11","M 0 10 L 10 0 M -1 1 L 1 -1 M 9 11 L 11 9"]){patterns.push({path:pattern,color:colors[i],width:10,height:10});i=i+5}return patterns}function hashFromObject(obj,preSeed){const str=JSON.stringify(obj),strLen=str.length||0;let hash=0,i=0,char,seedStep;if(preSeed){seedStep=Math.max(Math.floor(strLen/500),1);for(let a=0;a<strLen;a+=seedStep){hash+=str.charCodeAt(a)}hash=hash&hash}for(;i<strLen;++i){char=str.charCodeAt(i);hash=(hash<<5)-hash+char;hash=hash&hash}return hash.toString(16).replace("-","1")}function onChartEndResize(){if(this.renderer&&(this.renderer.defIds||[]).filter(id=>id&&id.indexOf&&id.indexOf("highcharts-pattern-")===0).length){for(const series of this.series){if(series.visible){for(const point of series.points){const colorOptions=point.options&&point.options.color;if(colorOptions&&colorOptions.pattern){colorOptions.pattern._width="defer";colorOptions.pattern._height="defer"}}}}this.redraw(false)}}function onChartRedraw(){const usedIds={},renderer=this.renderer,patterns=(renderer.defIds||[]).filter(pattern=>pattern.indexOf&&pattern.indexOf("highcharts-pattern-")===0);if(patterns.length){[].forEach.call(this.renderTo.querySelectorAll('[color^="url("], [fill^="url("], [stroke^="url("]'),node=>{const id=node.getAttribute("fill")||node.getAttribute("color")||node.getAttribute("stroke");if(id){const sanitizedId=id.replace(renderer.url,"").replace("url(#","").replace(")","");usedIds[sanitizedId]=true}});for(const id of patterns){if(!usedIds[id]){erase(renderer.defIds,id);if(renderer.patternElements[id]){renderer.patternElements[id].destroy();delete renderer.patternElements[id]}}}}}function onPointAfterInit(){const point=this,colorOptions=point.options.color;if(colorOptions&&colorOptions.pattern){if(typeof colorOptions.pattern.path==="string"){colorOptions.pattern.path={d:colorOptions.pattern.path}}point.color=point.options.color=merge(point.series.options.color,colorOptions)}}function onRendererComplexColor(args){const color=args.args[0],prop=args.args[1],element=args.args[2],chartIndex=this.chartIndex||0;let pattern=color.pattern,value="#333333";if(typeof color.patternIndex!=="undefined"&&patterns){pattern=patterns[color.patternIndex]}if(!pattern){return true}if(pattern.image||typeof pattern.path==="string"||pattern.path&&pattern.path.d){let forceHashId=element.parentNode&&element.parentNode.getAttribute("class");forceHashId=forceHashId&&forceHashId.indexOf("highcharts-legend")>-1;if(pattern._width==="defer"||pattern._height==="defer"){pointCalculatePatternDimensions.call({graphic:{element:element}},pattern)}if(forceHashId||!pattern.id){pattern=merge({},pattern);pattern.id="highcharts-pattern-"+chartIndex+"-"+hashFromObject(pattern)+hashFromObject(pattern,true)}this.addPattern(pattern,!this.forExport&&pick(pattern.animation,this.globalAnimation,{duration:100}));value=`url(${this.url}#${pattern.id+(this.forExport?"-export":"")})`}else{value=pattern.color||value}element.setAttribute(prop,value);color.toString=function(){return value};return false}function onSeriesRender(){const isResizing=this.chart.isResizing;if(this.isDirtyData||isResizing||!this.chart.hasRendered){for(const point of this.points){const colorOptions=point.options&&point.options.color;if(colorOptions&&colorOptions.pattern){if(isResizing&&!(point.shapeArgs&&point.shapeArgs.width&&point.shapeArgs.height)){colorOptions.pattern._width="defer";colorOptions.pattern._height="defer"}else{point.calculatePatternDimensions(colorOptions.pattern)}}}}}function pointCalculatePatternDimensions(pattern){if(pattern.width&&pattern.height){return}const bBox=this.graphic&&(this.graphic.getBBox&&this.graphic.getBBox(true)||this.graphic.element&&this.graphic.element.getBBox())||{},shapeArgs=this.shapeArgs;if(shapeArgs){bBox.width=shapeArgs.width||bBox.width;bBox.height=shapeArgs.height||bBox.height;bBox.x=shapeArgs.x||bBox.x;bBox.y=shapeArgs.y||bBox.y}if(pattern.image){if(!bBox.width||!bBox.height){pattern._width="defer";pattern._height="defer";const scaleY=this.series.chart.mapView&&this.series.chart.mapView.getSVGTransform().scaleY;if(defined(scaleY)&&scaleY<0){pattern._inverted=true}return}if(pattern.aspectRatio){bBox.aspectRatio=bBox.width/bBox.height;if(pattern.aspectRatio>bBox.aspectRatio){bBox.aspectWidth=bBox.height*pattern.aspectRatio}else{bBox.aspectHeight=bBox.width/pattern.aspectRatio}}pattern._width=pattern.width||Math.ceil(bBox.aspectWidth||bBox.width);pattern._height=pattern.height||Math.ceil(bBox.aspectHeight||bBox.height)}if(!pattern.width){pattern._x=pattern.x||0;pattern._x+=bBox.x-Math.round(bBox.aspectWidth?Math.abs(bBox.aspectWidth-bBox.width)/2:0)}if(!pattern.height){pattern._y=pattern.y||0;pattern._y+=bBox.y-Math.round(bBox.aspectHeight?Math.abs(bBox.aspectHeight-bBox.height)/2:0)}}function rendererAddPattern(options,animation){const animate=pick(animation,true),animationOptions=animObject(animate),color=options.color||"#333333",defaultSize=32,height=options.height||(typeof options._height==="number"?options._height:0)||defaultSize,rect=fill=>this.rect(0,0,width,height).attr({fill:fill}).add(pattern),width=options.width||(typeof options._width==="number"?options._width:0)||defaultSize;let attribs,id=options.id,path;if(!id){this.idCounter=this.idCounter||0;id="highcharts-pattern-"+this.idCounter+"-"+(this.chartIndex||0);++this.idCounter}if(this.forExport){id+="-export"}this.defIds=this.defIds||[];if(this.defIds.indexOf(id)>-1){return}this.defIds.push(id);const attrs={id:id,patternUnits:"userSpaceOnUse",patternContentUnits:options.patternContentUnits||"userSpaceOnUse",width:width,height:height,x:options._x||options.x||0,y:options._y||options.y||0};if(options._inverted){attrs.patternTransform="scale(1, -1)";if(options.patternTransform){options.patternTransform+=" scale(1, -1)"}}if(options.patternTransform){attrs.patternTransform=options.patternTransform}const pattern=this.createElement("pattern").attr(attrs).add(this.defs);pattern.id=id;if(options.path){path=U.isObject(options.path)?options.path:{d:options.path};if(options.backgroundColor){rect(options.backgroundColor)}attribs={d:path.d};if(!this.styledMode){attribs.stroke=path.stroke||color;attribs["stroke-width"]=pick(path.strokeWidth,2);attribs.fill=path.fill||"none"}if(path.transform){attribs.transform=path.transform}this.createElement("path").attr(attribs).add(pattern);pattern.color=color}else if(options.image){if(animate){this.image(options.image,0,0,width,height,function(){this.animate({opacity:pick(options.opacity,1)},animationOptions);removeEvent(this.element,"load")}).attr({opacity:0}).add(pattern)}else{this.image(options.image,0,0,width,height).add(pattern)}}if(!(options.image&&animate)&&typeof options.opacity!=="undefined"){[].forEach.call(pattern.element.childNodes,child=>{child.setAttribute("opacity",options.opacity)})}this.patternElements=this.patternElements||{};this.patternElements[id]=pattern;return pattern}function wrapSeriesGetColor(proceed){const oldColor=this.options.color;if(oldColor&&oldColor.pattern&&!oldColor.pattern.color){delete this.options.color;proceed.apply(this,[].slice.call(arguments,1));oldColor.pattern.color=this.color;this.color=this.options.color=oldColor}else{proceed.apply(this,[].slice.call(arguments,1))}}function onPatternScaleCorrection(){const series=this;if(!series.chart?.mapView){return}const chart=series.chart,renderer=chart.renderer,patterns=renderer.patternElements;if(renderer.defIds?.length&&patterns){series.points.filter(function(p){const point=p;if(!point.graphic){return false}return(point.graphic.element.hasAttribute("fill")||point.graphic.element.hasAttribute("color")||point.graphic.element.hasAttribute("stroke"))&&!point.options.color?.pattern?.image&&!!point.group?.scaleX&&!!point.group?.scaleY}).map(function(p){const point=p;const id=(point.graphic?.element.getAttribute("fill")||point.graphic?.element.getAttribute("color")||point.graphic?.element.getAttribute("stroke")||"").replace(renderer.url,"").replace("url(#","").replace(")","");return{id:id,x:point.group?.scaleX||1,y:point.group?.scaleY||1}}).filter(function(pointInfo,index,arr){return pointInfo.id!==""&&pointInfo.id.indexOf("highcharts-pattern-")!==-1&&!arr.some(function(otherInfo,otherIndex){return otherInfo.id===pointInfo.id&&otherIndex<index})}).forEach(function(pointInfo){const id=pointInfo.id;patterns[id].scaleX=1/pointInfo.x;patterns[id].scaleY=1/pointInfo.y;patterns[id].updateTransform("patternTransform")})}}const PatternFill={compose:compose,patterns:patterns};export default PatternFill;"";