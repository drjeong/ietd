"use strict";import ParallelAxis from"./ParallelAxis.js";import ParallelCoordinatesDefaults from"./ParallelCoordinatesDefaults.js";import ParallelSeries from"./ParallelSeries.js";import U from"../../Core/Utilities.js";const{addEvent,defined,merge,splat}=U;class ChartAdditions{constructor(chart){this.chart=chart}setParallelInfo(options){const chart=this.chart||this,seriesOptions=options.series;chart.parallelInfo={counter:0};for(const series of seriesOptions){if(series.data){chart.parallelInfo.counter=Math.max(chart.parallelInfo.counter,series.data.length-1)}}}}var ParallelCoordinates;(function(ParallelCoordinates){function compose(AxisClass,ChartClass,highchartsDefaultOptions,SeriesClass){ParallelAxis.compose(AxisClass);ParallelSeries.compose(SeriesClass);const ChartCompo=ChartClass,addsProto=ChartAdditions.prototype,chartProto=ChartCompo.prototype;if(!chartProto.setParallelInfo){chartProto.setParallelInfo=addsProto.setParallelInfo;addEvent(ChartCompo,"init",onChartInit);addEvent(ChartCompo,"update",onChartUpdate);merge(true,highchartsDefaultOptions.chart,ParallelCoordinatesDefaults.chart)}}ParallelCoordinates.compose=compose;function onChartInit(e){const chart=this,options=e.args[0],defaultYAxis=splat(options.yAxis||{}),newYAxes=[];let yAxisLength=defaultYAxis.length;chart.hasParallelCoordinates=options.chart&&options.chart.parallelCoordinates;if(chart.hasParallelCoordinates){chart.setParallelInfo(options);for(;yAxisLength<=chart.parallelInfo.counter;yAxisLength++){newYAxes.push({})}if(!options.legend){options.legend={}}if(options.legend&&typeof options.legend.enabled==="undefined"){options.legend.enabled=false}merge(true,options,{boost:{seriesThreshold:Number.MAX_VALUE},plotOptions:{series:{boostThreshold:Number.MAX_VALUE}}});options.yAxis=defaultYAxis.concat(newYAxes);options.xAxis=merge(ParallelCoordinatesDefaults.xAxis,splat(options.xAxis||{})[0])}}function onChartUpdate(e){const chart=this,options=e.options;if(options.chart){if(defined(options.chart.parallelCoordinates)){chart.hasParallelCoordinates=options.chart.parallelCoordinates}chart.options.chart.parallelAxes=merge(chart.options.chart.parallelAxes,options.chart.parallelAxes)}if(chart.hasParallelCoordinates){if(options.series){chart.setParallelInfo(options)}for(const axis of chart.yAxis){axis.update({},false)}}}})(ParallelCoordinates||(ParallelCoordinates={}));export default ParallelCoordinates;