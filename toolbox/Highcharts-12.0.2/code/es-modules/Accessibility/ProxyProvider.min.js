"use strict";import H from"../Core/Globals.js";const{doc}=H;import U from"../Core/Utilities.js";const{attr,css}=U;import CU from"./Utils/ChartUtilities.js";const{unhideChartElementFromAT}=CU;import DOMElementProvider from"./Utils/DOMElementProvider.js";import HU from"./Utils/HTMLUtilities.js";const{removeChildNodes}=HU;import ProxyElement from"./ProxyElement.js";class ProxyProvider{constructor(chart){this.chart=chart;this.domElementProvider=new DOMElementProvider;this.groups={};this.groupOrder=[];this.beforeChartProxyPosContainer=this.createProxyPosContainer("before");this.afterChartProxyPosContainer=this.createProxyPosContainer("after");this.update()}addProxyElement(groupKey,target,proxyElementType="button",attributes){const group=this.groups[groupKey];if(!group){throw new Error("ProxyProvider.addProxyElement: Invalid group key "+groupKey)}const wrapperElementType=group.type==="ul"||group.type==="ol"?"li":void 0,proxy=new ProxyElement(this.chart,target,proxyElementType,wrapperElementType,attributes);group.proxyContainerElement.appendChild(proxy.element);group.proxyElements.push(proxy);return proxy}addGroup(groupKey,groupElementType="div",attributes){const existingGroup=this.groups[groupKey];if(existingGroup){return existingGroup.groupElement}const proxyContainer=this.domElementProvider.createElement(groupElementType);let groupElement;if(attributes&&attributes.role&&groupElementType!=="div"){groupElement=this.domElementProvider.createElement("div");groupElement.appendChild(proxyContainer)}else{groupElement=proxyContainer}groupElement.className="highcharts-a11y-proxy-group highcharts-a11y-proxy-group-"+groupKey.replace(/\W/g,"-");this.groups[groupKey]={proxyContainerElement:proxyContainer,groupElement:groupElement,type:groupElementType,proxyElements:[]};attr(groupElement,attributes||{});if(groupElementType==="ul"){proxyContainer.setAttribute("role","list")}this.afterChartProxyPosContainer.appendChild(groupElement);this.updateGroupOrder(this.groupOrder);return groupElement}updateGroupAttrs(groupKey,attributes){const group=this.groups[groupKey];if(!group){throw new Error("ProxyProvider.updateGroupAttrs: Invalid group key "+groupKey)}attr(group.groupElement,attributes)}updateGroupOrder(groupKeys){this.groupOrder=groupKeys.slice();if(this.isDOMOrderGroupOrder()){return}const seriesIx=groupKeys.indexOf("series");const beforeKeys=seriesIx>-1?groupKeys.slice(0,seriesIx):groupKeys;const afterKeys=seriesIx>-1?groupKeys.slice(seriesIx+1):[];const activeElement=doc.activeElement;["before","after"].forEach(pos=>{const posContainer=this[pos==="before"?"beforeChartProxyPosContainer":"afterChartProxyPosContainer"];const keys=pos==="before"?beforeKeys:afterKeys;removeChildNodes(posContainer);keys.forEach(groupKey=>{const group=this.groups[groupKey];if(group){posContainer.appendChild(group.groupElement)}})});if((this.beforeChartProxyPosContainer.contains(activeElement)||this.afterChartProxyPosContainer.contains(activeElement))&&activeElement&&activeElement.focus){activeElement.focus()}}clearGroup(groupKey){const group=this.groups[groupKey];if(!group){throw new Error("ProxyProvider.clearGroup: Invalid group key "+groupKey)}removeChildNodes(group.proxyContainerElement)}removeGroup(groupKey){const group=this.groups[groupKey];if(group){this.domElementProvider.removeElement(group.groupElement);if(group.groupElement!==group.proxyContainerElement){this.domElementProvider.removeElement(group.proxyContainerElement)}delete this.groups[groupKey]}}update(){this.updatePosContainerPositions();this.updateGroupOrder(this.groupOrder);this.updateProxyElementPositions()}updateProxyElementPositions(){Object.keys(this.groups).forEach(this.updateGroupProxyElementPositions.bind(this))}updateGroupProxyElementPositions(groupKey){const group=this.groups[groupKey];if(group){group.proxyElements.forEach(el=>el.refreshPosition())}}destroy(){this.domElementProvider.destroyCreatedElements()}createProxyPosContainer(classNamePostfix){const el=this.domElementProvider.createElement("div");el.setAttribute("aria-hidden","false");el.className="highcharts-a11y-proxy-container"+(classNamePostfix?"-"+classNamePostfix:"");css(el,{top:"0",left:"0"});if(!this.chart.styledMode){el.style.whiteSpace="nowrap";el.style.position="absolute"}return el}getCurrentGroupOrderInDOM(){const getGroupKeyFromElement=el=>{const allGroups=Object.keys(this.groups);let i=allGroups.length;while(i--){const groupKey=allGroups[i];const group=this.groups[groupKey];if(group&&el===group.groupElement){return groupKey}}};const getChildrenGroupOrder=el=>{const childrenOrder=[];const children=el.children;for(let i=0;i<children.length;++i){const groupKey=getGroupKeyFromElement(children[i]);if(groupKey){childrenOrder.push(groupKey)}}return childrenOrder};const before=getChildrenGroupOrder(this.beforeChartProxyPosContainer);const after=getChildrenGroupOrder(this.afterChartProxyPosContainer);before.push("series");return before.concat(after)}isDOMOrderGroupOrder(){const domOrder=this.getCurrentGroupOrderInDOM();const groupOrderWithGroups=this.groupOrder.filter(x=>x==="series"||!!this.groups[x]);let i=domOrder.length;if(i!==groupOrderWithGroups.length){return false}while(i--){if(domOrder[i]!==groupOrderWithGroups[i]){return false}}return true}updatePosContainerPositions(){const chart=this.chart;if(chart.renderer.forExport){return}const rendererSVGEl=chart.renderer.box;chart.container.insertBefore(this.afterChartProxyPosContainer,rendererSVGEl.nextSibling);chart.container.insertBefore(this.beforeChartProxyPosContainer,rendererSVGEl);unhideChartElementFromAT(this.chart,this.afterChartProxyPosContainer);unhideChartElementFromAT(this.chart,this.beforeChartProxyPosContainer)}}export default ProxyProvider;