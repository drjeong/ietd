"use strict";import HTMLUtilities from"../Utils/HTMLUtilities.js";const{escapeStringForHTML,stripHTMLTagsFromString}=HTMLUtilities;function getChartAnnotationLabels(chart){const annotations=chart.annotations||[];return annotations.reduce((acc,cur)=>{if(cur.options&&cur.options.visible!==false){acc=acc.concat(cur.labels)}return acc},[])}function getLabelText(label){return label.options&&label.options.accessibility&&label.options.accessibility.description||label.graphic&&label.graphic.text&&label.graphic.text.textStr||""}function getAnnotationLabelDescription(label){const a11yDesc=label.options&&label.options.accessibility&&label.options.accessibility.description;if(a11yDesc){return a11yDesc}const chart=label.chart;const labelText=getLabelText(label);const points=label.points;const getAriaLabel=point=>point.graphic&&point.graphic.element&&point.graphic.element.getAttribute("aria-label")||"";const getValueDesc=point=>{const valDesc=point.accessibility&&point.accessibility.valueDescription||getAriaLabel(point);const seriesName=point&&point.series.name||"";return(seriesName?seriesName+", ":"")+"data point "+valDesc};const pointValueDescriptions=points.filter(p=>!!p.graphic).map(getValueDesc).filter(desc=>!!desc);const numPoints=pointValueDescriptions.length;const pointsSelector=numPoints>1?"MultiplePoints":numPoints?"SinglePoint":"NoPoints";const langFormatStr="accessibility.screenReaderSection.annotations.description"+pointsSelector;const context={annotationText:labelText,annotation:label,numPoints:numPoints,annotationPoint:pointValueDescriptions[0],additionalAnnotationPoints:pointValueDescriptions.slice(1)};return chart.langFormat(langFormatStr,context)}function getAnnotationListItems(chart){const labels=getChartAnnotationLabels(chart);return labels.map(label=>{const desc=escapeStringForHTML(stripHTMLTagsFromString(getAnnotationLabelDescription(label),chart.renderer.forExport));return desc?`<li>${desc}</li>`:""})}function getAnnotationsInfoHTML(chart){const annotations=chart.annotations;if(!(annotations&&annotations.length)){return""}const annotationItems=getAnnotationListItems(chart);return`<ul style="list-style-type: none">${annotationItems.join(" ")}</ul>`}function getPointAnnotationTexts(point){const labels=getChartAnnotationLabels(point.series.chart);const pointLabels=labels.filter(label=>label.points.indexOf(point)>-1);if(!pointLabels.length){return[]}return pointLabels.map(label=>`${getLabelText(label)}`)}const AnnotationsA11y={getAnnotationsInfoHTML:getAnnotationsInfoHTML,getAnnotationLabelDescription:getAnnotationLabelDescription,getAnnotationListItems:getAnnotationListItems,getPointAnnotationTexts:getPointAnnotationTexts};export default AnnotationsA11y;