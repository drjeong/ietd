"use strict";import U from"../../Core/Utilities.js";const{attr}=U;import AccessibilityComponent from"../AccessibilityComponent.js";import KeyboardNavigationHandler from"../KeyboardNavigationHandler.js";import ChartUtilities from"../Utils/ChartUtilities.js";const{getChartTitle,unhideChartElementFromAT}=ChartUtilities;import HTMLUtilities from"../Utils/HTMLUtilities.js";const{getFakeMouseEvent}=HTMLUtilities;function getExportMenuButtonElement(chart){return chart.exportSVGElements&&chart.exportSVGElements[0]}function exportingShouldHaveA11y(chart){const exportingOpts=chart.options.exporting,exportButton=getExportMenuButtonElement(chart);return!!(exportingOpts&&exportingOpts.enabled!==false&&exportingOpts.accessibility&&exportingOpts.accessibility.enabled&&exportButton&&exportButton.element)}class MenuComponent extends AccessibilityComponent{init(){const chart=this.chart,component=this;this.addEvent(chart,"exportMenuShown",function(){component.onMenuShown()});this.addEvent(chart,"exportMenuHidden",function(){component.onMenuHidden()});this.createProxyGroup()}onMenuHidden(){const menu=this.chart.exportContextMenu;if(menu){menu.setAttribute("aria-hidden","true")}this.setExportButtonExpandedState("false")}onMenuShown(){const chart=this.chart,menu=chart.exportContextMenu;if(menu){this.addAccessibleContextMenuAttribs();unhideChartElementFromAT(chart,menu)}this.setExportButtonExpandedState("true")}setExportButtonExpandedState(stateStr){if(this.exportButtonProxy){this.exportButtonProxy.innerElement.setAttribute("aria-expanded",stateStr)}}onChartRender(){const chart=this.chart,focusEl=chart.focusElement,a11y=chart.accessibility;this.proxyProvider.clearGroup("chartMenu");this.proxyMenuButton();if(this.exportButtonProxy&&focusEl&&focusEl===chart.exportingGroup){if(focusEl.focusBorder){chart.setFocusToElement(focusEl,this.exportButtonProxy.innerElement)}else if(a11y){a11y.keyboardNavigation.tabindexContainer.focus()}}}proxyMenuButton(){const chart=this.chart;const proxyProvider=this.proxyProvider;const buttonEl=getExportMenuButtonElement(chart);if(exportingShouldHaveA11y(chart)&&buttonEl){this.exportButtonProxy=proxyProvider.addProxyElement("chartMenu",{click:buttonEl},"button",{"aria-label":chart.langFormat("accessibility.exporting.menuButtonLabel",{chart:chart,chartTitle:getChartTitle(chart)}),"aria-expanded":false,title:chart.options.lang.contextButtonTitle||null})}}createProxyGroup(){const chart=this.chart;if(chart&&this.proxyProvider){this.proxyProvider.addGroup("chartMenu")}}addAccessibleContextMenuAttribs(){const chart=this.chart,exportList=chart.exportDivElements;if(exportList&&exportList.length){exportList.forEach(item=>{if(item){if(item.tagName==="LI"&&!(item.children&&item.children.length)){item.setAttribute("tabindex",-1)}else{item.setAttribute("aria-hidden","true")}}});const parentDiv=exportList[0]&&exportList[0].parentNode;if(parentDiv){attr(parentDiv,{"aria-hidden":void 0,"aria-label":chart.langFormat("accessibility.exporting.chartMenuLabel",{chart:chart}),role:"list"})}}}getKeyboardNavigation(){const keys=this.keyCodes,chart=this.chart,component=this;return new KeyboardNavigationHandler(chart,{keyCodeMap:[[[keys.left,keys.up],function(){return component.onKbdPrevious(this)}],[[keys.right,keys.down],function(){return component.onKbdNext(this)}],[[keys.enter,keys.space],function(){return component.onKbdClick(this)}]],validate:function(){return!!chart.exporting&&chart.options.exporting.enabled!==false&&chart.options.exporting.accessibility.enabled!==false},init:function(){const proxy=component.exportButtonProxy;const svgEl=component.chart.exportingGroup;if(proxy&&svgEl){chart.setFocusToElement(svgEl,proxy.innerElement)}},terminate:function(){chart.hideExportMenu()}})}onKbdPrevious(keyboardNavigationHandler){const chart=this.chart;const a11yOptions=chart.options.accessibility;const response=keyboardNavigationHandler.response;let i=chart.highlightedExportItemIx||0;while(i--){if(chart.highlightExportItem(i)){return response.success}}if(a11yOptions.keyboardNavigation.wrapAround){chart.highlightLastExportItem();return response.success}return response.prev}onKbdNext(keyboardNavigationHandler){const chart=this.chart;const a11yOptions=chart.options.accessibility;const response=keyboardNavigationHandler.response;for(let i=(chart.highlightedExportItemIx||0)+1;i<chart.exportDivElements.length;++i){if(chart.highlightExportItem(i)){return response.success}}if(a11yOptions.keyboardNavigation.wrapAround){chart.highlightExportItem(0);return response.success}return response.next}onKbdClick(keyboardNavigationHandler){const chart=this.chart;const curHighlightedItem=chart.exportDivElements[chart.highlightedExportItemIx];const exportButtonElement=getExportMenuButtonElement(chart).element;if(chart.openMenu){this.fakeClickEvent(curHighlightedItem)}else{this.fakeClickEvent(exportButtonElement);chart.highlightExportItem(0)}return keyboardNavigationHandler.response.success}}(function(MenuComponent){function compose(ChartClass){const chartProto=ChartClass.prototype;if(!chartProto.hideExportMenu){chartProto.hideExportMenu=chartHideExportMenu;chartProto.highlightExportItem=chartHighlightExportItem;chartProto.highlightLastExportItem=chartHighlightLastExportItem;chartProto.showExportMenu=chartShowExportMenu}}MenuComponent.compose=compose;function chartShowExportMenu(){const exportButton=getExportMenuButtonElement(this);if(exportButton){const el=exportButton.element;if(el.onclick){el.onclick(getFakeMouseEvent("click"))}}}function chartHideExportMenu(){const chart=this,exportList=chart.exportDivElements;if(exportList&&chart.exportContextMenu&&chart.openMenu){exportList.forEach(el=>{if(el&&el.className==="highcharts-menu-item"&&el.onmouseout){el.onmouseout(getFakeMouseEvent("mouseout"))}});chart.highlightedExportItemIx=0;chart.exportContextMenu.hideMenu();chart.container.focus()}}function chartHighlightExportItem(ix){const listItem=this.exportDivElements&&this.exportDivElements[ix];const curHighlighted=this.exportDivElements&&this.exportDivElements[this.highlightedExportItemIx];if(listItem&&listItem.tagName==="LI"&&!(listItem.children&&listItem.children.length)){const hasSVGFocusSupport=!!(this.renderTo.getElementsByTagName("g")[0]||{}).focus;if(listItem.focus&&hasSVGFocusSupport){listItem.focus()}if(curHighlighted&&curHighlighted.onmouseout){curHighlighted.onmouseout(getFakeMouseEvent("mouseout"))}if(listItem.onmouseover){listItem.onmouseover(getFakeMouseEvent("mouseover"))}this.highlightedExportItemIx=ix;return true}return false}function chartHighlightLastExportItem(){const chart=this;if(chart.exportDivElements){let i=chart.exportDivElements.length;while(i--){if(chart.highlightExportItem(i)){return true}}}return false}})(MenuComponent||(MenuComponent={}));export default MenuComponent;