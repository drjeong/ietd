"use strict";import H from"../../../Core/Globals.js";const{composed}=H;import U from"../../../Core/Utilities.js";const{addEvent,defined,pushUnique}=U;import Announcer from"../../Utils/Announcer.js";import ChartUtilities from"../../Utils/ChartUtilities.js";const{getChartTitle}=ChartUtilities;import EventProvider from"../../Utils/EventProvider.js";import SeriesDescriber from"./SeriesDescriber.js";const{defaultPointDescriptionFormatter,defaultSeriesDescriptionFormatter}=SeriesDescriber;function chartHasAnnounceEnabled(chart){return!!chart.options.accessibility.announceNewData.enabled}function findPointInDataArray(point){const candidates=point.series.data.filter(candidate=>point.x===candidate.x&&point.y===candidate.y);return candidates.length===1?candidates[0]:point}function getUniqueSeries(arrayA,arrayB){const uniqueSeries=(arrayA||[]).concat(arrayB||[]).reduce((acc,cur)=>{acc[cur.name+cur.index]=cur;return acc},{});return Object.keys(uniqueSeries).map(ix=>uniqueSeries[ix])}class NewDataAnnouncer{constructor(chart){this.dirty={allSeries:{}};this.lastAnnouncementTime=0;this.chart=chart}init(){const chart=this.chart;const announceOptions=chart.options.accessibility.announceNewData;const announceType=announceOptions.interruptUser?"assertive":"polite";this.lastAnnouncementTime=0;this.dirty={allSeries:{}};this.eventProvider=new EventProvider;this.announcer=new Announcer(chart,announceType);this.addEventListeners()}destroy(){this.eventProvider.removeAddedEvents();this.announcer.destroy()}addEventListeners(){const announcer=this,chart=this.chart,e=this.eventProvider;e.addEvent(chart,"afterApplyDrilldown",function(){announcer.lastAnnouncementTime=0});e.addEvent(chart,"afterAddSeries",function(e){announcer.onSeriesAdded(e.series)});e.addEvent(chart,"redraw",function(){announcer.announceDirtyData()})}onSeriesAdded(series){if(chartHasAnnounceEnabled(this.chart)){this.dirty.hasDirty=true;this.dirty.allSeries[series.name+series.index]=series;this.dirty.newSeries=defined(this.dirty.newSeries)?void 0:series}}announceDirtyData(){const chart=this.chart,announcer=this;if(chart.options.accessibility.announceNewData&&this.dirty.hasDirty){let newPoint=this.dirty.newPoint;if(newPoint){newPoint=findPointInDataArray(newPoint)}this.queueAnnouncement(Object.keys(this.dirty.allSeries).map(ix=>announcer.dirty.allSeries[ix]),this.dirty.newSeries,newPoint);this.dirty={allSeries:{}}}}queueAnnouncement(dirtySeries,newSeries,newPoint){const chart=this.chart;const annOptions=chart.options.accessibility.announceNewData;if(annOptions.enabled){const now=+new Date;const dTime=now-this.lastAnnouncementTime;const time=Math.max(0,annOptions.minAnnounceInterval-dTime);const allSeries=getUniqueSeries(this.queuedAnnouncement&&this.queuedAnnouncement.series,dirtySeries);const message=this.buildAnnouncementMessage(allSeries,newSeries,newPoint);if(message){if(this.queuedAnnouncement){clearTimeout(this.queuedAnnouncementTimer)}this.queuedAnnouncement={time:now,message:message,series:allSeries};this.queuedAnnouncementTimer=setTimeout(()=>{if(this&&this.announcer){this.lastAnnouncementTime=+new Date;this.announcer.announce(this.queuedAnnouncement.message);delete this.queuedAnnouncement;delete this.queuedAnnouncementTimer}},time)}}}buildAnnouncementMessage(dirtySeries,newSeries,newPoint){const chart=this.chart,annOptions=chart.options.accessibility.announceNewData;if(annOptions.announcementFormatter){const formatterRes=annOptions.announcementFormatter(dirtySeries,newSeries,newPoint);if(formatterRes!==false){return formatterRes.length?formatterRes:null}}const multiple=H.charts&&H.charts.length>1?"Multiple":"Single",langKey=newSeries?"newSeriesAnnounce"+multiple:newPoint?"newPointAnnounce"+multiple:"newDataAnnounce",chartTitle=getChartTitle(chart);return chart.langFormat("accessibility.announceNewData."+langKey,{chartTitle:chartTitle,seriesDesc:newSeries?defaultSeriesDescriptionFormatter(newSeries):null,pointDesc:newPoint?defaultPointDescriptionFormatter(newPoint):null,point:newPoint,series:newSeries})}}(function(NewDataAnnouncer){function compose(SeriesClass){if(pushUnique(composed,"A11y.NDA")){addEvent(SeriesClass,"addPoint",seriesOnAddPoint);addEvent(SeriesClass,"updatedData",seriesOnUpdatedData)}}NewDataAnnouncer.compose=compose;function seriesOnAddPoint(e){const chart=this.chart,newDataAnnouncer=chart.accessibility?.components.series.newDataAnnouncer;if(newDataAnnouncer&&newDataAnnouncer.chart===chart&&chartHasAnnounceEnabled(chart)){newDataAnnouncer.dirty.newPoint=defined(newDataAnnouncer.dirty.newPoint)?void 0:e.point}}function seriesOnUpdatedData(){const chart=this.chart,newDataAnnouncer=chart.accessibility?.components.series.newDataAnnouncer;if(newDataAnnouncer&&newDataAnnouncer.chart===chart&&chartHasAnnounceEnabled(chart)){newDataAnnouncer.dirty.hasDirty=true;newDataAnnouncer.dirty.allSeries[this.name+this.index]=this}}})(NewDataAnnouncer||(NewDataAnnouncer={}));export default NewDataAnnouncer;