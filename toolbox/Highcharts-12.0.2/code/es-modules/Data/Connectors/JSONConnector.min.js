"use strict";import DataConnector from"./DataConnector.js";import U from"../../Core/Utilities.js";import JSONConverter from"../Converters/JSONConverter.js";const{merge}=U;class JSONConnector extends DataConnector{constructor(options){const mergedOptions=merge(JSONConnector.defaultOptions,options);super(mergedOptions);this.converter=new JSONConverter(mergedOptions);this.options=mergedOptions;if(mergedOptions.enablePolling){this.startPolling(Math.max(mergedOptions.dataRefreshRate||0,1)*1e3)}}load(eventDetail){const connector=this,converter=connector.converter,table=connector.table,{data,dataUrl,dataModifier}=connector.options;connector.emit({type:"load",data:data,detail:eventDetail,table:table});return Promise.resolve(dataUrl?fetch(dataUrl).then(json=>json.json()):data||[]).then(data=>{if(data){table.deleteColumns();converter.parse({data:data});table.setColumns(converter.getTable().getColumns())}return connector.setModifierOptions(dataModifier).then(()=>data)}).then(data=>{connector.emit({type:"afterLoad",data:data,detail:eventDetail,table:table});return connector})["catch"](error=>{connector.emit({type:"loadError",detail:eventDetail,error:error,table:table});throw error})}}JSONConnector.defaultOptions={data:[],enablePolling:false,dataRefreshRate:0,firstRowAsNames:true,orientation:"rows"};DataConnector.registerType("JSON",JSONConnector);export default JSONConnector;