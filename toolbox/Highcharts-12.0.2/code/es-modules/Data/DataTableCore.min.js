"use strict";import U from"../Core/Utilities.js";const{fireEvent,isArray,objectEach,uniqueKey}=U;class DataTableCore{constructor(options={}){this.autoId=!options.id;this.columns={};this.id=options.id||uniqueKey();this.modified=this;this.rowCount=0;this.versionTag=uniqueKey();let rowCount=0;objectEach(options.columns||{},(column,columnName)=>{this.columns[columnName]=column.slice();rowCount=Math.max(rowCount,column.length)});this.applyRowCount(rowCount)}applyRowCount(rowCount){this.rowCount=rowCount;objectEach(this.columns,column=>{if(isArray(column)){column.length=rowCount}})}getColumn(columnName,asReference){return this.columns[columnName]}getColumns(columnNames,asReference){return(columnNames||Object.keys(this.columns)).reduce((columns,columnName)=>{columns[columnName]=this.columns[columnName];return columns},{})}getRow(rowIndex,columnNames){return(columnNames||Object.keys(this.columns)).map(key=>this.columns[key]?.[rowIndex])}setColumn(columnName,column=[],rowIndex=0,eventDetail){this.setColumns({[columnName]:column},rowIndex,eventDetail)}setColumns(columns,rowIndex,eventDetail){let rowCount=this.rowCount;objectEach(columns,(column,columnName)=>{this.columns[columnName]=column.slice();rowCount=column.length});this.applyRowCount(rowCount);if(!eventDetail?.silent){fireEvent(this,"afterSetColumns");this.versionTag=uniqueKey()}}setRow(row,rowIndex=this.rowCount,insert,eventDetail){const{columns}=this,indexRowCount=insert?this.rowCount+1:rowIndex+1;objectEach(row,(cellValue,columnName)=>{const column=columns[columnName]||eventDetail?.addColumns!==false&&new Array(indexRowCount);if(column){if(insert){column.splice(rowIndex,0,cellValue)}else{column[rowIndex]=cellValue}columns[columnName]=column}});if(indexRowCount>this.rowCount){this.applyRowCount(indexRowCount)}if(!eventDetail?.silent){fireEvent(this,"afterSetRows");this.versionTag=uniqueKey()}}}export default DataTableCore;"";