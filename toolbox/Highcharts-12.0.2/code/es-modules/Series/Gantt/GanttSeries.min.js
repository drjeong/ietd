"use strict";import GanttPoint from"./GanttPoint.js";import GanttSeriesDefaults from"./GanttSeriesDefaults.js";import Pathfinder from"../../Gantt/Pathfinder.js";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const{series:Series,seriesTypes:{xrange:XRangeSeries}}=SeriesRegistry;import StaticScale from"../../Extensions/StaticScale.js";import TreeGridAxis from"../../Core/Axis/TreeGrid/TreeGridAxis.js";import U from"../../Core/Utilities.js";const{extend,isNumber,merge}=U;class GanttSeries extends XRangeSeries{static compose(AxisClass,ChartClass,SeriesClass,TickClass){XRangeSeries.compose(AxisClass);if(!ChartClass){return}StaticScale.compose(AxisClass,ChartClass);if(!SeriesClass){return}Pathfinder.compose(ChartClass,SeriesClass.prototype.pointClass);if(!TickClass){return}TreeGridAxis.compose(AxisClass,ChartClass,SeriesClass,TickClass)}drawPoint(point,verb){const series=this,seriesOpts=series.options,renderer=series.chart.renderer,shapeArgs=point.shapeArgs,plotY=point.plotY,state=point.selected&&"select",cutOff=seriesOpts.stacking&&!seriesOpts.borderRadius;let graphic=point.graphic,diamondShape;if(point.options.milestone){if(isNumber(plotY)&&point.y!==null&&point.visible!==false){diamondShape=renderer.symbols.diamond(shapeArgs.x||0,shapeArgs.y||0,shapeArgs.width||0,shapeArgs.height||0);if(graphic){graphic[verb]({d:diamondShape})}else{point.graphic=graphic=renderer.path(diamondShape).addClass(point.getClassName(),true).add(point.group||series.group)}if(!series.chart.styledMode){point.graphic.attr(series.pointAttribs(point,state)).shadow(seriesOpts.shadow,null,cutOff)}}else if(graphic){point.graphic=graphic.destroy()}}else{super.drawPoint(point,verb)}}translatePoint(point){let shapeArgs,size;super.translatePoint(point);if(point.options.milestone){shapeArgs=point.shapeArgs;size=shapeArgs.height||0;point.shapeArgs={x:(shapeArgs.x||0)-size/2,y:shapeArgs.y,width:size,height:size}}}}GanttSeries.defaultOptions=merge(XRangeSeries.defaultOptions,GanttSeriesDefaults);extend(GanttSeries.prototype,{pointArrayMap:["start","end","y"],pointClass:GanttPoint,setData:Series.prototype.setData});SeriesRegistry.registerSeriesType("gantt",GanttSeries);export default GanttSeries;