"use strict";import HollowCandlestickPoint from"./HollowCandlestickPoint.js";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";import U from"../../Core/Utilities.js";import Axis from"../../Core/Axis/Axis.js";const{seriesTypes:{candlestick:CandlestickSeries}}=SeriesRegistry;const{addEvent,merge}=U;class HollowCandlestickSeries extends CandlestickSeries{constructor(){super(...arguments);this.hollowCandlestickData=[]}getPriceMovement(){const series=this,table=series.allGroupedTable||series.dataTable,dataLength=table.rowCount,hollowCandlestickData=this.hollowCandlestickData;hollowCandlestickData.length=0;let previousDataArr;for(let i=0;i<dataLength;i++){const dataArr=table.getRow(i,this.pointArrayMap);hollowCandlestickData.push(series.isBullish(dataArr,i?previousDataArr:dataArr));previousDataArr=dataArr}}getLineColor(trendDirection){const series=this;return trendDirection==="up"?series.options.upColor||"#06b535":series.options.color||"#f21313"}getPointFill(hollowcandleInfo){const series=this;if(hollowcandleInfo.isBullish){return"transparent"}return hollowcandleInfo.trendDirection==="up"?series.options.upColor||"#06b535":series.options.color||"#f21313"}init(){super.init.apply(this,arguments);this.hollowCandlestickData=[]}isBullish(dataPoint,previousDataPoint){return{isBullish:(dataPoint[0]||0)<=(dataPoint[3]||0),trendDirection:(dataPoint[3]||0)<(previousDataPoint?.[3]||0)?"down":"up"}}pointAttribs(point,state){const attribs=super.pointAttribs.call(this,point,state);let stateOptions;const index=point.index,hollowcandleInfo=this.hollowCandlestickData[index];attribs.fill=this.getPointFill(hollowcandleInfo)||attribs.fill;attribs.stroke=this.getLineColor(hollowcandleInfo.trendDirection)||attribs.stroke;if(state){stateOptions=this.options.states[state];attribs.fill=stateOptions.color||attribs.fill;attribs.stroke=stateOptions.lineColor||attribs.stroke;attribs["stroke-width"]=stateOptions.lineWidth||attribs["stroke-width"]}return attribs}}HollowCandlestickSeries.defaultOptions=merge(CandlestickSeries.defaultOptions,{color:"#f21313",dataGrouping:{groupAll:true,groupPixelWidth:10},lineColor:"#f21313",upColor:"#06b535",upLineColor:"#06b535"});addEvent(HollowCandlestickSeries,"updatedData",function(){if(this.hollowCandlestickData.length){this.hollowCandlestickData.length=0}});addEvent(Axis,"postProcessData",function(){const axis=this,series=axis.series;series.forEach(function(series){if(series.is("hollowcandlestick")){const hollowcandlestickSeries=series;hollowcandlestickSeries.getPriceMovement()}})});HollowCandlestickSeries.prototype.pointClass=HollowCandlestickPoint;SeriesRegistry.registerSeriesType("hollowcandlestick",HollowCandlestickSeries);export default HollowCandlestickSeries;"";