"use strict";import AreaRangePoint from"./AreaRangePoint.js";import H from"../../Core/Globals.js";const{noop}=H;import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const{area:AreaSeries,area:{prototype:areaProto},column:{prototype:columnProto}}=SeriesRegistry.seriesTypes;import U from"../../Core/Utilities.js";const{addEvent,defined,extend,isArray,isNumber,pick,merge}=U;const areaRangeSeriesOptions={lineWidth:1,threshold:null,tooltip:{pointFormat:'<span style="color:{series.color}">‚óè</span> '+"{series.name}: <b>{point.low}</b> - <b>{point.high}</b><br/>"},trackByArea:true,dataLabels:{align:void 0,verticalAlign:void 0,xLow:0,xHigh:0,yLow:0,yHigh:0}};class AreaRangeSeries extends AreaSeries{toYData(point){return[point.low,point.high]}highToXY(point){const chart=this.chart,xy=this.xAxis.postTranslate(point.rectPlotX||0,this.yAxis.len-(point.plotHigh||0));point.plotHighX=xy.x-chart.plotLeft;point.plotHigh=xy.y-chart.plotTop;point.plotLowX=point.plotX}getGraphPath(points){const highPoints=[],highAreaPoints=[],getGraphPath=areaProto.getGraphPath,options=this.options,polar=this.chart.polar,connectEnds=polar&&options.connectEnds!==false,connectNulls=options.connectNulls;let i,point,pointShim,step=options.step;points=points||this.points;i=points.length;while(i--){point=points[i];const highAreaPoint=polar?{plotX:point.rectPlotX,plotY:point.yBottom,doCurve:false}:{plotX:point.plotX,plotY:point.plotY,doCurve:false};if(!point.isNull&&!connectEnds&&!connectNulls&&(!points[i+1]||points[i+1].isNull)){highAreaPoints.push(highAreaPoint)}pointShim={polarPlotY:point.polarPlotY,rectPlotX:point.rectPlotX,yBottom:point.yBottom,plotX:pick(point.plotHighX,point.plotX),plotY:point.plotHigh,isNull:point.isNull};highAreaPoints.push(pointShim);highPoints.push(pointShim);if(!point.isNull&&!connectEnds&&!connectNulls&&(!points[i-1]||points[i-1].isNull)){highAreaPoints.push(highAreaPoint)}}const lowerPath=getGraphPath.call(this,points);if(step){if(step===true){step="left"}options.step={left:"right",center:"center",right:"left"}[step]}const higherPath=getGraphPath.call(this,highPoints);const higherAreaPath=getGraphPath.call(this,highAreaPoints);options.step=step;const linePath=[].concat(lowerPath,higherPath);if(!this.chart.polar&&higherAreaPath[0]&&higherAreaPath[0][0]==="M"){higherAreaPath[0]=["L",higherAreaPath[0][1],higherAreaPath[0][2]]}this.graphPath=linePath;this.areaPath=lowerPath.concat(higherAreaPath);linePath.isArea=true;linePath.xMap=lowerPath.xMap;this.areaPath.xMap=lowerPath.xMap;return linePath}drawDataLabels(){const data=this.points,length=data.length,originalDataLabels=[],dataLabelOptions=this.options.dataLabels,inverted=this.chart.inverted;let i,point,up,upperDataLabelOptions,lowerDataLabelOptions;if(dataLabelOptions){if(isArray(dataLabelOptions)){upperDataLabelOptions=dataLabelOptions[0]||{enabled:false};lowerDataLabelOptions=dataLabelOptions[1]||{enabled:false}}else{upperDataLabelOptions=extend({},dataLabelOptions);upperDataLabelOptions.x=dataLabelOptions.xHigh;upperDataLabelOptions.y=dataLabelOptions.yHigh;lowerDataLabelOptions=extend({},dataLabelOptions);lowerDataLabelOptions.x=dataLabelOptions.xLow;lowerDataLabelOptions.y=dataLabelOptions.yLow}if(upperDataLabelOptions.enabled||this.hasDataLabels?.()){i=length;while(i--){point=data[i];if(point){const{plotHigh=0,plotLow=0}=point;up=upperDataLabelOptions.inside?plotHigh<plotLow:plotHigh>plotLow;point.y=point.high;point._plotY=point.plotY;point.plotY=plotHigh;originalDataLabels[i]=point.dataLabel;point.dataLabel=point.dataLabelUpper;point.below=up;if(inverted){if(!upperDataLabelOptions.align){upperDataLabelOptions.align=up?"right":"left"}}else{if(!upperDataLabelOptions.verticalAlign){upperDataLabelOptions.verticalAlign=up?"top":"bottom"}}}}this.options.dataLabels=upperDataLabelOptions;if(areaProto.drawDataLabels){areaProto.drawDataLabels.apply(this,arguments)}i=length;while(i--){point=data[i];if(point){point.dataLabelUpper=point.dataLabel;point.dataLabel=originalDataLabels[i];delete point.dataLabels;point.y=point.low;point.plotY=point._plotY}}}if(lowerDataLabelOptions.enabled||this.hasDataLabels?.()){i=length;while(i--){point=data[i];if(point){const{plotHigh=0,plotLow=0}=point;up=lowerDataLabelOptions.inside?plotHigh<plotLow:plotHigh>plotLow;point.below=!up;if(inverted){if(!lowerDataLabelOptions.align){lowerDataLabelOptions.align=up?"left":"right"}}else{if(!lowerDataLabelOptions.verticalAlign){lowerDataLabelOptions.verticalAlign=up?"bottom":"top"}}}}this.options.dataLabels=lowerDataLabelOptions;if(areaProto.drawDataLabels){areaProto.drawDataLabels.apply(this,arguments)}}if(upperDataLabelOptions.enabled){i=length;while(i--){point=data[i];if(point){point.dataLabels=[point.dataLabelUpper,point.dataLabel].filter(function(label){return!!label})}}}this.options.dataLabels=dataLabelOptions}}alignDataLabel(){columnProto.alignDataLabel.apply(this,arguments)}modifyMarkerSettings(){const series=this,originalMarkerSettings={marker:series.options.marker,symbol:series.symbol};if(series.options.lowMarker){const{options:{marker,lowMarker}}=series;series.options.marker=merge(marker,lowMarker);if(lowMarker.symbol){series.symbol=lowMarker.symbol}}return originalMarkerSettings}restoreMarkerSettings(originalSettings){const series=this;series.options.marker=originalSettings.marker;series.symbol=originalSettings.symbol}drawPoints(){const series=this,pointLength=series.points.length;let i,point;const originalSettings=series.modifyMarkerSettings();areaProto.drawPoints.apply(series,arguments);series.restoreMarkerSettings(originalSettings);i=0;while(i<pointLength){point=series.points[i];point.graphics=point.graphics||[];point.origProps={plotY:point.plotY,plotX:point.plotX,isInside:point.isInside,negative:point.negative,zone:point.zone,y:point.y};if(point.graphic||point.graphics[0]){point.graphics[0]=point.graphic}point.graphic=point.graphics[1];point.plotY=point.plotHigh;if(defined(point.plotHighX)){point.plotX=point.plotHighX}point.y=pick(point.high,point.origProps.y);point.negative=point.y<(series.options.threshold||0);if(series.zones.length){point.zone=point.getZone()}if(!series.chart.polar){point.isInside=point.isTopInside=typeof point.plotY!=="undefined"&&point.plotY>=0&&point.plotY<=series.yAxis.len&&point.plotX>=0&&point.plotX<=series.xAxis.len}i++}areaProto.drawPoints.apply(series,arguments);i=0;while(i<pointLength){point=series.points[i];point.graphics=point.graphics||[];if(point.graphic||point.graphics[1]){point.graphics[1]=point.graphic}point.graphic=point.graphics[0];if(point.origProps){extend(point,point.origProps);delete point.origProps}i++}}hasMarkerChanged(options,oldOptions){const lowMarker=options.lowMarker,oldMarker=oldOptions.lowMarker||{};return lowMarker&&(lowMarker.enabled===false||oldMarker.symbol!==lowMarker.symbol||oldMarker.height!==lowMarker.height||oldMarker.width!==lowMarker.width)||super.hasMarkerChanged(options,oldOptions)}}AreaRangeSeries.defaultOptions=merge(AreaSeries.defaultOptions,areaRangeSeriesOptions);addEvent(AreaRangeSeries,"afterTranslate",function(){if(this.pointArrayMap.join(",")==="low,high"){this.points.forEach(point=>{const high=point.high,plotY=point.plotY;if(point.isNull){point.plotY=void 0}else{point.plotLow=plotY;point.plotHigh=isNumber(high)?this.yAxis.translate(this.dataModify?this.dataModify.modifyValue(high):high,false,true,void 0,true):void 0;if(this.dataModify){point.yBottom=point.plotHigh}}})}},{order:0});addEvent(AreaRangeSeries,"afterTranslate",function(){this.points.forEach(point=>{if(this.chart.polar){this.highToXY(point);point.plotLow=point.plotY;point.tooltipPos=[((point.plotHighX||0)+(point.plotLowX||0))/2,((point.plotHigh||0)+(point.plotLow||0))/2]}else{const tooltipPos=point.pos(false,point.plotLow),posHigh=point.pos(false,point.plotHigh);if(tooltipPos&&posHigh){tooltipPos[0]=(tooltipPos[0]+posHigh[0])/2;tooltipPos[1]=(tooltipPos[1]+posHigh[1])/2}point.tooltipPos=tooltipPos}})},{order:3});extend(AreaRangeSeries.prototype,{deferTranslatePolar:true,pointArrayMap:["low","high"],pointClass:AreaRangePoint,pointValKey:"low",setStackedPoints:noop});SeriesRegistry.registerSeriesType("arearange",AreaRangeSeries);export default AreaRangeSeries;