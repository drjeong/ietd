"use strict";import CandlestickSeriesDefaults from"./CandlestickSeriesDefaults.js";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const{column:ColumnSeries,ohlc:OHLCSeries}=SeriesRegistry.seriesTypes;import U from"../../Core/Utilities.js";const{crisp,merge}=U;class CandlestickSeries extends OHLCSeries{pointAttribs(point,state){const attribs=ColumnSeries.prototype.pointAttribs.call(this,point,state),options=this.options,isUp=point.open<point.close,stroke=options.lineColor||this.color,color=point.color||this.color;attribs["stroke-width"]=options.lineWidth;attribs.fill=point.options.color||(isUp?options.upColor||color:color);attribs.stroke=point.options.lineColor||(isUp?options.upLineColor||stroke:stroke);if(state){const stateOptions=options.states[state];attribs.fill=stateOptions.color||attribs.fill;attribs.stroke=stateOptions.lineColor||attribs.stroke;attribs["stroke-width"]=stateOptions.lineWidth||attribs["stroke-width"]}return attribs}drawPoints(){const series=this,points=series.points,chart=series.chart,reversedYAxis=series.yAxis.reversed;for(const point of points){let graphic=point.graphic,plotOpen,plotClose,topBox,bottomBox,hasTopWhisker,hasBottomWhisker,crispX,path,halfWidth;const isNew=!graphic;if(typeof point.plotY!=="undefined"){if(!graphic){point.graphic=graphic=chart.renderer.path().add(series.group)}if(!series.chart.styledMode){graphic.attr(series.pointAttribs(point,point.selected&&"select")).shadow(series.options.shadow)}const strokeWidth=graphic.strokeWidth();crispX=crisp(point.plotX||0,strokeWidth);plotOpen=point.plotOpen;plotClose=point.plotClose;topBox=Math.min(plotOpen,plotClose);bottomBox=Math.max(plotOpen,plotClose);halfWidth=Math.round(point.shapeArgs.width/2);hasTopWhisker=reversedYAxis?bottomBox!==point.yBottom:Math.round(topBox)!==Math.round(point.plotHigh||0);hasBottomWhisker=reversedYAxis?Math.round(topBox)!==Math.round(point.plotHigh||0):bottomBox!==point.yBottom;topBox=crisp(topBox,strokeWidth);bottomBox=crisp(bottomBox,strokeWidth);path=[];path.push(["M",crispX-halfWidth,bottomBox],["L",crispX-halfWidth,topBox],["L",crispX+halfWidth,topBox],["L",crispX+halfWidth,bottomBox],["Z"],["M",crispX,topBox],["L",crispX,hasTopWhisker?Math.round(reversedYAxis?point.yBottom:point.plotHigh):topBox],["M",crispX,bottomBox],["L",crispX,hasBottomWhisker?Math.round(reversedYAxis?point.plotHigh:point.yBottom):bottomBox]);graphic[isNew?"attr":"animate"]({d:path}).addClass(point.getClassName(),true)}}}}CandlestickSeries.defaultOptions=merge(OHLCSeries.defaultOptions,{tooltip:OHLCSeries.defaultOptions.tooltip},CandlestickSeriesDefaults);SeriesRegistry.registerSeriesType("candlestick",CandlestickSeries);export default CandlestickSeries;