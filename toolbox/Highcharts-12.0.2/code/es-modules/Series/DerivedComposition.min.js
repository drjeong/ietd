"use strict";import H from"../Core/Globals.js";const{noop}=H;import Series from"../Core/Series/Series.js";import U from"../Core/Utilities.js";const{addEvent,defined}=U;var DerivedComposition;(function(DerivedComposition){DerivedComposition.hasDerivedData=true;DerivedComposition.setDerivedData=noop;function compose(SeriesClass){const seriesProto=SeriesClass.prototype;seriesProto.addBaseSeriesEvents=addBaseSeriesEvents;seriesProto.addEvents=addEvents;seriesProto.destroy=destroy;seriesProto.init=init;seriesProto.setBaseSeries=setBaseSeries;return SeriesClass}DerivedComposition.compose=compose;function init(){Series.prototype.init.apply(this,arguments);this.initialised=false;this.baseSeries=null;this.eventRemovers=[];this.addEvents()}DerivedComposition.init=init;function setBaseSeries(){const chart=this.chart,baseSeriesOptions=this.options.baseSeries,baseSeries=defined(baseSeriesOptions)&&(chart.series[baseSeriesOptions]||chart.get(baseSeriesOptions));this.baseSeries=baseSeries||null}DerivedComposition.setBaseSeries=setBaseSeries;function addEvents(){this.eventRemovers.push(addEvent(this.chart,"afterLinkSeries",()=>{this.setBaseSeries();if(this.baseSeries&&!this.initialised){this.setDerivedData();this.addBaseSeriesEvents();this.initialised=true}}))}DerivedComposition.addEvents=addEvents;function addBaseSeriesEvents(){this.eventRemovers.push(addEvent(this.baseSeries,"updatedData",()=>{this.setDerivedData()}),addEvent(this.baseSeries,"destroy",()=>{this.baseSeries=null;this.initialised=false}))}DerivedComposition.addBaseSeriesEvents=addBaseSeriesEvents;function destroy(){this.eventRemovers.forEach(remover=>{remover()});Series.prototype.destroy.apply(this,arguments)}DerivedComposition.destroy=destroy})(DerivedComposition||(DerivedComposition={}));export default DerivedComposition;