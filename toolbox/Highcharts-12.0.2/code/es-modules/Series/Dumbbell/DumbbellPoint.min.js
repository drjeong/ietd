"use strict";import AreaRangePoint from"../AreaRange/AreaRangePoint.js";import U from"../../Core/Utilities.js";const{extend,pick}=U;class DumbbellPoint extends AreaRangePoint{setState(){const point=this,series=point.series,chart=series.chart,seriesLowColor=series.options.lowColor,seriesMarker=series.options.marker,seriesLowMarker=series.options.lowMarker,pointOptions=point.options,pointLowColor=pointOptions.lowColor,zoneColor=point.zone&&point.zone.color,lowerGraphicColor=pick(pointLowColor,seriesLowMarker?.fillColor,seriesLowColor,pointOptions.color,zoneColor,point.color,series.color);let verb="attr",upperGraphicColor,origProps;this.pointSetState.apply(point,arguments);if(!point.state){verb="animate";const[lowerGraphic,upperGraphic]=point.graphics||[];if(lowerGraphic&&!chart.styledMode){lowerGraphic.attr({fill:lowerGraphicColor});if(upperGraphic){origProps={y:point.y,zone:point.zone};point.y=point.high;point.zone=point.zone?point.getZone():void 0;upperGraphicColor=pick(point.marker?point.marker.fillColor:void 0,seriesMarker?seriesMarker.fillColor:void 0,pointOptions.color,point.zone?point.zone.color:void 0,point.color);upperGraphic.attr({fill:upperGraphicColor});extend(point,origProps)}}}point.connector?.[verb](series.getConnectorAttribs(point))}destroy(){const point=this;if(!point.graphic){point.graphic=point.connector;point.connector=void 0}return super.destroy()}}extend(DumbbellPoint.prototype,{pointSetState:AreaRangePoint.prototype.setState});export default DumbbellPoint;