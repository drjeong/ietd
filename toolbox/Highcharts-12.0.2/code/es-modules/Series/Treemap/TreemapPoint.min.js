"use strict";import DPU from"../DrawPointUtilities.js";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const{pie:{prototype:{pointClass:PiePoint}},scatter:{prototype:{pointClass:ScatterPoint}}}=SeriesRegistry.seriesTypes;import U from"../../Core/Utilities.js";const{extend,isNumber,pick}=U;class TreemapPoint extends ScatterPoint{constructor(){super(...arguments);this.shapeType="rect"}draw(params){DPU.draw(this,params)}getClassName(){const series=this.series,options=series.options;let className=super.getClassName();if(this.node.level<=series.nodeMap[series.rootNode].level&&this.node.children.length){className+=" highcharts-above-level"}else if(!this.node.isLeaf&&!pick(options.interactByLeaf,!options.allowTraversingTree)){className+=" highcharts-internal-node-interactive"}else if(!this.node.isLeaf){className+=" highcharts-internal-node"}return className}isValid(){return Boolean(this.id||isNumber(this.value))}setState(state){super.setState.apply(this,arguments);if(this.graphic){this.graphic.attr({zIndex:state==="hover"?1:0})}}shouldDraw(){return isNumber(this.plotY)&&this.y!==null}}extend(TreemapPoint.prototype,{setVisible:PiePoint.prototype.setVisible});export default TreemapPoint;