"use strict";import ColumnRangePoint from"./ColumnRangePoint.js";import H from"../../Core/Globals.js";const{noop}=H;import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const{seriesTypes:{arearange:AreaRangeSeries,column:ColumnSeries,column:{prototype:columnProto}}}=SeriesRegistry;import U from"../../Core/Utilities.js";const{addEvent,clamp,extend,isNumber,merge,pick}=U;const columnRangeOptions={borderRadius:{where:"all"},pointRange:null,legendSymbol:"rectangle",marker:null,states:{hover:{halo:false}}};class ColumnRangeSeries extends AreaRangeSeries{setOptions(){merge(true,arguments[0],{stacking:void 0});return AreaRangeSeries.prototype.setOptions.apply(this,arguments)}translate(){return columnProto.translate.apply(this)}pointAttribs(){return columnProto.pointAttribs.apply(this,arguments)}translate3dPoints(){return columnProto.translate3dPoints.apply(this,arguments)}translate3dShapes(){return columnProto.translate3dShapes.apply(this,arguments)}afterColumnTranslate(){const yAxis=this.yAxis,xAxis=this.xAxis,startAngleRad=xAxis.startAngleRad,chart=this.chart,isRadial=this.xAxis.isRadial,safeDistance=Math.max(chart.chartWidth,chart.chartHeight)+999;let height,heightDifference,start,y;function safeBounds(pixelPos){return clamp(pixelPos,-safeDistance,safeDistance)}this.points.forEach(point=>{const shapeArgs=point.shapeArgs||{},minPointLength=this.options.minPointLength,plotY=point.plotY,plotHigh=yAxis.translate(point.high,0,1,0,1);if(isNumber(plotHigh)&&isNumber(plotY)){point.plotHigh=safeBounds(plotHigh);point.plotLow=safeBounds(plotY);y=point.plotHigh;height=pick(point.rectPlotY,point.plotY)-point.plotHigh;if(Math.abs(height)<minPointLength){heightDifference=minPointLength-height;height+=heightDifference;y-=heightDifference/2}else if(height<0){height*=-1;y-=height}if(isRadial&&this.polar){start=point.barX+startAngleRad;point.shapeType="arc";point.shapeArgs=this.polar.arc(y+height,y,start,start+point.pointWidth)}else{shapeArgs.height=height;shapeArgs.y=y;const{x=0,width=0}=shapeArgs;point.shapeArgs=merge(point.shapeArgs,this.crispCol(x,y,width,height));point.tooltipPos=chart.inverted?[yAxis.len+yAxis.pos-chart.plotLeft-y-height/2,xAxis.len+xAxis.pos-chart.plotTop-x-width/2,height]:[xAxis.left-chart.plotLeft+x+width/2,yAxis.pos-chart.plotTop+y+height/2,height]}}})}}ColumnRangeSeries.defaultOptions=merge(ColumnSeries.defaultOptions,AreaRangeSeries.defaultOptions,columnRangeOptions);addEvent(ColumnRangeSeries,"afterColumnTranslate",function(){ColumnRangeSeries.prototype.afterColumnTranslate.apply(this)},{order:5});extend(ColumnRangeSeries.prototype,{directTouch:true,pointClass:ColumnRangePoint,trackerGroups:["group","dataLabelsGroup"],adjustForMissingColumns:columnProto.adjustForMissingColumns,animate:columnProto.animate,crispCol:columnProto.crispCol,drawGraph:noop,drawPoints:columnProto.drawPoints,getSymbol:noop,drawTracker:columnProto.drawTracker,getColumnMetrics:columnProto.getColumnMetrics});SeriesRegistry.registerSeriesType("columnrange",ColumnRangeSeries);export default ColumnRangeSeries;"";