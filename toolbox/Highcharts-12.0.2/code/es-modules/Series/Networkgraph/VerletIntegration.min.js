"use strict";function attractive(link,force,distanceXY){const massFactor=link.getMass(),translatedX=-distanceXY.x*force*this.diffTemperature,translatedY=-distanceXY.y*force*this.diffTemperature;if(!link.fromNode.fixedPosition){link.fromNode.plotX-=translatedX*massFactor.fromNode/link.fromNode.degree;link.fromNode.plotY-=translatedY*massFactor.fromNode/link.fromNode.degree}if(!link.toNode.fixedPosition){link.toNode.plotX+=translatedX*massFactor.toNode/link.toNode.degree;link.toNode.plotY+=translatedY*massFactor.toNode/link.toNode.degree}}function attractiveForceFunction(d,k){return(k-d)/d}function barycenter(){const gravitationalConstant=this.options.gravitationalConstant||0,xFactor=(this.barycenter.xFactor-(this.box.left+this.box.width)/2)*gravitationalConstant,yFactor=(this.barycenter.yFactor-(this.box.top+this.box.height)/2)*gravitationalConstant;this.nodes.forEach(function(node){if(!node.fixedPosition){node.plotX-=xFactor/node.mass/node.degree;node.plotY-=yFactor/node.mass/node.degree}})}function getK(layout){return Math.pow(layout.box.width*layout.box.height/layout.nodes.length,.5)}function integrate(layout,node){const friction=-layout.options.friction,maxSpeed=layout.options.maxSpeed,prevX=node.prevX,prevY=node.prevY,frictionX=(node.plotX+node.dispX-prevX)*friction,frictionY=(node.plotY+node.dispY-prevY)*friction,abs=Math.abs,signX=abs(frictionX)/(frictionX||1),signY=abs(frictionY)/(frictionY||1),diffX=signX*Math.min(maxSpeed,Math.abs(frictionX)),diffY=signY*Math.min(maxSpeed,Math.abs(frictionY));node.prevX=node.plotX+node.dispX;node.prevY=node.plotY+node.dispY;node.plotX+=diffX;node.plotY+=diffY;node.temperature=layout.vectorLength({x:diffX,y:diffY})}function repulsive(node,force,distanceXY){const factor=force*this.diffTemperature/node.mass/node.degree;if(!node.fixedPosition){node.plotX+=distanceXY.x*factor;node.plotY+=distanceXY.y*factor}}function repulsiveForceFunction(d,k){return(k-d)/d*(k>d?1:0)}const VerletIntegration={attractive:attractive,attractiveForceFunction:attractiveForceFunction,barycenter:barycenter,getK:getK,integrate:integrate,repulsive:repulsive,repulsiveForceFunction:repulsiveForceFunction};export default VerletIntegration;