"use strict";import Point from"../../Core/Series/Point.js";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";const{column:ColumnSeries}=SeriesRegistry.seriesTypes;import U from"../../Core/Utilities.js";const{defined}=U;class SankeyPoint extends ColumnSeries.prototype.pointClass{applyOptions(options,x){Point.prototype.applyOptions.call(this,options,x);if(defined(this.options.level)){this.options.column=this.column=this.options.level}return this}getClassName(){return(this.isNode?"highcharts-node ":"highcharts-link ")+Point.prototype.getClassName.call(this)}getFromNode(){const node=this;let fromColumn=-1,fromNode;for(let i=0;i<node.linksTo.length;i++){const point=node.linksTo[i];if(point.fromNode.column>fromColumn&&point.fromNode!==node){fromNode=point.fromNode;fromColumn=fromNode.column}}return{fromNode:fromNode,fromColumn:fromColumn}}setNodeColumn(){const node=this;if(!defined(node.options.column)){if(node.linksTo.length===0){node.column=0}else{node.column=node.getFromNode().fromColumn+1}}}isValid(){return this.isNode||typeof this.weight==="number"}}export default SankeyPoint;