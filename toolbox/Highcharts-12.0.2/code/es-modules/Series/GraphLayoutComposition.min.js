"use strict";import A from"../Core/Animation/AnimationUtilities.js";const{setAnimation}=A;import H from"../Core/Globals.js";const{composed}=H;import U from"../Core/Utilities.js";const{addEvent,pushUnique}=U;const integrations={};const layouts={};function compose(ChartClass){if(pushUnique(composed,"GraphLayout")){addEvent(ChartClass,"afterPrint",onChartAfterPrint);addEvent(ChartClass,"beforePrint",onChartBeforePrint);addEvent(ChartClass,"predraw",onChartPredraw);addEvent(ChartClass,"render",onChartRender)}}function onChartAfterPrint(){if(this.graphLayoutsLookup){this.graphLayoutsLookup.forEach(layout=>{layout.updateSimulation()});this.redraw()}}function onChartBeforePrint(){if(this.graphLayoutsLookup){this.graphLayoutsLookup.forEach(layout=>{layout.updateSimulation(false)});this.redraw()}}function onChartPredraw(){if(this.graphLayoutsLookup){this.graphLayoutsLookup.forEach(layout=>{layout.stop()})}}function onChartRender(){let systemsStable,afterRender=false;const layoutStep=layout=>{if(layout.maxIterations--&&isFinite(layout.temperature)&&!layout.isStable()&&!layout.enableSimulation){if(layout.beforeStep){layout.beforeStep()}layout.step();systemsStable=false;afterRender=true}};if(this.graphLayoutsLookup){setAnimation(false,this);this.graphLayoutsLookup.forEach(layout=>layout.start());while(!systemsStable){systemsStable=true;this.graphLayoutsLookup.forEach(layoutStep)}if(afterRender){this.series.forEach(series=>{if(series&&series.layout){series.render()}})}}}const GraphLayoutComposition={compose:compose,integrations:integrations,layouts:layouts};export default GraphLayoutComposition;