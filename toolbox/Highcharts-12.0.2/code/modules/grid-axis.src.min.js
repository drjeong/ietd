(function webpackUniversalModuleDefinition(root,factory){if(typeof exports==="object"&&typeof module==="object")module.exports=factory(root["_Highcharts"],root["_Highcharts"]["Axis"]);else if(typeof define==="function"&&define.amd)define("highcharts/modules/grid-axis",["highcharts/highcharts"],function(amd1){return factory(amd1,amd1["Axis"])});else if(typeof exports==="object")exports["highcharts/modules/grid-axis"]=factory(root["_Highcharts"],root["_Highcharts"]["Axis"]);else root["Highcharts"]=factory(root["Highcharts"],root["Highcharts"]["Axis"])})(typeof window==="undefined"?this:window,(__WEBPACK_EXTERNAL_MODULE__944__,__WEBPACK_EXTERNAL_MODULE__532__)=>{return(()=>{"use strict";var __webpack_modules__={532:module=>{module.exports=__WEBPACK_EXTERNAL_MODULE__532__},944:module=>{module.exports=__WEBPACK_EXTERNAL_MODULE__944__}};var __webpack_module_cache__={};function __webpack_require__(moduleId){var cachedModule=__webpack_module_cache__[moduleId];if(cachedModule!==undefined){return cachedModule.exports}var module=__webpack_module_cache__[moduleId]={exports:{}};__webpack_modules__[moduleId](module,module.exports,__webpack_require__);return module.exports}(()=>{__webpack_require__.n=module=>{var getter=module&&module.__esModule?()=>module["default"]:()=>module;__webpack_require__.d(getter,{a:getter});return getter}})();(()=>{__webpack_require__.d=(exports,definition)=>{for(var key in definition){if(__webpack_require__.o(definition,key)&&!__webpack_require__.o(exports,key)){Object.defineProperty(exports,key,{enumerable:true,get:definition[key]})}}}})();(()=>{__webpack_require__.o=(obj,prop)=>Object.prototype.hasOwnProperty.call(obj,prop)})();var __webpack_exports__={};__webpack_require__.d(__webpack_exports__,{default:()=>grid_axis_src});var highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_=__webpack_require__(944);var highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default=__webpack_require__.n(highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_);var highcharts_Axis_commonjs_highcharts_Axis_commonjs2_highcharts_Axis_root_Highcharts_Axis_=__webpack_require__(532);var highcharts_Axis_commonjs_highcharts_Axis_commonjs2_highcharts_Axis_root_Highcharts_Axis_default=__webpack_require__.n(highcharts_Axis_commonjs_highcharts_Axis_commonjs2_highcharts_Axis_root_Highcharts_Axis_);const{dateFormats}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const{addEvent,defined,erase,find,isArray,isNumber,merge,pick,timeUnits,wrap}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();var GridAxisSide;(function(GridAxisSide){GridAxisSide[GridAxisSide["top"]=0]="top";GridAxisSide[GridAxisSide["right"]=1]="right";GridAxisSide[GridAxisSide["bottom"]=2]="bottom";GridAxisSide[GridAxisSide["left"]=3]="left"})(GridAxisSide||(GridAxisSide={}));function argsToArray(args){return Array.prototype.slice.call(args,1)}function isObject(x){return highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().isObject(x,true)}function applyGridOptions(axis){const options=axis.options;options.labels.align=pick(options.labels.align,"center");if(!axis.categories){options.showLastLabel=false}axis.labelRotation=0;options.labels.rotation=0;options.minTickInterval=1}function compose(AxisClass,ChartClass,TickClass){if(!AxisClass.keepProps.includes("grid")){AxisClass.keepProps.push("grid");AxisClass.prototype.getMaxLabelDimensions=getMaxLabelDimensions;wrap(AxisClass.prototype,"unsquish",wrapUnsquish);wrap(AxisClass.prototype,"getOffset",wrapGetOffset);addEvent(AxisClass,"init",onInit);addEvent(AxisClass,"afterGetTitlePosition",onAfterGetTitlePosition);addEvent(AxisClass,"afterInit",onAfterInit);addEvent(AxisClass,"afterRender",onAfterRender);addEvent(AxisClass,"afterSetAxisTranslation",onAfterSetAxisTranslation);addEvent(AxisClass,"afterSetOptions",onAfterSetOptions);addEvent(AxisClass,"afterSetOptions",onAfterSetOptions2);addEvent(AxisClass,"afterSetScale",onAfterSetScale);addEvent(AxisClass,"afterTickSize",onAfterTickSize);addEvent(AxisClass,"trimTicks",onTrimTicks);addEvent(AxisClass,"destroy",onDestroy);addEvent(ChartClass,"afterSetChartSize",onChartAfterSetChartSize);addEvent(TickClass,"afterGetLabelPosition",onTickAfterGetLabelPosition);addEvent(TickClass,"labelFormat",onTickLabelFormat)}return AxisClass}function getMaxLabelDimensions(ticks,tickPositions){const dimensions={width:0,height:0};tickPositions.forEach(function(pos){const tick=ticks[pos];let labelHeight=0,labelWidth=0,label;if(isObject(tick)){label=isObject(tick.label)?tick.label:{};labelHeight=label.getBBox?label.getBBox().height:0;if(label.textStr&&!isNumber(label.textPxLength)){label.textPxLength=label.getBBox().width}labelWidth=isNumber(label.textPxLength)?Math.round(label.textPxLength):0;if(label.textStr){labelWidth=Math.round(label.getBBox().width)}dimensions.height=Math.max(labelHeight,dimensions.height);dimensions.width=Math.max(labelWidth,dimensions.width)}});if(this.type==="treegrid"&&this.treeGrid&&this.treeGrid.mapOfPosToGridNode){const treeDepth=this.treeGrid.mapOfPosToGridNode[-1].height||0;dimensions.width+=this.options.labels.indentation*(treeDepth-1)}return dimensions}function wrapGetOffset(proceed){const{grid}=this,columnsFirst=this.side===3;if(!columnsFirst){proceed.apply(this)}if(!grid?.isColumn){let columns=grid?.columns||[];if(columnsFirst){columns=columns.slice().reverse()}columns.forEach(column=>{column.getOffset()})}if(columnsFirst){proceed.apply(this)}}function onAfterGetTitlePosition(e){const axis=this;const options=axis.options;const gridOptions=options.grid||{};if(gridOptions.enabled===true){const{axisTitle,height:axisHeight,horiz,left:axisLeft,offset,opposite,options,top:axisTop,width:axisWidth}=axis;const tickSize=axis.tickSize();const titleWidth=axisTitle&&axisTitle.getBBox().width;const xOption=options.title.x;const yOption=options.title.y;const titleMargin=pick(options.title.margin,horiz?5:10);const titleFontSize=axisTitle?axis.chart.renderer.fontMetrics(axisTitle).f:0;const crispCorr=tickSize?tickSize[0]/2:0;const offAxis=(horiz?axisTop+axisHeight:axisLeft)+(horiz?1:-1)*(opposite?-1:1)*crispCorr+(axis.side===GridAxisSide.bottom?titleFontSize:0);e.titlePosition.x=horiz?axisLeft-(titleWidth||0)/2-titleMargin+xOption:offAxis+(opposite?axisWidth:0)+offset+xOption;e.titlePosition.y=horiz?offAxis-(opposite?axisHeight:0)+(opposite?titleFontSize:-titleFontSize)/2+offset+yOption:axisTop-titleMargin+yOption}}function onAfterInit(){const axis=this;const{chart,options:{grid:gridOptions={}},userOptions}=axis;if(gridOptions.enabled){applyGridOptions(axis)}if(gridOptions.columns){const columns=axis.grid.columns=[];let columnIndex=axis.grid.columnIndex=0;while(++columnIndex<gridOptions.columns.length){const columnOptions=merge(userOptions,gridOptions.columns[columnIndex],{isInternal:true,linkedTo:0,scrollbar:{enabled:false}},{grid:{columns:void 0}});const column=new(highcharts_Axis_commonjs_highcharts_Axis_commonjs2_highcharts_Axis_root_Highcharts_Axis_default())(axis.chart,columnOptions,"yAxis");column.grid.isColumn=true;column.grid.columnIndex=columnIndex;erase(chart.axes,column);erase(chart[axis.coll]||[],column);columns.push(column)}}}function onAfterRender(){const axis=this,{axisTitle,grid,options}=axis,gridOptions=options.grid||{};if(gridOptions.enabled===true){const min=axis.min||0,max=axis.max||0,firstTick=axis.ticks[axis.tickPositions[0]];if(axisTitle&&!axis.chart.styledMode&&firstTick?.slotWidth&&!axis.options.title.style.width){axisTitle.css({width:`${firstTick.slotWidth}px`})}axis.maxLabelDimensions=axis.getMaxLabelDimensions(axis.ticks,axis.tickPositions);if(axis.rightWall){axis.rightWall.destroy()}if(axis.grid&&axis.grid.isOuterAxis()&&axis.axisLine){const lineWidth=options.lineWidth;if(lineWidth){const linePath=axis.getLinePath(lineWidth),startPoint=linePath[0],endPoint=linePath[1],tickLength=(axis.tickSize("tick")||[1])[0],distance=tickLength*(axis.side===GridAxisSide.top||axis.side===GridAxisSide.left?-1:1);if(startPoint[0]==="M"&&endPoint[0]==="L"){if(axis.horiz){startPoint[2]+=distance;endPoint[2]+=distance}else{startPoint[1]+=distance;endPoint[1]+=distance}}if(!axis.horiz&&axis.chart.marginRight){const upperBorderStartPoint=startPoint,upperBorderEndPoint=["L",axis.left,startPoint[2]||0],upperBorderPath=[upperBorderStartPoint,upperBorderEndPoint],lowerBorderEndPoint=["L",axis.chart.chartWidth-axis.chart.marginRight,axis.toPixels(max+axis.tickmarkOffset)],lowerBorderStartPoint=["M",endPoint[1]||0,axis.toPixels(max+axis.tickmarkOffset)],lowerBorderPath=[lowerBorderStartPoint,lowerBorderEndPoint];if(!axis.grid.upperBorder&&min%1!==0){axis.grid.upperBorder=axis.grid.renderBorder(upperBorderPath)}if(axis.grid.upperBorder){axis.grid.upperBorder.attr({stroke:options.lineColor,"stroke-width":options.lineWidth});axis.grid.upperBorder.animate({d:upperBorderPath})}if(!axis.grid.lowerBorder&&max%1!==0){axis.grid.lowerBorder=axis.grid.renderBorder(lowerBorderPath)}if(axis.grid.lowerBorder){axis.grid.lowerBorder.attr({stroke:options.lineColor,"stroke-width":options.lineWidth});axis.grid.lowerBorder.animate({d:lowerBorderPath})}}if(!axis.grid.axisLineExtra){axis.grid.axisLineExtra=axis.grid.renderBorder(linePath)}else{axis.grid.axisLineExtra.attr({stroke:options.lineColor,"stroke-width":options.lineWidth});axis.grid.axisLineExtra.animate({d:linePath})}axis.axisLine[axis.showAxis?"show":"hide"]()}}(grid&&grid.columns||[]).forEach(column=>column.render());if(!axis.horiz&&axis.chart.hasRendered&&(axis.scrollbar||axis.linkedParent&&axis.linkedParent.scrollbar)&&axis.tickPositions.length){const tickmarkOffset=axis.tickmarkOffset,lastTick=axis.tickPositions[axis.tickPositions.length-1],firstTick=axis.tickPositions[0];let label,tickMark;while((label=axis.hiddenLabels.pop())&&label.element){label.show()}while((tickMark=axis.hiddenMarks.pop())&&tickMark.element){tickMark.show()}label=axis.ticks[firstTick].label;if(label){if(min-firstTick>tickmarkOffset){axis.hiddenLabels.push(label.hide())}else{label.show()}}label=axis.ticks[lastTick].label;if(label){if(lastTick-max>tickmarkOffset){axis.hiddenLabels.push(label.hide())}else{label.show()}}const mark=axis.ticks[lastTick].mark;if(mark&&lastTick-max<tickmarkOffset&&lastTick-max>0&&axis.ticks[lastTick].isLast){axis.hiddenMarks.push(mark.hide())}}}}function onAfterSetAxisTranslation(){const axis=this;const tickInfo=axis.tickPositions&&axis.tickPositions.info;const options=axis.options;const gridOptions=options.grid||{};const userLabels=axis.userOptions.labels||{};if(gridOptions.enabled){if(axis.horiz){axis.series.forEach(series=>{series.options.pointRange=0});if(tickInfo&&options.dateTimeLabelFormats&&options.labels&&!defined(userLabels.align)&&(options.dateTimeLabelFormats[tickInfo.unitName].range===false||tickInfo.count>1)){options.labels.align="left";if(!defined(userLabels.x)){options.labels.x=3}}}else{if(this.type!=="treegrid"&&axis.grid&&axis.grid.columns){this.minPointOffset=this.tickInterval}}}}function onAfterSetOptions(e){const options=this.options,userOptions=e.userOptions,gridOptions=options&&isObject(options.grid)?options.grid:{};let gridAxisOptions;if(gridOptions.enabled===true){gridAxisOptions=merge(true,{className:"highcharts-grid-axis "+(userOptions.className||""),dateTimeLabelFormats:{hour:{list:["%[HM]","%[H]"]},day:{list:["%[AeB]","%[aeb]","%[E]"]},week:{list:["Week %W","W%W"]},month:{list:["%[B]","%[b]","%o"]}},grid:{borderWidth:1},labels:{padding:2,style:{fontSize:"0.9em"}},margin:0,title:{text:null,reserveSpace:false,rotation:0,style:{textOverflow:"ellipsis"}},units:[["millisecond",[1,10,100]],["second",[1,10]],["minute",[1,5,15]],["hour",[1,6]],["day",[1]],["week",[1]],["month",[1]],["year",null]]},userOptions);if(this.coll==="xAxis"){if(defined(userOptions.linkedTo)&&!defined(userOptions.tickPixelInterval)){gridAxisOptions.tickPixelInterval=350}if(!defined(userOptions.tickPixelInterval)&&defined(userOptions.linkedTo)&&!defined(userOptions.tickPositioner)&&!defined(userOptions.tickInterval)&&!defined(userOptions.units)){gridAxisOptions.tickPositioner=function(min,max){const parentInfo=this.linkedParent&&this.linkedParent.tickPositions&&this.linkedParent.tickPositions.info;if(parentInfo){const units=gridAxisOptions.units||[];let unitIdx,count=1,unitName="year";for(let i=0;i<units.length;i++){const unit=units[i];if(unit&&unit[0]===parentInfo.unitName){unitIdx=i;break}}const unit=isNumber(unitIdx)&&units[unitIdx+1];if(unit){unitName=unit[0]||"year";const counts=unit[1];count=counts&&counts[0]||1}else if(parentInfo.unitName==="year"){count=parentInfo.count*10}const unitRange=timeUnits[unitName];this.tickInterval=unitRange*count;return this.chart.time.getTimeTicks({unitRange:unitRange,count:count,unitName:unitName},min,max,this.options.startOfWeek)}}}}merge(true,this.options,gridAxisOptions);if(this.horiz){options.minPadding=pick(userOptions.minPadding,0);options.maxPadding=pick(userOptions.maxPadding,0)}if(isNumber(options.grid.borderWidth)){options.tickWidth=options.lineWidth=gridOptions.borderWidth}}}function onAfterSetOptions2(e){const axis=this;const userOptions=e.userOptions;const gridOptions=userOptions&&userOptions.grid||{};const columns=gridOptions.columns;if(gridOptions.enabled&&columns){merge(true,axis.options,columns[0])}}function onAfterSetScale(){const axis=this;(axis.grid.columns||[]).forEach(column=>column.setScale())}function onAfterTickSize(e){const{horiz,maxLabelDimensions,options:{grid:gridOptions={}}}=this;if(gridOptions.enabled&&maxLabelDimensions){const labelPadding=this.options.labels.distance*2;const distance=horiz?gridOptions.cellHeight||labelPadding+maxLabelDimensions.height:labelPadding+maxLabelDimensions.width;if(isArray(e.tickSize)){e.tickSize[0]=distance}else{e.tickSize=[distance,0]}}}function onChartAfterSetChartSize(){this.axes.forEach(axis=>{(axis.grid&&axis.grid.columns||[]).forEach(column=>{column.setAxisSize();column.setAxisTranslation()})})}function onDestroy(e){const{grid}=this;(grid.columns||[]).forEach(column=>column.destroy(e.keepEvents));grid.columns=void 0}function onInit(e){const axis=this;const userOptions=e.userOptions||{};const gridOptions=userOptions.grid||{};if(gridOptions.enabled&&defined(gridOptions.borderColor)){userOptions.tickColor=userOptions.lineColor=gridOptions.borderColor}if(!axis.grid){axis.grid=new GridAxisAdditions(axis)}axis.hiddenLabels=[];axis.hiddenMarks=[]}function onTickAfterGetLabelPosition(e){const tick=this,label=tick.label,axis=tick.axis,reversed=axis.reversed,chart=axis.chart,options=axis.options,gridOptions=options.grid||{},labelOpts=axis.options.labels,align=labelOpts.align,verticalAlign="middle",side=GridAxisSide[axis.side],tickmarkOffset=e.tickmarkOffset,tickPositions=axis.tickPositions,tickPos=tick.pos-tickmarkOffset,nextTickPos=isNumber(tickPositions[e.index+1])?tickPositions[e.index+1]-tickmarkOffset:(axis.max||0)+tickmarkOffset,tickSize=axis.tickSize("tick"),tickWidth=tickSize?tickSize[0]:0,crispCorr=tickSize?tickSize[1]/2:0;if(gridOptions.enabled===true){let bottom,top,left,right;if(side==="top"){bottom=axis.top+axis.offset;top=bottom-tickWidth}else if(side==="bottom"){top=chart.chartHeight-axis.bottom+axis.offset;bottom=top+tickWidth}else{bottom=axis.top+axis.len-(axis.translate(reversed?nextTickPos:tickPos)||0);top=axis.top+axis.len-(axis.translate(reversed?tickPos:nextTickPos)||0)}if(side==="right"){left=chart.chartWidth-axis.right+axis.offset;right=left+tickWidth}else if(side==="left"){right=axis.left+axis.offset;left=right-tickWidth}else{left=Math.round(axis.left+(axis.translate(reversed?nextTickPos:tickPos)||0))-crispCorr;right=Math.min(Math.round(axis.left+(axis.translate(reversed?tickPos:nextTickPos)||0))-crispCorr,axis.left+axis.len)}tick.slotWidth=right-left;e.pos.x=align==="left"?left:align==="right"?right:left+(right-left)/2;e.pos.y=verticalAlign==="top"?top:verticalAlign==="bottom"?bottom:top+(bottom-top)/2;if(label){const lblMetrics=chart.renderer.fontMetrics(label),labelHeight=label.getBBox().height;if(!labelOpts.useHTML){const lines=Math.round(labelHeight/lblMetrics.h);e.pos.y+=(lblMetrics.b-(lblMetrics.h-lblMetrics.f))/2+-((lines-1)*lblMetrics.h/2)}else{e.pos.y+=lblMetrics.b+-(labelHeight/2)}}e.pos.x+=axis.horiz&&labelOpts.x||0}}function onTickLabelFormat(ctx){const{axis,value}=ctx;if(axis.options.grid&&axis.options.grid.enabled){const tickPos=axis.tickPositions;const series=(axis.linkedParent||axis).series[0];const isFirst=value===tickPos[0];const isLast=value===tickPos[tickPos.length-1];const point=series&&find(series.options.data,function(p){return p[axis.isXAxis?"x":"y"]===value});let pointCopy;if(point&&series.is("gantt")){pointCopy=merge(point);highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().seriesTypes.gantt.prototype.pointClass.setGanttPointAliases(pointCopy,axis.chart)}ctx.isFirst=isFirst;ctx.isLast=isLast;ctx.point=pointCopy}}function onTrimTicks(){const axis=this,options=axis.options,gridOptions=options.grid||{},categoryAxis=axis.categories,tickPositions=axis.tickPositions,firstPos=tickPositions[0],secondPos=tickPositions[1],lastPos=tickPositions[tickPositions.length-1],beforeLastPos=tickPositions[tickPositions.length-2],linkedMin=axis.linkedParent&&axis.linkedParent.min,linkedMax=axis.linkedParent&&axis.linkedParent.max,min=linkedMin||axis.min,max=linkedMax||axis.max,tickInterval=axis.tickInterval,startLessThanMin=isNumber(min)&&min>=firstPos+tickInterval&&min<secondPos,endMoreThanMin=isNumber(min)&&firstPos<min&&firstPos+tickInterval>min,startLessThanMax=isNumber(max)&&lastPos>max&&lastPos-tickInterval<max,endMoreThanMax=isNumber(max)&&max<=lastPos-tickInterval&&max>beforeLastPos;if(gridOptions.enabled===true&&!categoryAxis&&(axis.isXAxis||axis.isLinked)){if((endMoreThanMin||startLessThanMin)&&!options.startOnTick){tickPositions[0]=min}if((startLessThanMax||endMoreThanMax)&&!options.endOnTick){tickPositions[tickPositions.length-1]=max}}}function wrapUnsquish(proceed){const axis=this;const{options:{grid:gridOptions={}}}=axis;if(gridOptions.enabled===true&&axis.categories){return axis.tickInterval}return proceed.apply(axis,argsToArray(arguments))}class GridAxisAdditions{constructor(axis){this.axis=axis}isOuterAxis(){const axis=this.axis;const chart=axis.chart;const columnIndex=axis.grid.columnIndex;const columns=axis.linkedParent?.grid.columns||axis.grid.columns||[];const parentAxis=columnIndex?axis.linkedParent:axis;let thisIndex=-1,lastIndex=0;if(axis.side===3&&!chart.inverted&&columns.length){return!axis.linkedParent}(chart[axis.coll]||[]).forEach((otherAxis,index)=>{if(otherAxis.side===axis.side&&!otherAxis.options.isInternal){lastIndex=index;if(otherAxis===parentAxis){thisIndex=index}}});return lastIndex===thisIndex&&(isNumber(columnIndex)?columns.length===columnIndex:true)}renderBorder(path){const axis=this.axis,renderer=axis.chart.renderer,options=axis.options,extraBorderLine=renderer.path(path).addClass("highcharts-axis-line").add(axis.axisGroup);if(!renderer.styledMode){extraBorderLine.attr({stroke:options.lineColor,"stroke-width":options.lineWidth,zIndex:7})}return extraBorderLine}}dateFormats.E=function(timestamp){return this.dateFormat("%a",timestamp,true).charAt(0)};dateFormats.W=function(timestamp){const d=this.toParts(timestamp),firstDay=(d[7]+6)%7,thursday=d.slice(0);thursday[2]=d[2]-firstDay+3;const firstThursday=this.toParts(this.makeTime(thursday[0],0,1));if(firstThursday[7]!==4){d[1]=0;d[2]=1+(11-firstThursday[7])%7}const thursdayTS=this.makeTime(thursday[0],thursday[1],thursday[2]),firstThursdayTS=this.makeTime(firstThursday[0],firstThursday[1],firstThursday[2]);return(1+Math.floor((thursdayTS-firstThursdayTS)/6048e5)).toString()};const GridAxis={compose:compose};const Axis_GridAxis=GridAxis;"";const G=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();Axis_GridAxis.compose(G.Axis,G.Chart,G.Tick);const grid_axis_src=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();__webpack_exports__=__webpack_exports__["default"];return __webpack_exports__})()});