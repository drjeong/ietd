(function webpackUniversalModuleDefinition(root,factory){if(typeof exports==="object"&&typeof module==="object")module.exports=factory(root["_Highcharts"],root["_Highcharts"]["SeriesRegistry"],root["_Highcharts"]["Templating"],root["_Highcharts"]["AST"]);else if(typeof define==="function"&&define.amd)define("highcharts/modules/annotations-advanced",["highcharts/highcharts"],function(amd1){return factory(amd1,amd1["SeriesRegistry"],amd1["Templating"],amd1["AST"])});else if(typeof exports==="object")exports["highcharts/modules/annotations-advanced"]=factory(root["_Highcharts"],root["_Highcharts"]["SeriesRegistry"],root["_Highcharts"]["Templating"],root["_Highcharts"]["AST"]);else root["Highcharts"]=factory(root["Highcharts"],root["Highcharts"]["SeriesRegistry"],root["Highcharts"]["Templating"],root["Highcharts"]["AST"])})(typeof window==="undefined"?this:window,(__WEBPACK_EXTERNAL_MODULE__944__,__WEBPACK_EXTERNAL_MODULE__512__,__WEBPACK_EXTERNAL_MODULE__984__,__WEBPACK_EXTERNAL_MODULE__660__)=>{return(()=>{"use strict";var __webpack_modules__={660:module=>{module.exports=__WEBPACK_EXTERNAL_MODULE__660__},512:module=>{module.exports=__WEBPACK_EXTERNAL_MODULE__512__},984:module=>{module.exports=__WEBPACK_EXTERNAL_MODULE__984__},944:module=>{module.exports=__WEBPACK_EXTERNAL_MODULE__944__}};var __webpack_module_cache__={};function __webpack_require__(moduleId){var cachedModule=__webpack_module_cache__[moduleId];if(cachedModule!==undefined){return cachedModule.exports}var module=__webpack_module_cache__[moduleId]={exports:{}};__webpack_modules__[moduleId](module,module.exports,__webpack_require__);return module.exports}(()=>{__webpack_require__.n=module=>{var getter=module&&module.__esModule?()=>module["default"]:()=>module;__webpack_require__.d(getter,{a:getter});return getter}})();(()=>{__webpack_require__.d=(exports,definition)=>{for(var key in definition){if(__webpack_require__.o(definition,key)&&!__webpack_require__.o(exports,key)){Object.defineProperty(exports,key,{enumerable:true,get:definition[key]})}}}})();(()=>{__webpack_require__.o=(obj,prop)=>Object.prototype.hasOwnProperty.call(obj,prop)})();var __webpack_exports__={};__webpack_require__.d(__webpack_exports__,{default:()=>annotations_advanced_src});var highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_=__webpack_require__(944);var highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default=__webpack_require__.n(highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_);const{addEvent,erase,find,fireEvent,pick,wrap}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();function chartAddAnnotation(userOptions,redraw){const annotation=this.initAnnotation(userOptions);this.options.annotations.push(annotation.options);if(pick(redraw,true)){annotation.redraw();annotation.graphic.attr({opacity:1})}return annotation}function chartCallback(){const chart=this;chart.plotBoxClip=this.renderer.clipRect(this.plotBox);chart.controlPointsGroup=chart.renderer.g("control-points").attr({zIndex:99}).clip(chart.plotBoxClip).add();chart.options.annotations.forEach((annotationOptions,i)=>{if(!chart.annotations.some(annotation=>annotation.options===annotationOptions)){const annotation=chart.initAnnotation(annotationOptions);chart.options.annotations[i]=annotation.options}});chart.drawAnnotations();addEvent(chart,"redraw",chart.drawAnnotations);addEvent(chart,"destroy",function(){chart.plotBoxClip.destroy();chart.controlPointsGroup.destroy()});addEvent(chart,"exportData",function(event){const annotations=chart.annotations,csvColumnHeaderFormatter=(this.options.exporting&&this.options.exporting.csv||{}).columnHeaderFormatter,multiLevelHeaders=!event.dataRows[1].xValues,annotationHeader=chart.options.lang&&chart.options.lang.exportData&&chart.options.lang.exportData.annotationHeader,columnHeaderFormatter=function(index){let s;if(csvColumnHeaderFormatter){s=csvColumnHeaderFormatter(index);if(s!==false){return s}}s=annotationHeader+" "+index;if(multiLevelHeaders){return{columnTitle:s,topLevelColumnTitle:s}}return s},startRowLength=event.dataRows[0].length,annotationSeparator=chart.options.exporting&&chart.options.exporting.csv&&chart.options.exporting.csv.annotations&&chart.options.exporting.csv.annotations.itemDelimiter,joinAnnotations=chart.options.exporting&&chart.options.exporting.csv&&chart.options.exporting.csv.annotations&&chart.options.exporting.csv.annotations.join;annotations.forEach(annotation=>{if(annotation.options.labelOptions&&annotation.options.labelOptions.includeInDataExport){annotation.labels.forEach(label=>{if(label.options.text){const annotationText=label.options.text;label.points.forEach(points=>{const annotationX=points.x,xAxisIndex=points.series.xAxis?points.series.xAxis.index:-1;let wasAdded=false;if(xAxisIndex===-1){const n=event.dataRows[0].length,newRow=new Array(n);for(let i=0;i<n;++i){newRow[i]=""}newRow.push(annotationText);newRow.xValues=[];newRow.xValues[xAxisIndex]=annotationX;event.dataRows.push(newRow);wasAdded=true}if(!wasAdded){event.dataRows.forEach(row=>{if(!wasAdded&&row.xValues&&xAxisIndex!==void 0&&annotationX===row.xValues[xAxisIndex]){if(joinAnnotations&&row.length>startRowLength){row[row.length-1]+=annotationSeparator+annotationText}else{row.push(annotationText)}wasAdded=true}})}if(!wasAdded){const n=event.dataRows[0].length,newRow=new Array(n);for(let i=0;i<n;++i){newRow[i]=""}newRow[0]=annotationX;newRow.push(annotationText);newRow.xValues=[];if(xAxisIndex!==void 0){newRow.xValues[xAxisIndex]=annotationX}event.dataRows.push(newRow)}})}})}});let maxRowLen=0;event.dataRows.forEach(row=>{maxRowLen=Math.max(maxRowLen,row.length)});const newRows=maxRowLen-event.dataRows[0].length;for(let i=0;i<newRows;i++){const header=columnHeaderFormatter(i+1);if(multiLevelHeaders){event.dataRows[0].push(header.topLevelColumnTitle);event.dataRows[1].push(header.columnTitle)}else{event.dataRows[0].push(header)}}})}function chartDrawAnnotations(){this.plotBoxClip.attr(this.plotBox);this.annotations.forEach(annotation=>{annotation.redraw();annotation.graphic.animate({opacity:1},annotation.animationConfig)})}function chartRemoveAnnotation(idOrAnnotation){const annotations=this.annotations,annotation=idOrAnnotation.coll==="annotations"?idOrAnnotation:find(annotations,function(annotation){return annotation.options.id===idOrAnnotation});if(annotation){fireEvent(annotation,"remove");erase(this.options.annotations,annotation.options);erase(annotations,annotation);annotation.destroy()}}function onChartAfterInit(){const chart=this;chart.annotations=[];if(!this.options.annotations){this.options.annotations=[]}}function wrapPointerOnContainerMouseDown(proceed){if(!this.chart.hasDraggedAnnotation){proceed.apply(this,Array.prototype.slice.call(arguments,1))}}var AnnotationChart;(function(AnnotationChart){function compose(AnnotationClass,ChartClass,PointerClass){const chartProto=ChartClass.prototype;if(!chartProto.addAnnotation){const pointerProto=PointerClass.prototype;addEvent(ChartClass,"afterInit",onChartAfterInit);chartProto.addAnnotation=chartAddAnnotation;chartProto.callbacks.push(chartCallback);chartProto.collectionsWithInit.annotations=[chartAddAnnotation];chartProto.collectionsWithUpdate.push("annotations");chartProto.drawAnnotations=chartDrawAnnotations;chartProto.removeAnnotation=chartRemoveAnnotation;chartProto.initAnnotation=function chartInitAnnotation(userOptions){const Constructor=AnnotationClass.types[userOptions.type]||AnnotationClass,annotation=new Constructor(this,userOptions);this.annotations.push(annotation);return annotation};wrap(pointerProto,"onContainerMouseDown",wrapPointerOnContainerMouseDown)}}AnnotationChart.compose=compose})(AnnotationChart||(AnnotationChart={}));const Annotations_AnnotationChart=AnnotationChart;const{defined}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const AnnotationDefaults={visible:true,animation:{},crop:true,draggable:"xy",labelOptions:{align:"center",allowOverlap:false,backgroundColor:"rgba(0, 0, 0, 0.75)",borderColor:"#000000",borderRadius:3,borderWidth:1,className:"highcharts-no-tooltip",crop:false,formatter:function(){return defined(this.y)?""+this.y:"Annotation label"},includeInDataExport:true,overflow:"justify",padding:5,shadow:false,shape:"callout",style:{fontSize:"0.7em",fontWeight:"normal",color:"contrast"},useHTML:false,verticalAlign:"bottom",x:0,y:-16},shapeOptions:{stroke:"rgba(0, 0, 0, 0.75)",strokeWidth:1,fill:"rgba(0, 0, 0, 0.75)",r:0,snap:2},controlPointOptions:{events:{},style:{cursor:"pointer",fill:"#ffffff",stroke:"#000000","stroke-width":2},height:10,symbol:"circle",visible:false,width:10},events:{},zIndex:6};const Annotations_AnnotationDefaults=AnnotationDefaults;const{doc,isTouchDevice}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const{addEvent:EventEmitter_addEvent,fireEvent:EventEmitter_fireEvent,objectEach,pick:EventEmitter_pick,removeEvent}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();class EventEmitter{addEvents(){const emitter=this,addMouseDownEvent=function(element){EventEmitter_addEvent(element,isTouchDevice?"touchstart":"mousedown",e=>{emitter.onMouseDown(e)},{passive:false})};addMouseDownEvent(this.graphic.element);(emitter.labels||[]).forEach(label=>{if(label.options.useHTML&&label.graphic.text){addMouseDownEvent(label.graphic.text.element)}});objectEach(emitter.options.events,(event,type)=>{const eventHandler=function(e){if(type!=="click"||!emitter.cancelClick){event.call(emitter,emitter.chart.pointer?.normalize(e),emitter.target)}};if((emitter.nonDOMEvents||[]).indexOf(type)===-1){EventEmitter_addEvent(emitter.graphic.element,type,eventHandler,{passive:false});if(emitter.graphic.div){EventEmitter_addEvent(emitter.graphic.div,type,eventHandler,{passive:false})}}else{EventEmitter_addEvent(emitter,type,eventHandler,{passive:false})}});if(emitter.options.draggable){EventEmitter_addEvent(emitter,"drag",emitter.onDrag);if(!emitter.graphic.renderer.styledMode){const cssPointer={cursor:{x:"ew-resize",y:"ns-resize",xy:"move"}[emitter.options.draggable]};emitter.graphic.css(cssPointer);(emitter.labels||[]).forEach(label=>{if(label.options.useHTML&&label.graphic.text){label.graphic.text.css(cssPointer)}})}}if(!emitter.isUpdating){EventEmitter_fireEvent(emitter,"add")}}destroy(){this.removeDocEvents();removeEvent(this);this.hcEvents=null}mouseMoveToRadians(e,cx,cy){let prevDy=e.prevChartY-cy,prevDx=e.prevChartX-cx,dy=e.chartY-cy,dx=e.chartX-cx,temp;if(this.chart.inverted){temp=prevDx;prevDx=prevDy;prevDy=temp;temp=dx;dx=dy;dy=temp}return Math.atan2(dy,dx)-Math.atan2(prevDy,prevDx)}mouseMoveToScale(e,cx,cy){const prevDx=e.prevChartX-cx,prevDy=e.prevChartY-cy,dx=e.chartX-cx,dy=e.chartY-cy;let sx=(dx||1)/(prevDx||1),sy=(dy||1)/(prevDy||1);if(this.chart.inverted){const temp=sy;sy=sx;sx=temp}return{x:sx,y:sy}}mouseMoveToTranslation(e){let dx=e.chartX-e.prevChartX,dy=e.chartY-e.prevChartY,temp;if(this.chart.inverted){temp=dy;dy=dx;dx=temp}return{x:dx,y:dy}}onDrag(e){if(this.chart.isInsidePlot(e.chartX-this.chart.plotLeft,e.chartY-this.chart.plotTop,{visiblePlotOnly:true})){const translation=this.mouseMoveToTranslation(e);if(this.options.draggable==="x"){translation.y=0}if(this.options.draggable==="y"){translation.x=0}const emitter=this;if(emitter.points.length){emitter.translate(translation.x,translation.y)}else{emitter.shapes.forEach(shape=>shape.translate(translation.x,translation.y));emitter.labels.forEach(label=>label.translate(translation.x,translation.y))}this.redraw(false)}}onMouseDown(e){if(e.preventDefault){e.preventDefault()}if(e.button===2){return}const emitter=this,pointer=emitter.chart.pointer,firesTouchEvents=e?.sourceCapabilities?.firesTouchEvents||false;e=pointer?.normalize(e)||e;let prevChartX=e.chartX,prevChartY=e.chartY;emitter.cancelClick=false;emitter.chart.hasDraggedAnnotation=true;emitter.removeDrag=EventEmitter_addEvent(doc,isTouchDevice||firesTouchEvents?"touchmove":"mousemove",function(e){emitter.hasDragged=true;e=pointer?.normalize(e)||e;e.prevChartX=prevChartX;e.prevChartY=prevChartY;EventEmitter_fireEvent(emitter,"drag",e);prevChartX=e.chartX;prevChartY=e.chartY},isTouchDevice||firesTouchEvents?{passive:false}:void 0);emitter.removeMouseUp=EventEmitter_addEvent(doc,isTouchDevice||firesTouchEvents?"touchend":"mouseup",function(){const annotation=EventEmitter_pick(emitter.target&&emitter.target.annotation,emitter.target);if(annotation){annotation.cancelClick=emitter.hasDragged}emitter.cancelClick=emitter.hasDragged;emitter.chart.hasDraggedAnnotation=false;if(emitter.hasDragged){EventEmitter_fireEvent(EventEmitter_pick(annotation,emitter),"afterUpdate")}emitter.hasDragged=false;emitter.onMouseUp()},isTouchDevice||firesTouchEvents?{passive:false}:void 0)}onMouseUp(){this.removeDocEvents()}removeDocEvents(){if(this.removeDrag){this.removeDrag=this.removeDrag()}if(this.removeMouseUp){this.removeMouseUp=this.removeMouseUp()}}}const Annotations_EventEmitter=EventEmitter;const{merge,pick:ControlPoint_pick}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();class ControlPoint extends Annotations_EventEmitter{constructor(chart,target,options,index){super();this.nonDOMEvents=["drag"];this.chart=chart;this.target=target;this.options=options;this.index=ControlPoint_pick(options.index,index)}destroy(){super.destroy();if(this.graphic){this.graphic=this.graphic.destroy()}this.chart=null;this.target=null;this.options=null}redraw(animation){this.graphic[animation?"animate":"attr"](this.options.positioner.call(this,this.target))}render(){const chart=this.chart,options=this.options;this.graphic=chart.renderer.symbol(options.symbol,0,0,options.width,options.height).add(chart.controlPointsGroup).css(options.style);this.setVisibility(options.visible);this.addEvents()}setVisibility(visible){this.graphic[visible?"show":"hide"]();this.options.visible=visible}update(userOptions){const chart=this.chart,target=this.target,index=this.index,options=merge(true,this.options,userOptions);this.destroy();this.constructor(chart,target,options,index);this.render(chart.controlPointsGroup);this.redraw()}}const Annotations_ControlPoint=ControlPoint;"";var highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_=__webpack_require__(512);var highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default=__webpack_require__.n(highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_);const{series:{prototype:seriesProto}}=highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default();const{defined:MockPoint_defined,fireEvent:MockPoint_fireEvent}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();class MockPoint{static fromPoint(point){return new MockPoint(point.series.chart,null,{x:point.x,y:point.y,xAxis:point.series.xAxis,yAxis:point.series.yAxis})}static pointToPixels(point,paneCoordinates){const series=point.series,chart=series.chart;let x=point.plotX||0,y=point.plotY||0,plotBox;if(chart.inverted){if(point.mock){x=point.plotY;y=point.plotX}else{x=chart.plotWidth-(point.plotY||0);y=chart.plotHeight-(point.plotX||0)}}if(series&&!paneCoordinates){plotBox=series.getPlotBox();x+=plotBox.translateX;y+=plotBox.translateY}return{x:x,y:y}}static pointToOptions(point){return{x:point.x,y:point.y,xAxis:point.series.xAxis,yAxis:point.series.yAxis}}constructor(chart,target,options){this.mock=true;this.point=this;this.series={visible:true,chart:chart,getPlotBox:seriesProto.getPlotBox};this.target=target||null;this.options=options;this.applyOptions(this.getOptions())}applyOptions(options){this.command=options.command;this.setAxis(options,"x");this.setAxis(options,"y");this.refresh()}getOptions(){return this.hasDynamicOptions()?this.options(this.target):this.options}hasDynamicOptions(){return typeof this.options==="function"}isInsidePlot(){const plotX=this.plotX,plotY=this.plotY,xAxis=this.series.xAxis,yAxis=this.series.yAxis,e={x:plotX,y:plotY,isInsidePlot:true,options:{}};if(xAxis){e.isInsidePlot=MockPoint_defined(plotX)&&plotX>=0&&plotX<=xAxis.len}if(yAxis){e.isInsidePlot=e.isInsidePlot&&MockPoint_defined(plotY)&&plotY>=0&&plotY<=yAxis.len}MockPoint_fireEvent(this.series.chart,"afterIsInsidePlot",e);return e.isInsidePlot}refresh(){const series=this.series,xAxis=series.xAxis,yAxis=series.yAxis,options=this.getOptions();if(xAxis){this.x=options.x;this.plotX=xAxis.toPixels(options.x,true)}else{this.x=void 0;this.plotX=options.x}if(yAxis){this.y=options.y;this.plotY=yAxis.toPixels(options.y,true)}else{this.y=null;this.plotY=options.y}this.isInside=this.isInsidePlot()}refreshOptions(){const series=this.series,xAxis=series.xAxis,yAxis=series.yAxis;this.x=this.options.x=xAxis?this.options.x=xAxis.toValue(this.plotX,true):this.plotX;this.y=this.options.y=yAxis?yAxis.toValue(this.plotY,true):this.plotY}rotate(cx,cy,radians){if(!this.hasDynamicOptions()){const cos=Math.cos(radians),sin=Math.sin(radians),x=this.plotX-cx,y=this.plotY-cy,tx=x*cos-y*sin,ty=x*sin+y*cos;this.plotX=tx+cx;this.plotY=ty+cy;this.refreshOptions()}}scale(cx,cy,sx,sy){if(!this.hasDynamicOptions()){const x=this.plotX*sx,y=this.plotY*sy,tx=(1-sx)*cx,ty=(1-sy)*cy;this.plotX=tx+x;this.plotY=ty+y;this.refreshOptions()}}setAxis(options,xOrY){const axisName=xOrY+"Axis",axisOptions=options[axisName],chart=this.series.chart;this.series[axisName]=typeof axisOptions==="object"?axisOptions:MockPoint_defined(axisOptions)?chart[axisName][axisOptions]||chart.get(axisOptions):null}toAnchor(){const anchor=[this.plotX,this.plotY,0,0];if(this.series.chart.inverted){anchor[0]=this.plotY;anchor[1]=this.plotX}return anchor}translate(_cx,_cy,dx,dy){if(!this.hasDynamicOptions()){this.plotX+=dx;this.plotY+=dy;this.refreshOptions()}}}const Annotations_MockPoint=MockPoint;"";var ControlTarget;(function(ControlTarget){function addControlPoints(){const controlPoints=this.controlPoints,controlPointsOptions=this.options.controlPoints||[];controlPointsOptions.forEach((controlPointOptions,i)=>{const options=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().merge(this.options.controlPointOptions,controlPointOptions);if(!options.index){options.index=i}controlPointsOptions[i]=options;controlPoints.push(new Annotations_ControlPoint(this.chart,this,options))})}function anchor(point){const plotBox=point.series.getPlotBox(),chart=point.series.chart,box=point.mock?point.toAnchor():chart.tooltip&&chart.tooltip.getAnchor.call({chart:point.series.chart},point)||[0,0,0,0],anchor={x:box[0]+(this.options.x||0),y:box[1]+(this.options.y||0),height:box[2]||0,width:box[3]||0};return{relativePosition:anchor,absolutePosition:highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().merge(anchor,{x:anchor.x+(point.mock?plotBox.translateX:chart.plotLeft),y:anchor.y+(point.mock?plotBox.translateY:chart.plotTop)})}}function compose(ControlTargetClass){const controlProto=ControlTargetClass.prototype;if(!controlProto.addControlPoints){highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().merge(true,controlProto,{addControlPoints:addControlPoints,anchor:anchor,destroyControlTarget:destroyControlTarget,getPointsOptions:getPointsOptions,linkPoints:linkPoints,point:point,redrawControlPoints:redrawControlPoints,renderControlPoints:renderControlPoints,transform:transform,transformPoint:transformPoint,translate:translate,translatePoint:translatePoint})}}ControlTarget.compose=compose;function destroyControlTarget(){this.controlPoints.forEach(controlPoint=>controlPoint.destroy());this.chart=null;this.controlPoints=null;this.points=null;this.options=null;if(this.annotation){this.annotation=null}}function getPointsOptions(){const options=this.options;return options.points||options.point&&highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().splat(options.point)}function linkPoints(){const pointsOptions=this.getPointsOptions(),points=this.points,len=pointsOptions&&pointsOptions.length||0;let i,point;for(i=0;i<len;i++){point=this.point(pointsOptions[i],points[i]);if(!point){points.length=0;return}if(point.mock){point.refresh()}points[i]=point}return points}function point(pointOptions,point){if(pointOptions&&pointOptions.series){return pointOptions}if(!point||point.series===null){if(highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().isObject(pointOptions)){point=new Annotations_MockPoint(this.chart,this,pointOptions)}else if(highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().isString(pointOptions)){point=this.chart.get(pointOptions)||null}else if(typeof pointOptions==="function"){const pointConfig=pointOptions.call(point,this);point=pointConfig.series?pointConfig:new Annotations_MockPoint(this.chart,this,pointOptions)}}return point}function redrawControlPoints(animation){this.controlPoints.forEach(controlPoint=>controlPoint.redraw(animation))}function renderControlPoints(){this.controlPoints.forEach(controlPoint=>controlPoint.render())}function transform(transformation,cx,cy,p1,p2){if(this.chart.inverted){const temp=cx;cx=cy;cy=temp}this.points.forEach((_point,i)=>this.transformPoint(transformation,cx,cy,p1,p2,i),this)}function transformPoint(transformation,cx,cy,p1,p2,i){let point=this.points[i];if(!point.mock){point=this.points[i]=Annotations_MockPoint.fromPoint(point)}point[transformation](cx,cy,p1,p2)}function translate(dx,dy){this.transform("translate",null,null,dx,dy)}function translatePoint(dx,dy,i){this.transformPoint("translate",null,null,dx,dy,i)}})(ControlTarget||(ControlTarget={}));const Annotations_ControlTarget=ControlTarget;const{merge:Controllable_merge}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();class Controllable{constructor(annotation,options,index,itemType){this.annotation=annotation;this.chart=annotation.chart;this.collection=itemType==="label"?"labels":"shapes";this.controlPoints=[];this.options=options;this.points=[];this.index=index;this.itemType=itemType;this.init(annotation,options,index)}attr(..._args){this.graphic.attr.apply(this.graphic,arguments)}attrsFromOptions(options){const map=this.constructor.attrsMap,attrs={},styledMode=this.chart.styledMode;let key,mappedKey;for(key in options){mappedKey=map[key];if(typeof map[key]!=="undefined"&&(!styledMode||["fill","stroke","stroke-width"].indexOf(mappedKey)===-1)){attrs[mappedKey]=options[key]}}return attrs}destroy(){if(this.graphic){this.graphic=this.graphic.destroy()}if(this.tracker){this.tracker=this.tracker.destroy()}this.destroyControlTarget()}init(annotation,options,index){this.annotation=annotation;this.chart=annotation.chart;this.options=options;this.points=[];this.controlPoints=[];this.index=index;this.linkPoints();this.addControlPoints()}redraw(animation){this.redrawControlPoints(animation)}render(_parentGroup){if(this.options.className&&this.graphic){this.graphic.addClass(this.options.className)}this.renderControlPoints()}rotate(cx,cy,radians){this.transform("rotate",cx,cy,radians)}scale(cx,cy,sx,sy){this.transform("scale",cx,cy,sx,sy)}setControlPointsVisibility(visible){this.controlPoints.forEach(controlPoint=>{controlPoint.setVisibility(visible)})}shouldBeDrawn(){return!!this.points.length}translateShape(dx,dy,translateSecondPoint){const chart=this.annotation.chart,shapeOptions=this.annotation.userOptions,annotationIndex=chart.annotations.indexOf(this.annotation),chartOptions=chart.options.annotations[annotationIndex];this.translatePoint(dx,dy,0);if(translateSecondPoint){this.translatePoint(dx,dy,1)}chartOptions[this.collection][this.index].point=this.options.point;shapeOptions[this.collection][this.index].point=this.options.point}update(newOptions){const annotation=this.annotation,options=Controllable_merge(true,this.options,newOptions),parentGroup=this.graphic.parentGroup,Constructor=this.constructor;this.destroy();const newControllable=new Constructor(annotation,options,this.index,this.itemType);Controllable_merge(true,this,newControllable);this.render(parentGroup);this.redraw()}}Annotations_ControlTarget.compose(Controllable);const Controllables_Controllable=Controllable;"";const defaultMarkers={arrow:{tagName:"marker",attributes:{id:"arrow",refY:5,refX:9,markerWidth:10,markerHeight:10},children:[{tagName:"path",attributes:{d:"M 0 0 L 10 5 L 0 10 Z","stroke-width":0}}]},"reverse-arrow":{tagName:"marker",attributes:{id:"reverse-arrow",refY:5,refX:1,markerWidth:10,markerHeight:10},children:[{tagName:"path",attributes:{d:"M 0 5 L 10 0 L 10 10 Z","stroke-width":0}}]}};const ControllableDefaults={defaultMarkers:defaultMarkers};const Controllables_ControllableDefaults=ControllableDefaults;const{defaultMarkers:ControllablePath_defaultMarkers}=Controllables_ControllableDefaults;const{addEvent:ControllablePath_addEvent,defined:ControllablePath_defined,extend,merge:ControllablePath_merge,uniqueKey}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const markerEndSetter=createMarkerSetter("marker-end");const markerStartSetter=createMarkerSetter("marker-start");const TRACKER_FILL="rgba(192,192,192,"+(highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().svg?1e-4:.002)+")";function createMarkerSetter(markerType){return function(value){this.attr(markerType,"url(#"+value+")")}}function onChartAfterGetContainer(){this.options.defs=ControllablePath_merge(ControllablePath_defaultMarkers,this.options.defs||{})}function svgRendererAddMarker(id,markerOptions){const options={attributes:{id:id}};const attrs={stroke:markerOptions.color||"none",fill:markerOptions.color||"rgba(0, 0, 0, 0.75)"};options.children=markerOptions.children&&markerOptions.children.map(function(child){return ControllablePath_merge(attrs,child)});const ast=ControllablePath_merge(true,{attributes:{markerWidth:20,markerHeight:20,refX:0,refY:0,orient:"auto"}},markerOptions,options);const marker=this.definition(ast);marker.id=id;return marker}class ControllablePath extends Controllables_Controllable{static compose(ChartClass,SVGRendererClass){const svgRendererProto=SVGRendererClass.prototype;if(!svgRendererProto.addMarker){ControllablePath_addEvent(ChartClass,"afterGetContainer",onChartAfterGetContainer);svgRendererProto.addMarker=svgRendererAddMarker}}constructor(annotation,options,index){super(annotation,options,index,"shape");this.type="path"}toD(){const dOption=this.options.d;if(dOption){return typeof dOption==="function"?dOption.call(this):dOption}const points=this.points,len=points.length,d=[];let showPath=len,point=points[0],position=showPath&&this.anchor(point).absolutePosition,pointIndex=0,command;if(position){d.push(["M",position.x,position.y]);while(++pointIndex<len&&showPath){point=points[pointIndex];command=point.command||"L";position=this.anchor(point).absolutePosition;if(command==="M"){d.push([command,position.x,position.y])}else if(command==="L"){d.push([command,position.x,position.y])}else if(command==="Z"){d.push([command])}showPath=point.series.visible}}return showPath&&this.graphic?this.chart.renderer.crispLine(d,this.graphic.strokeWidth()):null}shouldBeDrawn(){return super.shouldBeDrawn()||!!this.options.d}render(parent){const options=this.options,attrs=this.attrsFromOptions(options);this.graphic=this.annotation.chart.renderer.path([["M",0,0]]).attr(attrs).add(parent);this.tracker=this.annotation.chart.renderer.path([["M",0,0]]).addClass("highcharts-tracker-line").attr({zIndex:2}).add(parent);if(!this.annotation.chart.styledMode){this.tracker.attr({"stroke-linejoin":"round",stroke:TRACKER_FILL,fill:TRACKER_FILL,"stroke-width":this.graphic.strokeWidth()+options.snap*2})}super.render();extend(this.graphic,{markerStartSetter:markerStartSetter,markerEndSetter:markerEndSetter});this.setMarkers(this)}redraw(animation){if(this.graphic){const d=this.toD(),action=animation?"animate":"attr";if(d){this.graphic[action]({d:d});this.tracker[action]({d:d})}else{this.graphic.attr({d:"M 0 "+-9e9});this.tracker.attr({d:"M 0 "+-9e9})}this.graphic.placed=this.tracker.placed=!!d}super.redraw(animation)}setMarkers(item){const itemOptions=item.options,chart=item.chart,defs=chart.options.defs,fill=itemOptions.fill,color=ControllablePath_defined(fill)&&fill!=="none"?fill:itemOptions.stroke;const setMarker=function(markerType){const markerId=itemOptions[markerType];let def,predefinedMarker,key,marker;if(markerId){for(key in defs){def=defs[key];if((markerId===(def.attributes&&def.attributes.id)||markerId===def.id)&&def.tagName==="marker"){predefinedMarker=def;break}}if(predefinedMarker){marker=item[markerType]=chart.renderer.addMarker((itemOptions.id||uniqueKey())+"-"+markerId,ControllablePath_merge(predefinedMarker,{color:color}));item.attr(markerType,marker.getAttribute("id"))}}};["markerStart","markerEnd"].forEach(setMarker)}}ControllablePath.attrsMap={dashStyle:"dashstyle",strokeWidth:"stroke-width",stroke:"stroke",fill:"fill",zIndex:"zIndex"};const Controllables_ControllablePath=ControllablePath;const{merge:ControllableRect_merge}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();class ControllableRect extends Controllables_Controllable{constructor(annotation,options,index){super(annotation,options,index,"shape");this.type="rect";this.translate=super.translateShape}render(parent){const attrs=this.attrsFromOptions(this.options);this.graphic=this.annotation.chart.renderer.rect(0,-9e9,0,0).attr(attrs).add(parent);super.render()}redraw(animation){if(this.graphic){const position=this.anchor(this.points[0]).absolutePosition;if(position){this.graphic[animation?"animate":"attr"]({x:position.x,y:position.y,width:this.options.width,height:this.options.height})}else{this.attr({x:0,y:-9e9})}this.graphic.placed=Boolean(position)}super.redraw(animation)}}ControllableRect.attrsMap=ControllableRect_merge(Controllables_ControllablePath.attrsMap,{width:"width",height:"height"});const Controllables_ControllableRect=ControllableRect;const{merge:ControllableCircle_merge}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();class ControllableCircle extends Controllables_Controllable{constructor(annotation,options,index){super(annotation,options,index,"shape");this.type="circle";this.translate=super.translateShape}redraw(animation){if(this.graphic){const position=this.anchor(this.points[0]).absolutePosition;if(position){this.graphic[animation?"animate":"attr"]({x:position.x,y:position.y,r:this.options.r})}else{this.graphic.attr({x:0,y:-9e9})}this.graphic.placed=!!position}super.redraw.call(this,animation)}render(parent){const attrs=this.attrsFromOptions(this.options);this.graphic=this.annotation.chart.renderer.circle(0,-9e9,0).attr(attrs).add(parent);super.render()}setRadius(r){this.options.r=r}}ControllableCircle.attrsMap=ControllableCircle_merge(Controllables_ControllablePath.attrsMap,{r:"r"});const Controllables_ControllableCircle=ControllableCircle;const{merge:ControllableEllipse_merge,defined:ControllableEllipse_defined}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();class ControllableEllipse extends Controllables_Controllable{constructor(annotation,options,index){super(annotation,options,index,"shape");this.type="ellipse"}init(annotation,options,index){if(ControllableEllipse_defined(options.yAxis)){options.points.forEach(point=>{point.yAxis=options.yAxis})}if(ControllableEllipse_defined(options.xAxis)){options.points.forEach(point=>{point.xAxis=options.xAxis})}super.init(annotation,options,index)}render(parent){this.graphic=this.annotation.chart.renderer.createElement("ellipse").attr(this.attrsFromOptions(this.options)).add(parent);super.render()}translate(dx,dy){super.translateShape(dx,dy,true)}getDistanceFromLine(point1,point2,x0,y0){return Math.abs((point2.y-point1.y)*x0-(point2.x-point1.x)*y0+point2.x*point1.y-point2.y*point1.x)/Math.sqrt((point2.y-point1.y)*(point2.y-point1.y)+(point2.x-point1.x)*(point2.x-point1.x))}getAttrs(position,position2){const x1=position.x,y1=position.y,x2=position2.x,y2=position2.y,cx=(x1+x2)/2,cy=(y1+y2)/2,rx=Math.sqrt((x1-x2)*(x1-x2)/4+(y1-y2)*(y1-y2)/4),tan=(y2-y1)/(x2-x1);let angle=Math.atan(tan)*180/Math.PI;if(cx<x1){angle+=180}const ry=this.getRY();return{cx:cx,cy:cy,rx:rx,ry:ry,angle:angle}}getRY(){const yAxis=this.getYAxis();return ControllableEllipse_defined(yAxis)?Math.abs(yAxis.toPixels(this.options.ry)-yAxis.toPixels(0)):this.options.ry}getYAxis(){const yAxisIndex=this.options.yAxis;return this.chart.yAxis[yAxisIndex]}getAbsolutePosition(point){return this.anchor(point).absolutePosition}redraw(animation){if(this.graphic){const position=this.getAbsolutePosition(this.points[0]),position2=this.getAbsolutePosition(this.points[1]),attrs=this.getAttrs(position,position2);if(position){this.graphic[animation?"animate":"attr"]({cx:attrs.cx,cy:attrs.cy,rx:attrs.rx,ry:attrs.ry,rotation:attrs.angle,rotationOriginX:attrs.cx,rotationOriginY:attrs.cy})}else{this.graphic.attr({x:0,y:-9e9})}this.graphic.placed=Boolean(position)}super.redraw(animation)}setYRadius(ry){const shapes=this.annotation.userOptions.shapes;this.options.ry=ry;if(shapes&&shapes[0]){shapes[0].ry=ry;shapes[0].ry=ry}}}ControllableEllipse.attrsMap=ControllableEllipse_merge(Controllables_ControllablePath.attrsMap,{ry:"ry"});const Controllables_ControllableEllipse=ControllableEllipse;var highcharts_Templating_commonjs_highcharts_Templating_commonjs2_highcharts_Templating_root_Highcharts_Templating_=__webpack_require__(984);var highcharts_Templating_commonjs_highcharts_Templating_commonjs2_highcharts_Templating_root_Highcharts_Templating_default=__webpack_require__.n(highcharts_Templating_commonjs_highcharts_Templating_commonjs2_highcharts_Templating_root_Highcharts_Templating_);const{format}=highcharts_Templating_commonjs_highcharts_Templating_commonjs2_highcharts_Templating_root_Highcharts_Templating_default();const{extend:ControllableLabel_extend,getAlignFactor,isNumber,pick:ControllableLabel_pick}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();function symbolConnector(x,y,w,h,options){const anchorX=options&&options.anchorX,anchorY=options&&options.anchorY;let path,yOffset,lateral=w/2;if(isNumber(anchorX)&&isNumber(anchorY)){path=[["M",anchorX,anchorY]];yOffset=y-anchorY;if(yOffset<0){yOffset=-h-yOffset}if(yOffset<w){lateral=anchorX<x+w/2?yOffset:w-yOffset}if(anchorY>y+h){path.push(["L",x+lateral,y+h])}else if(anchorY<y){path.push(["L",x+lateral,y])}else if(anchorX<x){path.push(["L",x,y+h/2])}else if(anchorX>x+w){path.push(["L",x+w,y+h/2])}}return path||[]}class ControllableLabel extends Controllables_Controllable{static alignedPosition(alignOptions,box){return{x:Math.round((box.x||0)+(alignOptions.x||0)+(box.width-(alignOptions.width||0))*getAlignFactor(alignOptions.align)),y:Math.round((box.y||0)+(alignOptions.y||0)+(box.height-(alignOptions.height||0))*getAlignFactor(alignOptions.verticalAlign))}}static compose(SVGRendererClass){const symbols=SVGRendererClass.prototype.symbols;symbols.connector=symbolConnector}static justifiedOptions(chart,label,alignOptions,alignAttr){const align=alignOptions.align,verticalAlign=alignOptions.verticalAlign,padding=label.box?0:label.padding||0,bBox=label.getBBox(),options={align:align,verticalAlign:verticalAlign,x:alignOptions.x,y:alignOptions.y,width:label.width,height:label.height},x=(alignAttr.x||0)-chart.plotLeft,y=(alignAttr.y||0)-chart.plotTop;let off;off=x+padding;if(off<0){if(align==="right"){options.align="left"}else{options.x=(options.x||0)-off}}off=x+bBox.width-padding;if(off>chart.plotWidth){if(align==="left"){options.align="right"}else{options.x=(options.x||0)+chart.plotWidth-off}}off=y+padding;if(off<0){if(verticalAlign==="bottom"){options.verticalAlign="top"}else{options.y=(options.y||0)-off}}off=y+bBox.height-padding;if(off>chart.plotHeight){if(verticalAlign==="top"){options.verticalAlign="bottom"}else{options.y=(options.y||0)+chart.plotHeight-off}}return options}constructor(annotation,options,index){super(annotation,options,index,"label")}translatePoint(dx,dy){super.translatePoint(dx,dy,0)}translate(dx,dy){const chart=this.annotation.chart,labelOptions=this.annotation.userOptions,annotationIndex=chart.annotations.indexOf(this.annotation),chartAnnotations=chart.options.annotations,chartOptions=chartAnnotations[annotationIndex];if(chart.inverted){const temp=dx;dx=dy;dy=temp}this.options.x+=dx;this.options.y+=dy;chartOptions[this.collection][this.index].x=this.options.x;chartOptions[this.collection][this.index].y=this.options.y;labelOptions[this.collection][this.index].x=this.options.x;labelOptions[this.collection][this.index].y=this.options.y}render(parent){const options=this.options,attrs=this.attrsFromOptions(options),style=options.style;this.graphic=this.annotation.chart.renderer.label("",0,-9999,options.shape,null,null,options.useHTML,null,"annotation-label").attr(attrs).add(parent);if(!this.annotation.chart.styledMode){if(style.color==="contrast"){style.color=this.annotation.chart.renderer.getContrast(ControllableLabel.shapesWithoutBackground.indexOf(options.shape)>-1?"#FFFFFF":options.backgroundColor)}this.graphic.css(options.style).shadow(options.shadow)}this.graphic.labelrank=options.labelrank;super.render()}redraw(animation){const options=this.options,text=this.text||options.format||options.text,label=this.graphic,point=this.points[0];if(!label){this.redraw(animation);return}label.attr({text:text?format(String(text),point,this.annotation.chart):options.formatter.call(point,this)});const anchor=this.anchor(point);const attrs=this.position(anchor);if(attrs){label.alignAttr=attrs;attrs.anchorX=anchor.absolutePosition.x;attrs.anchorY=anchor.absolutePosition.y;label[animation?"animate":"attr"](attrs)}else{label.attr({x:0,y:-9999})}label.placed=!!attrs;super.redraw(animation)}anchor(_point){const anchor=super.anchor.apply(this,arguments),x=this.options.x||0,y=this.options.y||0;anchor.absolutePosition.x-=x;anchor.absolutePosition.y-=y;anchor.relativePosition.x-=x;anchor.relativePosition.y-=y;return anchor}position(anchor){const item=this.graphic,chart=this.annotation.chart,tooltip=chart.tooltip,point=this.points[0],itemOptions=this.options,anchorAbsolutePosition=anchor.absolutePosition,anchorRelativePosition=anchor.relativePosition;let itemPosition,alignTo,itemPosRelativeX,itemPosRelativeY,showItem=point.series.visible&&Annotations_MockPoint.prototype.isInsidePlot.call(point);if(item&&showItem){const{width=0,height=0}=item;if(itemOptions.distance&&tooltip){itemPosition=tooltip.getPosition.call({chart:chart,distance:ControllableLabel_pick(itemOptions.distance,16),getPlayingField:tooltip.getPlayingField,pointer:tooltip.pointer},width,height,{plotX:anchorRelativePosition.x,plotY:anchorRelativePosition.y,negative:point.negative,ttBelow:point.ttBelow,h:anchorRelativePosition.height||anchorRelativePosition.width})}else if(itemOptions.positioner){itemPosition=itemOptions.positioner.call(this)}else{alignTo={x:anchorAbsolutePosition.x,y:anchorAbsolutePosition.y,width:0,height:0};itemPosition=ControllableLabel.alignedPosition(ControllableLabel_extend(itemOptions,{width:width,height:height}),alignTo);if(this.options.overflow==="justify"){itemPosition=ControllableLabel.alignedPosition(ControllableLabel.justifiedOptions(chart,item,itemOptions,itemPosition),alignTo)}}if(itemOptions.crop){itemPosRelativeX=itemPosition.x-chart.plotLeft;itemPosRelativeY=itemPosition.y-chart.plotTop;showItem=chart.isInsidePlot(itemPosRelativeX,itemPosRelativeY)&&chart.isInsidePlot(itemPosRelativeX+width,itemPosRelativeY+height)}}return showItem?itemPosition:null}}ControllableLabel.attrsMap={backgroundColor:"fill",borderColor:"stroke",borderWidth:"stroke-width",zIndex:"zIndex",borderRadius:"r",padding:"padding"};ControllableLabel.shapesWithoutBackground=["connector"];const Controllables_ControllableLabel=ControllableLabel;class ControllableImage extends Controllables_Controllable{constructor(annotation,options,index){super(annotation,options,index,"shape");this.type="image";this.translate=super.translateShape}render(parent){const attrs=this.attrsFromOptions(this.options),options=this.options;this.graphic=this.annotation.chart.renderer.image(options.src,0,-9e9,options.width,options.height).attr(attrs).add(parent);this.graphic.width=options.width;this.graphic.height=options.height;super.render()}redraw(animation){if(this.graphic){const anchor=this.anchor(this.points[0]),position=Controllables_ControllableLabel.prototype.position.call(this,anchor);if(position){this.graphic[animation?"animate":"attr"]({x:position.x,y:position.y})}else{this.graphic.attr({x:0,y:-9e9})}this.graphic.placed=Boolean(position)}super.redraw(animation)}}ControllableImage.attrsMap={width:"width",height:"height",zIndex:"zIndex"};const Controllables_ControllableImage=ControllableImage;var highcharts_AST_commonjs_highcharts_AST_commonjs2_highcharts_AST_root_Highcharts_AST_=__webpack_require__(660);var highcharts_AST_commonjs_highcharts_AST_commonjs2_highcharts_AST_root_Highcharts_AST_default=__webpack_require__.n(highcharts_AST_commonjs_highcharts_AST_commonjs2_highcharts_AST_root_Highcharts_AST_);const{addEvent:BaseForm_addEvent,createElement}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();class BaseForm{constructor(parentDiv,iconsURL){this.iconsURL=iconsURL;this.container=this.createPopupContainer(parentDiv);this.closeButton=this.addCloseButton()}createPopupContainer(parentDiv,className="highcharts-popup highcharts-no-tooltip"){return createElement("div",{className:className},void 0,parentDiv)}addCloseButton(className="highcharts-popup-close"){const popup=this,iconsURL=this.iconsURL;const closeButton=createElement("button",{className:className},void 0,this.container);closeButton.style["background-image"]="url("+(iconsURL.match(/png|svg|jpeg|jpg|gif/gi)?iconsURL:iconsURL+"close.svg")+")";["click","touchstart"].forEach(eventName=>{BaseForm_addEvent(closeButton,eventName,popup.closeButtonEvents.bind(popup))});BaseForm_addEvent(document,"keydown",function(event){if(event.code==="Escape"){popup.closeButtonEvents()}});return closeButton}closeButtonEvents(){this.closePopup()}showPopup(toolbarClass="highcharts-annotation-toolbar"){const popupDiv=this.container,popupCloseButton=this.closeButton;this.type=void 0;popupDiv.innerHTML=highcharts_AST_commonjs_highcharts_AST_commonjs2_highcharts_AST_root_Highcharts_AST_default().emptyHTML;if(popupDiv.className.indexOf(toolbarClass)>=0){popupDiv.classList.remove(toolbarClass);popupDiv.removeAttribute("style")}popupDiv.appendChild(popupCloseButton);popupDiv.style.display="block";popupDiv.style.height=""}closePopup(){this.container.style.display="none"}}const Shared_BaseForm=BaseForm;const{doc:PopupAnnotations_doc,isFirefox}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const{createElement:PopupAnnotations_createElement,isArray,isObject,objectEach:PopupAnnotations_objectEach,pick:PopupAnnotations_pick,stableSort}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();function addForm(chart,options,callback,isInit){if(!chart){return}const popupDiv=this.container,lang=this.lang;let lhsCol=PopupAnnotations_createElement("h2",{className:"highcharts-popup-main-title"},void 0,popupDiv);lhsCol.appendChild(PopupAnnotations_doc.createTextNode(lang[options.langKey]||options.langKey||""));lhsCol=PopupAnnotations_createElement("div",{className:"highcharts-popup-lhs-col highcharts-popup-lhs-full"},void 0,popupDiv);const bottomRow=PopupAnnotations_createElement("div",{className:"highcharts-popup-bottom-row"},void 0,popupDiv);addFormFields.call(this,lhsCol,chart,"",options,[],true);this.addButton(bottomRow,isInit?lang.addButton||"Add":lang.saveButton||"Save",isInit?"add":"save",popupDiv,callback)}function addToolbar(chart,options,callback){const lang=this.lang,popupDiv=this.container,showForm=this.showForm,toolbarClass="highcharts-annotation-toolbar";if(popupDiv.className.indexOf(toolbarClass)===-1){popupDiv.className+=" "+toolbarClass+" highcharts-no-mousewheel"}if(chart){popupDiv.style.top=chart.plotTop+10+"px"}const label=PopupAnnotations_createElement("p",{className:"highcharts-annotation-label"},void 0,popupDiv);label.setAttribute("aria-label","Annotation type");label.appendChild(PopupAnnotations_doc.createTextNode(PopupAnnotations_pick(lang[options.langKey]||options.langKey,options.shapes&&options.shapes[0].type,"")));let button=this.addButton(popupDiv,lang.editButton||"Edit","edit",popupDiv,()=>{showForm.call(this,"annotation-edit",chart,options,callback)});button.className+=" highcharts-annotation-edit-button";button.style["background-image"]="url("+this.iconsURL+"edit.svg)";button=this.addButton(popupDiv,lang.removeButton||"Remove","remove",popupDiv,callback);button.className+=" highcharts-annotation-remove-button";button.style["background-image"]="url("+this.iconsURL+"destroy.svg)"}function addFormFields(parentDiv,chart,parentNode,options,storage,isRoot){if(!chart){return}const addInput=this.addInput,lang=this.lang;let parentFullName,titleName;PopupAnnotations_objectEach(options,(value,option)=>{parentFullName=parentNode!==""?parentNode+"."+option:option;if(isObject(value)){if(!isArray(value)||isArray(value)&&isObject(value[0])){titleName=lang[option]||option;if(!titleName.match(/\d/g)){storage.push([true,titleName,parentDiv])}addFormFields.call(this,parentDiv,chart,parentFullName,value,storage,false)}else{storage.push([this,parentFullName,"annotation",parentDiv,value])}}});if(isRoot){stableSort(storage,a=>a[1].match(/format/g)?-1:1);if(isFirefox){storage.reverse()}storage.forEach(genInput=>{if(genInput[0]===true){PopupAnnotations_createElement("span",{className:"highcharts-annotation-title"},void 0,genInput[2]).appendChild(PopupAnnotations_doc.createTextNode(genInput[1]))}else{genInput[4]={value:genInput[4][0],type:genInput[4][1]};addInput.apply(genInput[0],genInput.splice(1))}})}}const PopupAnnotations={addForm:addForm,addToolbar:addToolbar};const Popup_PopupAnnotations=PopupAnnotations;const{doc:PopupIndicators_doc}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const{seriesTypes}=highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default();const{addEvent:PopupIndicators_addEvent,createElement:PopupIndicators_createElement,defined:PopupIndicators_defined,isArray:PopupIndicators_isArray,isObject:PopupIndicators_isObject,objectEach:PopupIndicators_objectEach,stableSort:PopupIndicators_stableSort}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();var DropdownProperties;(function(DropdownProperties){DropdownProperties[DropdownProperties["params.algorithm"]=0]="params.algorithm";DropdownProperties[DropdownProperties["params.average"]=1]="params.average"})(DropdownProperties||(DropdownProperties={}));const dropdownParameters={"algorithm-pivotpoints":["standard","fibonacci","camarilla"],"average-disparityindex":["sma","ema","dema","tema","wma"]};function addColsContainer(container){const lhsCol=PopupIndicators_createElement("div",{className:"highcharts-popup-lhs-col"},void 0,container);const rhsCol=PopupIndicators_createElement("div",{className:"highcharts-popup-rhs-col"},void 0,container);PopupIndicators_createElement("div",{className:"highcharts-popup-rhs-col-wrapper"},void 0,rhsCol);return{lhsCol:lhsCol,rhsCol:rhsCol}}function PopupIndicators_addForm(chart,_options,callback){const lang=this.lang;let buttonParentDiv;if(!chart){return}this.tabs.init.call(this,chart);const tabsContainers=this.container.querySelectorAll(".highcharts-tab-item-content");addColsContainer(tabsContainers[0]);addSearchBox.call(this,chart,tabsContainers[0]);addIndicatorList.call(this,chart,tabsContainers[0],"add");buttonParentDiv=tabsContainers[0].querySelectorAll(".highcharts-popup-rhs-col")[0];this.addButton(buttonParentDiv,lang.addButton||"add","add",buttonParentDiv,callback);addColsContainer(tabsContainers[1]);addIndicatorList.call(this,chart,tabsContainers[1],"edit");buttonParentDiv=tabsContainers[1].querySelectorAll(".highcharts-popup-rhs-col")[0];this.addButton(buttonParentDiv,lang.saveButton||"save","edit",buttonParentDiv,callback);this.addButton(buttonParentDiv,lang.removeButton||"remove","remove",buttonParentDiv,callback)}function PopupIndicators_addFormFields(chart,series,seriesType,rhsColWrapper){const fields=series.params||series.options.params;rhsColWrapper.innerHTML=highcharts_AST_commonjs_highcharts_AST_commonjs2_highcharts_AST_root_Highcharts_AST_default().emptyHTML;PopupIndicators_createElement("h3",{className:"highcharts-indicator-title"},void 0,rhsColWrapper).appendChild(PopupIndicators_doc.createTextNode(getNameType(series,seriesType).indicatorFullName));PopupIndicators_createElement("input",{type:"hidden",name:"highcharts-type-"+seriesType,value:seriesType},void 0,rhsColWrapper);listAllSeries.call(this,seriesType,"series",chart,rhsColWrapper,series,series.linkedParent&&series.linkedParent.options.id);if(fields.volumeSeriesID){listAllSeries.call(this,seriesType,"volume",chart,rhsColWrapper,series,series.linkedParent&&fields.volumeSeriesID)}addParamInputs.call(this,chart,"params",fields,seriesType,rhsColWrapper)}function addIndicatorList(chart,parentDiv,listType,filter){function selectIndicator(series,indicatorType){const button=rhsColWrapper.parentNode.children[1];PopupIndicators_addFormFields.call(popup,chart,series,indicatorType,rhsColWrapper);if(button){button.style.display="block"}if(isEdit&&series.options){PopupIndicators_createElement("input",{type:"hidden",name:"highcharts-id-"+indicatorType,value:series.options.id},void 0,rhsColWrapper).setAttribute("highcharts-data-series-id",series.options.id)}}const popup=this,lang=popup.lang,lhsCol=parentDiv.querySelectorAll(".highcharts-popup-lhs-col")[0],rhsCol=parentDiv.querySelectorAll(".highcharts-popup-rhs-col")[0],isEdit=listType==="edit",series=isEdit?chart.series:chart.options.plotOptions||{};if(!chart&&series){return}let item,filteredSeriesArray=[];if(!isEdit&&!PopupIndicators_isArray(series)){filteredSeriesArray=filterSeries.call(this,series,filter)}else if(PopupIndicators_isArray(series)){filteredSeriesArray=filterSeriesArray.call(this,series)}PopupIndicators_stableSort(filteredSeriesArray,(a,b)=>{const seriesAName=a.indicatorFullName.toLowerCase(),seriesBName=b.indicatorFullName.toLowerCase();return seriesAName<seriesBName?-1:seriesAName>seriesBName?1:0});if(lhsCol.children[1]){lhsCol.children[1].remove()}const indicatorList=PopupIndicators_createElement("ul",{className:"highcharts-indicator-list"},void 0,lhsCol);const rhsColWrapper=rhsCol.querySelectorAll(".highcharts-popup-rhs-col-wrapper")[0];filteredSeriesArray.forEach(seriesSet=>{const{indicatorFullName,indicatorType,series}=seriesSet;item=PopupIndicators_createElement("li",{className:"highcharts-indicator-list"},void 0,indicatorList);const btn=PopupIndicators_createElement("button",{className:"highcharts-indicator-list-item",textContent:indicatorFullName},void 0,item);["click","touchstart"].forEach(eventName=>{PopupIndicators_addEvent(btn,eventName,function(){selectIndicator(series,indicatorType)})})});if(filteredSeriesArray.length>0){const{series,indicatorType}=filteredSeriesArray[0];selectIndicator(series,indicatorType)}else if(!isEdit){highcharts_AST_commonjs_highcharts_AST_commonjs2_highcharts_AST_root_Highcharts_AST_default().setElementHTML(rhsColWrapper.parentNode.children[0],lang.noFilterMatch||"");rhsColWrapper.parentNode.children[1].style.display="none"}}function addParamInputs(chart,parentNode,fields,type,parentDiv){if(!chart){return}const addInput=this.addInput;PopupIndicators_objectEach(fields,(value,fieldName)=>{const parentFullName=parentNode+"."+fieldName;if(PopupIndicators_defined(value)&&parentFullName){if(PopupIndicators_isObject(value)){addInput.call(this,parentFullName,type,parentDiv,{});addParamInputs.call(this,chart,parentFullName,value,type,parentDiv)}if(parentFullName in DropdownProperties){const selectBox=addSelection.call(this,type,parentFullName,parentDiv);addSelectionOptions.call(this,chart,parentNode,selectBox,type,fieldName,value)}else if(parentFullName!=="params.volumeSeriesID"&&!PopupIndicators_isArray(value)){addInput.call(this,parentFullName,type,parentDiv,{value:value,type:"number"})}}})}function addSearchBox(chart,parentDiv){const popup=this,lhsCol=parentDiv.querySelectorAll(".highcharts-popup-lhs-col")[0],options="searchIndicators",inputAttributes={value:"",type:"text",htmlFor:"search-indicators",labelClassName:"highcharts-input-search-indicators-label"},clearFilterText=this.lang.clearFilter,inputWrapper=PopupIndicators_createElement("div",{className:"highcharts-input-wrapper"},void 0,lhsCol);const handleInputChange=function(inputText){addIndicatorList.call(popup,chart,popup.container,"add",inputText)};const input=this.addInput(options,"input",inputWrapper,inputAttributes),button=PopupIndicators_createElement("a",{textContent:clearFilterText},void 0,inputWrapper);input.classList.add("highcharts-input-search-indicators");button.classList.add("clear-filter-button");PopupIndicators_addEvent(input,"input",function(){handleInputChange(this.value);if(this.value.length){button.style.display="inline-block"}else{button.style.display="none"}});["click","touchstart"].forEach(eventName=>{PopupIndicators_addEvent(button,eventName,function(){input.value="";handleInputChange("");button.style.display="none"})})}function addSelection(indicatorType,optionName,parentDiv){const optionParamList=optionName.split("."),labelText=optionParamList[optionParamList.length-1],selectName="highcharts-"+optionName+"-type-"+indicatorType,lang=this.lang;PopupIndicators_createElement("label",{htmlFor:selectName},null,parentDiv).appendChild(PopupIndicators_doc.createTextNode(lang[labelText]||optionName));const selectBox=PopupIndicators_createElement("select",{name:selectName,className:"highcharts-popup-field",id:"highcharts-select-"+optionName},null,parentDiv);selectBox.setAttribute("id","highcharts-select-"+optionName);return selectBox}function addSelectionOptions(chart,optionName,selectBox,indicatorType,parameterName,selectedOption,currentSeries){if(optionName==="series"||optionName==="volume"){chart.series.forEach(series=>{const seriesOptions=series.options,seriesName=seriesOptions.name||seriesOptions.params?series.name:seriesOptions.id||"";if(seriesOptions.id!=="highcharts-navigator-series"&&seriesOptions.id!==(currentSeries&&currentSeries.options&&currentSeries.options.id)){if(!PopupIndicators_defined(selectedOption)&&optionName==="volume"&&series.type==="column"){selectedOption=seriesOptions.id}PopupIndicators_createElement("option",{value:seriesOptions.id},void 0,selectBox).appendChild(PopupIndicators_doc.createTextNode(seriesName))}})}else if(indicatorType&&parameterName){const dropdownKey=parameterName+"-"+indicatorType,parameterOption=dropdownParameters[dropdownKey];parameterOption.forEach(element=>{PopupIndicators_createElement("option",{value:element},void 0,selectBox).appendChild(PopupIndicators_doc.createTextNode(element))})}if(PopupIndicators_defined(selectedOption)){selectBox.value=selectedOption}}function filterSeries(series,filter){const popup=this,lang=popup.chart&&popup.chart.options.lang,indicatorAliases=lang&&lang.navigation&&lang.navigation.popup&&lang.navigation.popup.indicatorAliases,filteredSeriesArray=[];let filteredSeries;PopupIndicators_objectEach(series,(series,value)=>{const seriesOptions=series&&series.options;if(series.params||seriesOptions&&seriesOptions.params){const{indicatorFullName,indicatorType}=getNameType(series,value);if(filter){const validFilter=filter.replace(/[.*+?^${}()|[\]\\]/g,"\\$&");const regex=new RegExp(validFilter,"i"),alias=indicatorAliases&&indicatorAliases[indicatorType]&&indicatorAliases[indicatorType].join(" ")||"";if(indicatorFullName.match(regex)||alias.match(regex)){filteredSeries={indicatorFullName:indicatorFullName,indicatorType:indicatorType,series:series};filteredSeriesArray.push(filteredSeries)}}else{filteredSeries={indicatorFullName:indicatorFullName,indicatorType:indicatorType,series:series};filteredSeriesArray.push(filteredSeries)}}});return filteredSeriesArray}function filterSeriesArray(series){const filteredSeriesArray=[];series.forEach(series=>{if(series.is("sma")){filteredSeriesArray.push({indicatorFullName:series.name,indicatorType:series.type,series:series})}});return filteredSeriesArray}function getAmount(){let counter=0;this.series.forEach(serie=>{if(serie.params||serie.options.params){counter++}});return counter}function getNameType(series,indicatorType){const options=series.options;let seriesName=seriesTypes[indicatorType]&&seriesTypes[indicatorType].prototype.nameBase||indicatorType.toUpperCase(),seriesType=indicatorType;if(options&&options.type){seriesType=series.options.type;seriesName=series.name}return{indicatorFullName:seriesName,indicatorType:seriesType}}function listAllSeries(indicatorType,optionName,chart,parentDiv,currentSeries,selectedOption){const popup=this;if(!chart){return}const selectBox=addSelection.call(popup,indicatorType,optionName,parentDiv);addSelectionOptions.call(popup,chart,optionName,selectBox,void 0,void 0,void 0,currentSeries);if(PopupIndicators_defined(selectedOption)){selectBox.value=selectedOption}}const PopupIndicators={addForm:PopupIndicators_addForm,getAmount:getAmount};const Popup_PopupIndicators=PopupIndicators;const{doc:PopupTabs_doc}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const{addEvent:PopupTabs_addEvent,createElement:PopupTabs_createElement}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();function addContentItem(){const popupDiv=this.container;return PopupTabs_createElement("div",{className:"highcharts-tab-item-content highcharts-no-mousewheel"},void 0,popupDiv)}function addMenuItem(tabName,disableTab){const popupDiv=this.container,lang=this.lang;let className="highcharts-tab-item";if(disableTab===0){className+=" highcharts-tab-disabled"}const menuItem=PopupTabs_createElement("button",{className:className},void 0,popupDiv);menuItem.appendChild(PopupTabs_doc.createTextNode(lang[tabName+"Button"]||tabName));menuItem.setAttribute("highcharts-data-tab-type",tabName);return menuItem}function deselectAll(){const popupDiv=this.container,tabs=popupDiv.querySelectorAll(".highcharts-tab-item"),tabsContent=popupDiv.querySelectorAll(".highcharts-tab-item-content");for(let i=0;i<tabs.length;i++){tabs[i].classList.remove("highcharts-tab-item-active");tabsContent[i].classList.remove("highcharts-tab-item-show")}}function init(chart){if(!chart){return}const indicatorsCount=this.indicators.getAmount.call(chart);const firstTab=addMenuItem.call(this,"add");addMenuItem.call(this,"edit",indicatorsCount);addContentItem.call(this);addContentItem.call(this);switchTabs.call(this,indicatorsCount);selectTab.call(this,firstTab,0)}function selectTab(tab,index){const allTabs=this.container.querySelectorAll(".highcharts-tab-item-content");tab.className+=" highcharts-tab-item-active";allTabs[index].className+=" highcharts-tab-item-show"}function switchTabs(disableTab){const popup=this,popupDiv=this.container,tabs=popupDiv.querySelectorAll(".highcharts-tab-item");tabs.forEach((tab,i)=>{if(disableTab===0&&tab.getAttribute("highcharts-data-tab-type")==="edit"){return}["click","touchstart"].forEach(eventName=>{PopupTabs_addEvent(tab,eventName,function(){deselectAll.call(popup);selectTab.call(popup,this,i)})})})}const PopupTabs={init:init};const Popup_PopupTabs=PopupTabs;const{doc:Popup_doc}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const{getOptions}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const{addEvent:Popup_addEvent,createElement:Popup_createElement,extend:Popup_extend,fireEvent:Popup_fireEvent,pick:Popup_pick}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();function getFields(parentDiv,type){const inputList=Array.prototype.slice.call(parentDiv.querySelectorAll("input")),selectList=Array.prototype.slice.call(parentDiv.querySelectorAll("select")),optionSeries="#highcharts-select-series > option:checked",optionVolume="#highcharts-select-volume > option:checked",linkedTo=parentDiv.querySelectorAll(optionSeries)[0],volumeTo=parentDiv.querySelectorAll(optionVolume)[0];const fieldsOutput={actionType:type,linkedTo:linkedTo&&linkedTo.getAttribute("value")||"",fields:{}};inputList.forEach(input=>{const param=input.getAttribute("highcharts-data-name"),seriesId=input.getAttribute("highcharts-data-series-id");if(seriesId){fieldsOutput.seriesId=input.value}else if(param){fieldsOutput.fields[param]=input.value}else{fieldsOutput.type=input.value}});selectList.forEach(select=>{const id=select.id;if(id!=="highcharts-select-series"&&id!=="highcharts-select-volume"){const parameter=id.split("highcharts-select-")[1];fieldsOutput.fields[parameter]=select.value}});if(volumeTo){fieldsOutput.fields["params.volumeSeriesID"]=volumeTo.getAttribute("value")||""}return fieldsOutput}class Popup extends Shared_BaseForm{constructor(parentDiv,iconsURL,chart){super(parentDiv,iconsURL);this.chart=chart;this.lang=(getOptions().lang.navigation||{}).popup||{};Popup_addEvent(this.container,"mousedown",()=>{const activeAnnotation=chart&&chart.navigationBindings&&chart.navigationBindings.activeAnnotation;if(activeAnnotation){activeAnnotation.cancelClick=true;const unbind=Popup_addEvent(Popup_doc,"click",()=>{setTimeout(()=>{activeAnnotation.cancelClick=false},0);unbind()})}})}addInput(option,indicatorType,parentDiv,inputAttributes){const optionParamList=option.split("."),optionName=optionParamList[optionParamList.length-1],lang=this.lang,inputName="highcharts-"+indicatorType+"-"+Popup_pick(inputAttributes.htmlFor,optionName);if(!optionName.match(/^\d+$/)){Popup_createElement("label",{htmlFor:inputName,className:inputAttributes.labelClassName},void 0,parentDiv).appendChild(Popup_doc.createTextNode(lang[optionName]||optionName))}const input=Popup_createElement("input",{name:inputName,value:inputAttributes.value,type:inputAttributes.type,className:"highcharts-popup-field"},void 0,parentDiv);input.setAttribute("highcharts-data-name",option);return input}closeButtonEvents(){if(this.chart){const navigationBindings=this.chart.navigationBindings;Popup_fireEvent(navigationBindings,"closePopup");if(navigationBindings&&navigationBindings.selectedButtonElement){Popup_fireEvent(navigationBindings,"deselectButton",{button:navigationBindings.selectedButtonElement})}}else{super.closeButtonEvents()}}addButton(parentDiv,label,type,fieldsDiv,callback){const button=Popup_createElement("button",void 0,void 0,parentDiv);button.appendChild(Popup_doc.createTextNode(label));if(callback){["click","touchstart"].forEach(eventName=>{Popup_addEvent(button,eventName,()=>{this.closePopup();return callback(getFields(fieldsDiv,type))})})}return button}showForm(type,chart,options,callback){if(!chart){return}this.showPopup();if(type==="indicators"){this.indicators.addForm.call(this,chart,options,callback)}if(type==="annotation-toolbar"){this.annotations.addToolbar.call(this,chart,options,callback)}if(type==="annotation-edit"){this.annotations.addForm.call(this,chart,options,callback)}if(type==="flag"){this.annotations.addForm.call(this,chart,options,callback,true)}this.type=type;this.container.style.height=this.container.offsetHeight+"px"}}Popup_extend(Popup.prototype,{annotations:Popup_PopupAnnotations,indicators:Popup_PopupIndicators,tabs:Popup_PopupTabs});const Popup_Popup=Popup;const{composed}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const{addEvent:PopupComposition_addEvent,pushUnique,wrap:PopupComposition_wrap}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();function compose(NagivationBindingsClass,PointerClass){if(pushUnique(composed,"Popup")){PopupComposition_addEvent(NagivationBindingsClass,"closePopup",onNavigationBindingsClosePopup);PopupComposition_addEvent(NagivationBindingsClass,"showPopup",onNavigationBindingsShowPopup);PopupComposition_wrap(PointerClass.prototype,"onContainerMouseDown",wrapPointerOnContainerMouserDown)}}function onNavigationBindingsClosePopup(){if(this.popup){this.popup.closePopup()}}function onNavigationBindingsShowPopup(config){if(!this.popup){this.popup=new Popup_Popup(this.chart.container,this.chart.options.navigation.iconsURL||this.chart.options.stockTools&&this.chart.options.stockTools.gui.iconsURL||"https://code.highcharts.com/12.0.2/gfx/stock-icons/",this.chart)}this.popup.showForm(config.formType,this.chart,config.options,config.onSubmit)}function wrapPointerOnContainerMouserDown(proceed,e){if(!this.inClass(e.target,"highcharts-popup")){proceed.apply(this,Array.prototype.slice.call(arguments,1))}}const PopupComposition={compose:compose};const Popup_PopupComposition=PopupComposition;const{getDeferredAnimation}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const{destroyObjectProperties,erase:Annotation_erase,fireEvent:Annotation_fireEvent,merge:Annotation_merge,pick:Annotation_pick,splat}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();function adjustVisibility(item){const label=item.graphic,hasVisiblePoints=item.points.some(point=>point.series.visible!==false&&point.visible!==false);if(label){if(!hasVisiblePoints){label.hide()}else if(label.visibility==="hidden"){label.show()}}}function getLabelsAndShapesOptions(baseOptions,newOptions){const mergedOptions={};["labels","shapes"].forEach(name=>{const someBaseOptions=baseOptions[name],newOptionsValue=newOptions[name];if(someBaseOptions){if(newOptionsValue){mergedOptions[name]=splat(newOptionsValue).map((basicOptions,i)=>Annotation_merge(someBaseOptions[i],basicOptions))}else{mergedOptions[name]=baseOptions[name]}}});return mergedOptions}class Annotation extends Annotations_EventEmitter{static compose(ChartClass,NavigationBindingsClass,PointerClass,SVGRendererClass){Annotations_AnnotationChart.compose(Annotation,ChartClass,PointerClass);Controllables_ControllableLabel.compose(SVGRendererClass);Controllables_ControllablePath.compose(ChartClass,SVGRendererClass);NavigationBindingsClass.compose(Annotation,ChartClass);Popup_PopupComposition.compose(NavigationBindingsClass,PointerClass)}constructor(chart,userOptions){super();this.coll="annotations";this.chart=chart;this.points=[];this.controlPoints=[];this.coll="annotations";this.index=-1;this.labels=[];this.shapes=[];this.options=Annotation_merge(this.defaultOptions,userOptions);this.userOptions=userOptions;const labelsAndShapes=getLabelsAndShapesOptions(this.options,userOptions);this.options.labels=labelsAndShapes.labels;this.options.shapes=labelsAndShapes.shapes;this.init(chart,this.options)}addClipPaths(){this.setClipAxes();if(this.clipXAxis&&this.clipYAxis&&this.options.crop){this.clipRect=this.chart.renderer.clipRect(this.getClipBox())}}addLabels(){const labelsOptions=this.options.labels||[];labelsOptions.forEach((labelOptions,i)=>{const label=this.initLabel(labelOptions,i);Annotation_merge(true,labelsOptions[i],label.options)})}addShapes(){const shapes=this.options.shapes||[];shapes.forEach((shapeOptions,i)=>{const shape=this.initShape(shapeOptions,i);Annotation_merge(true,shapes[i],shape.options)})}destroy(){const chart=this.chart,destroyItem=function(item){item.destroy()};this.labels.forEach(destroyItem);this.shapes.forEach(destroyItem);this.clipXAxis=null;this.clipYAxis=null;Annotation_erase(chart.labelCollectors,this.labelCollector);super.destroy();this.destroyControlTarget();destroyObjectProperties(this,chart)}destroyItem(item){Annotation_erase(this[item.itemType+"s"],item);item.destroy()}getClipBox(){if(this.clipXAxis&&this.clipYAxis){return{x:this.clipXAxis.left,y:this.clipYAxis.top,width:this.clipXAxis.width,height:this.clipYAxis.height}}}initProperties(chart,userOptions){this.setOptions(userOptions);const labelsAndShapes=getLabelsAndShapesOptions(this.options,userOptions);this.options.labels=labelsAndShapes.labels;this.options.shapes=labelsAndShapes.shapes;this.chart=chart;this.points=[];this.controlPoints=[];this.coll="annotations";this.userOptions=userOptions;this.labels=[];this.shapes=[]}init(_annotationOrChart,_userOptions,index=this.index){const chart=this.chart,animOptions=this.options.animation;this.index=index;this.linkPoints();this.addControlPoints();this.addShapes();this.addLabels();this.setLabelCollector();this.animationConfig=getDeferredAnimation(chart,animOptions)}initLabel(labelOptions,index){const options=Annotation_merge(this.options.labelOptions,{controlPointOptions:this.options.controlPointOptions},labelOptions),label=new Controllables_ControllableLabel(this,options,index);label.itemType="label";this.labels.push(label);return label}initShape(shapeOptions,index){const options=Annotation_merge(this.options.shapeOptions,{controlPointOptions:this.options.controlPointOptions},shapeOptions),shape=new Annotation.shapesMap[options.type](this,options,index);shape.itemType="shape";this.shapes.push(shape);return shape}redraw(animation){this.linkPoints();if(!this.graphic){this.render()}if(this.clipRect){this.clipRect.animate(this.getClipBox())}this.redrawItems(this.shapes,animation);this.redrawItems(this.labels,animation);this.redrawControlPoints(animation)}redrawItem(item,animation){item.linkPoints();if(!item.shouldBeDrawn()){this.destroyItem(item)}else{if(!item.graphic){this.renderItem(item)}item.redraw(Annotation_pick(animation,true)&&item.graphic.placed);if(item.points.length){adjustVisibility(item)}}}redrawItems(items,animation){let i=items.length;while(i--){this.redrawItem(items[i],animation)}}remove(){return this.chart.removeAnnotation(this)}render(){const renderer=this.chart.renderer;this.graphic=renderer.g("annotation").attr({opacity:0,zIndex:this.options.zIndex,visibility:this.options.visible?"inherit":"hidden"}).add();this.shapesGroup=renderer.g("annotation-shapes").add(this.graphic);if(this.options.crop){this.shapesGroup.clip(this.chart.plotBoxClip)}this.labelsGroup=renderer.g("annotation-labels").attr({translateX:0,translateY:0}).add(this.graphic);this.addClipPaths();if(this.clipRect){this.graphic.clip(this.clipRect)}this.renderItems(this.shapes);this.renderItems(this.labels);this.addEvents();this.renderControlPoints()}renderItem(item){item.render(item.itemType==="label"?this.labelsGroup:this.shapesGroup)}renderItems(items){let i=items.length;while(i--){this.renderItem(items[i])}}setClipAxes(){const xAxes=this.chart.xAxis,yAxes=this.chart.yAxis,linkedAxes=(this.options.labels||[]).concat(this.options.shapes||[]).reduce((axes,labelOrShape)=>{const point=labelOrShape&&(labelOrShape.point||labelOrShape.points&&labelOrShape.points[0]);return[xAxes[point&&point.xAxis]||axes[0],yAxes[point&&point.yAxis]||axes[1]]},[]);this.clipXAxis=linkedAxes[0];this.clipYAxis=linkedAxes[1]}setControlPointsVisibility(visible){const setItemControlPointsVisibility=function(item){item.setControlPointsVisibility(visible)};this.controlPoints.forEach(controlPoint=>{controlPoint.setVisibility(visible)});this.shapes.forEach(setItemControlPointsVisibility);this.labels.forEach(setItemControlPointsVisibility)}setLabelCollector(){const annotation=this;annotation.labelCollector=function(){return annotation.labels.reduce(function(labels,label){if(!label.options.allowOverlap){labels.push(label.graphic)}return labels},[])};annotation.chart.labelCollectors.push(annotation.labelCollector)}setOptions(userOptions){this.options=Annotation_merge(this.defaultOptions,userOptions)}setVisibility(visible){const options=this.options,navigation=this.chart.navigationBindings,visibility=Annotation_pick(visible,!options.visible);this.graphic.attr("visibility",visibility?"inherit":"hidden");if(!visibility){const setItemControlPointsVisibility=function(item){item.setControlPointsVisibility(visibility)};this.shapes.forEach(setItemControlPointsVisibility);this.labels.forEach(setItemControlPointsVisibility);if(navigation.activeAnnotation===this&&navigation.popup&&navigation.popup.type==="annotation-toolbar"){Annotation_fireEvent(navigation,"closePopup")}}options.visible=visibility}update(userOptions,redraw){const chart=this.chart,labelsAndShapes=getLabelsAndShapesOptions(this.userOptions,userOptions),userOptionsIndex=chart.annotations.indexOf(this),options=Annotation_merge(true,this.userOptions,userOptions);options.labels=labelsAndShapes.labels;options.shapes=labelsAndShapes.shapes;this.destroy();this.initProperties(chart,options);this.init(chart,options);chart.options.annotations[userOptionsIndex]=this.options;this.isUpdating=true;if(Annotation_pick(redraw,true)){chart.drawAnnotations()}Annotation_fireEvent(this,"afterUpdate");this.isUpdating=false}}Annotation.ControlPoint=Annotations_ControlPoint;Annotation.MockPoint=Annotations_MockPoint;Annotation.shapesMap={rect:Controllables_ControllableRect,circle:Controllables_ControllableCircle,ellipse:Controllables_ControllableEllipse,path:Controllables_ControllablePath,image:Controllables_ControllableImage};Annotation.types={};Annotation.prototype.defaultOptions=Annotations_AnnotationDefaults;Annotation.prototype.nonDOMEvents=["add","afterUpdate","drag","remove"];Annotations_ControlTarget.compose(Annotation);const Annotations_Annotation=Annotation;"";var ChartNavigationComposition;(function(ChartNavigationComposition){function compose(chart){if(!chart.navigation){chart.navigation=new Additions(chart)}return chart}ChartNavigationComposition.compose=compose;class Additions{constructor(chart){this.updates=[];this.chart=chart}addUpdate(updateFn){this.chart.navigation.updates.push(updateFn)}update(options,redraw){this.updates.forEach(updateFn=>{updateFn.call(this.chart,options,redraw)})}}ChartNavigationComposition.Additions=Additions})(ChartNavigationComposition||(ChartNavigationComposition={}));const Chart_ChartNavigationComposition=ChartNavigationComposition;const{defined:NavigationBindingsUtilities_defined,isNumber:NavigationBindingsUtilities_isNumber,pick:NavigationBindingsUtilities_pick}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const annotationsFieldsTypes={backgroundColor:"string",borderColor:"string",borderRadius:"string",color:"string",fill:"string",fontSize:"string",labels:"string",name:"string",stroke:"string",title:"string"};function getAssignedAxis(coords){return coords.filter(coord=>{const extremes=coord.axis.getExtremes(),axisMin=extremes.min,axisMax=extremes.max,minPointOffset=NavigationBindingsUtilities_pick(coord.axis.minPointOffset,0);return NavigationBindingsUtilities_isNumber(axisMin)&&NavigationBindingsUtilities_isNumber(axisMax)&&coord.value>=axisMin-minPointOffset&&coord.value<=axisMax+minPointOffset&&!coord.axis.options.isInternal})[0]}function getFieldType(key,value){const predefinedType=annotationsFieldsTypes[key];let fieldType=typeof value;if(NavigationBindingsUtilities_defined(predefinedType)){fieldType=predefinedType}return{string:"text",number:"number",boolean:"checkbox"}[fieldType]}const NavigationBindingUtilities={annotationsFieldsTypes:annotationsFieldsTypes,getAssignedAxis:getAssignedAxis,getFieldType:getFieldType};const NavigationBindingsUtilities=NavigationBindingUtilities;const{getAssignedAxis:NavigationBindingsDefaults_getAssignedAxis}=NavigationBindingsUtilities;const{isNumber:NavigationBindingsDefaults_isNumber,merge:NavigationBindingsDefaults_merge}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const lang={navigation:{popup:{simpleShapes:"Simple shapes",lines:"Lines",circle:"Circle",ellipse:"Ellipse",rectangle:"Rectangle",label:"Label",shapeOptions:"Shape options",typeOptions:"Details",fill:"Fill",format:"Text",strokeWidth:"Line width",stroke:"Line color",title:"Title",name:"Name",labelOptions:"Label options",labels:"Labels",backgroundColor:"Background color",backgroundColors:"Background colors",borderColor:"Border color",borderRadius:"Border radius",borderWidth:"Border width",style:"Style",padding:"Padding",fontSize:"Font size",color:"Color",height:"Height",shapes:"Shape options"}}};const navigation={bindingsClassName:"highcharts-bindings-container",bindings:{circleAnnotation:{className:"highcharts-circle-annotation",start:function(e){const coords=this.chart.pointer?.getCoordinates(e),coordsX=coords&&NavigationBindingsDefaults_getAssignedAxis(coords.xAxis),coordsY=coords&&NavigationBindingsDefaults_getAssignedAxis(coords.yAxis),navigation=this.chart.options.navigation;if(!coordsX||!coordsY){return}return this.chart.addAnnotation(NavigationBindingsDefaults_merge({langKey:"circle",type:"basicAnnotation",shapes:[{type:"circle",point:{x:coordsX.value,y:coordsY.value,xAxis:coordsX.axis.index,yAxis:coordsY.axis.index},r:5}]},navigation.annotationsOptions,navigation.bindings.circleAnnotation.annotationsOptions))},steps:[function(e,annotation){const shapes=annotation.options.shapes,mockPointOpts=shapes&&shapes[0]&&shapes[0].point||{};let distance;if(NavigationBindingsDefaults_isNumber(mockPointOpts.xAxis)&&NavigationBindingsDefaults_isNumber(mockPointOpts.yAxis)){const inverted=this.chart.inverted,x=this.chart.xAxis[mockPointOpts.xAxis].toPixels(mockPointOpts.x),y=this.chart.yAxis[mockPointOpts.yAxis].toPixels(mockPointOpts.y);distance=Math.max(Math.sqrt(Math.pow(inverted?y-e.chartX:x-e.chartX,2)+Math.pow(inverted?x-e.chartY:y-e.chartY,2)),5)}annotation.update({shapes:[{r:distance}]})}]},ellipseAnnotation:{className:"highcharts-ellipse-annotation",start:function(e){const coords=this.chart.pointer?.getCoordinates(e),coordsX=coords&&NavigationBindingsDefaults_getAssignedAxis(coords.xAxis),coordsY=coords&&NavigationBindingsDefaults_getAssignedAxis(coords.yAxis),navigation=this.chart.options.navigation;if(!coordsX||!coordsY){return}return this.chart.addAnnotation(NavigationBindingsDefaults_merge({langKey:"ellipse",type:"basicAnnotation",shapes:[{type:"ellipse",xAxis:coordsX.axis.index,yAxis:coordsY.axis.index,points:[{x:coordsX.value,y:coordsY.value},{x:coordsX.value,y:coordsY.value}],ry:1}]},navigation.annotationsOptions,navigation.bindings.ellipseAnnotation.annotationOptions))},steps:[function(e,annotation){const target=annotation.shapes[0],position=target.getAbsolutePosition(target.points[1]);target.translatePoint(e.chartX-position.x,e.chartY-position.y,1);target.redraw(false)},function(e,annotation){const target=annotation.shapes[0],position=target.getAbsolutePosition(target.points[0]),position2=target.getAbsolutePosition(target.points[1]),newR=target.getDistanceFromLine(position,position2,e.chartX,e.chartY),yAxis=target.getYAxis(),newRY=Math.abs(yAxis.toValue(0)-yAxis.toValue(newR));target.setYRadius(newRY);target.redraw(false)}]},rectangleAnnotation:{className:"highcharts-rectangle-annotation",start:function(e){const coords=this.chart.pointer?.getCoordinates(e),coordsX=coords&&NavigationBindingsDefaults_getAssignedAxis(coords.xAxis),coordsY=coords&&NavigationBindingsDefaults_getAssignedAxis(coords.yAxis);if(!coordsX||!coordsY){return}const x=coordsX.value,y=coordsY.value,xAxis=coordsX.axis.index,yAxis=coordsY.axis.index,navigation=this.chart.options.navigation;return this.chart.addAnnotation(NavigationBindingsDefaults_merge({langKey:"rectangle",type:"basicAnnotation",shapes:[{type:"path",points:[{xAxis:xAxis,yAxis:yAxis,x:x,y:y},{xAxis:xAxis,yAxis:yAxis,x:x,y:y},{xAxis:xAxis,yAxis:yAxis,x:x,y:y},{xAxis:xAxis,yAxis:yAxis,x:x,y:y},{command:"Z"}]}]},navigation.annotationsOptions,navigation.bindings.rectangleAnnotation.annotationsOptions))},steps:[function(e,annotation){const shapes=annotation.options.shapes,points=shapes&&shapes[0]&&shapes[0].points||[],coords=this.chart.pointer?.getCoordinates(e),coordsX=coords&&NavigationBindingsDefaults_getAssignedAxis(coords.xAxis),coordsY=coords&&NavigationBindingsDefaults_getAssignedAxis(coords.yAxis);if(coordsX&&coordsY){const x=coordsX.value,y=coordsY.value;points[1].x=x;points[2].x=x;points[2].y=y;points[3].y=y;annotation.update({shapes:[{points:points}]})}}]},labelAnnotation:{className:"highcharts-label-annotation",start:function(e){const coords=this.chart.pointer?.getCoordinates(e),coordsX=coords&&NavigationBindingsDefaults_getAssignedAxis(coords.xAxis),coordsY=coords&&NavigationBindingsDefaults_getAssignedAxis(coords.yAxis),navigation=this.chart.options.navigation;if(!coordsX||!coordsY){return}return this.chart.addAnnotation(NavigationBindingsDefaults_merge({langKey:"label",type:"basicAnnotation",labelOptions:{format:"{y:.2f}",overflow:"none",crop:true},labels:[{point:{xAxis:coordsX.axis.index,yAxis:coordsY.axis.index,x:coordsX.value,y:coordsY.value}}]},navigation.annotationsOptions,navigation.bindings.labelAnnotation.annotationsOptions))}}},events:{},annotationsOptions:{animation:{defer:0}}};const NavigationBindingDefaults={lang:lang,navigation:navigation};const NavigationBindingsDefaults=NavigationBindingDefaults;const{setOptions}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const{format:NavigationBindings_format}=highcharts_Templating_commonjs_highcharts_Templating_commonjs2_highcharts_Templating_root_Highcharts_Templating_default();const{composed:NavigationBindings_composed,doc:NavigationBindings_doc,win}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const{getAssignedAxis:NavigationBindings_getAssignedAxis,getFieldType:NavigationBindings_getFieldType}=NavigationBindingsUtilities;const{addEvent:NavigationBindings_addEvent,attr,defined:NavigationBindings_defined,fireEvent:NavigationBindings_fireEvent,isArray:NavigationBindings_isArray,isFunction,isNumber:NavigationBindings_isNumber,isObject:NavigationBindings_isObject,merge:NavigationBindings_merge,objectEach:NavigationBindings_objectEach,pick:NavigationBindings_pick,pushUnique:NavigationBindings_pushUnique}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();function closestPolyfill(el,s){const ElementProto=win.Element.prototype,elementMatches=ElementProto.matches||ElementProto.msMatchesSelector||ElementProto.webkitMatchesSelector;let ret=null;if(ElementProto.closest){ret=ElementProto.closest.call(el,s)}else{do{if(elementMatches.call(el,s)){return el}el=el.parentElement||el.parentNode}while(el!==null&&el.nodeType===1)}return ret}function onAnnotationRemove(){if(this.chart.navigationBindings){this.chart.navigationBindings.deselectAnnotation()}}function onChartDestroy(){if(this.navigationBindings){this.navigationBindings.destroy()}}function onChartLoad(){const options=this.options;if(options&&options.navigation&&options.navigation.bindings){this.navigationBindings=new NavigationBindings(this,options.navigation);this.navigationBindings.initEvents();this.navigationBindings.initUpdate()}}function onChartRender(){const navigationBindings=this.navigationBindings,disabledClassName="highcharts-disabled-btn";if(this&&navigationBindings){let buttonsEnabled=false;this.series.forEach(series=>{if(!series.options.isInternal&&series.visible){buttonsEnabled=true}});if(this.navigationBindings&&this.navigationBindings.container&&this.navigationBindings.container[0]){const container=this.navigationBindings.container[0];NavigationBindings_objectEach(navigationBindings.boundClassNames,(value,key)=>{const buttonNode=container.querySelectorAll("."+key);if(buttonNode){for(let i=0;i<buttonNode.length;i++){const button=buttonNode[i],cls=button.className;if(value.noDataState==="normal"){if(cls.indexOf(disabledClassName)!==-1){button.classList.remove(disabledClassName)}}else if(!buttonsEnabled){if(cls.indexOf(disabledClassName)===-1){button.className+=" "+disabledClassName}}else{if(cls.indexOf(disabledClassName)!==-1){button.classList.remove(disabledClassName)}}}}})}}}function NavigationBindings_onNavigationBindingsClosePopup(){this.deselectAnnotation()}function onNavigationBindingsDeselectButton(){this.selectedButtonElement=null}function selectableAnnotation(annotationType){const originalClick=annotationType.prototype.defaultOptions.events&&annotationType.prototype.defaultOptions.events.click;function selectAndShowPopup(eventArguments){const annotation=this,navigation=annotation.chart.navigationBindings,prevAnnotation=navigation.activeAnnotation;if(originalClick){originalClick.call(annotation,eventArguments)}if(prevAnnotation!==annotation){navigation.deselectAnnotation();navigation.activeAnnotation=annotation;annotation.setControlPointsVisibility(true);NavigationBindings_fireEvent(navigation,"showPopup",{annotation:annotation,formType:"annotation-toolbar",options:navigation.annotationToFields(annotation),onSubmit:function(data){if(data.actionType==="remove"){navigation.activeAnnotation=false;navigation.chart.removeAnnotation(annotation)}else{const config={};navigation.fieldsToOptions(data.fields,config);navigation.deselectAnnotation();const typeOptions=config.typeOptions;if(annotation.options.type==="measure"){typeOptions.crosshairY.enabled=typeOptions.crosshairY.strokeWidth!==0;typeOptions.crosshairX.enabled=typeOptions.crosshairX.strokeWidth!==0}annotation.update(config)}}})}else{NavigationBindings_fireEvent(navigation,"closePopup")}eventArguments.activeAnnotation=true}let touchStartX,touchStartY;function saveCoords(e){touchStartX=e.touches[0].clientX;touchStartY=e.touches[0].clientY}function checkForTouchmove(e){const hasMoved=touchStartX?Math.sqrt(Math.pow(touchStartX-e.changedTouches[0].clientX,2)+Math.pow(touchStartY-e.changedTouches[0].clientY,2))>=4:false;if(!hasMoved){selectAndShowPopup.call(this,e)}}NavigationBindings_merge(true,annotationType.prototype.defaultOptions.events,{click:selectAndShowPopup,touchstart:saveCoords,touchend:checkForTouchmove})}class NavigationBindings{static compose(AnnotationClass,ChartClass){if(NavigationBindings_pushUnique(NavigationBindings_composed,"NavigationBindings")){NavigationBindings_addEvent(AnnotationClass,"remove",onAnnotationRemove);selectableAnnotation(AnnotationClass);NavigationBindings_objectEach(AnnotationClass.types,annotationType=>{selectableAnnotation(annotationType)});NavigationBindings_addEvent(ChartClass,"destroy",onChartDestroy);NavigationBindings_addEvent(ChartClass,"load",onChartLoad);NavigationBindings_addEvent(ChartClass,"render",onChartRender);NavigationBindings_addEvent(NavigationBindings,"closePopup",NavigationBindings_onNavigationBindingsClosePopup);NavigationBindings_addEvent(NavigationBindings,"deselectButton",onNavigationBindingsDeselectButton);setOptions(NavigationBindingsDefaults)}}constructor(chart,options){this.boundClassNames=void 0;this.chart=chart;this.options=options;this.eventsToUnbind=[];this.container=this.chart.container.getElementsByClassName(this.options.bindingsClassName||"");if(!this.container.length){this.container=NavigationBindings_doc.getElementsByClassName(this.options.bindingsClassName||"")}}getCoords(e){const coords=this.chart.pointer?.getCoordinates(e);return[coords&&NavigationBindings_getAssignedAxis(coords.xAxis),coords&&NavigationBindings_getAssignedAxis(coords.yAxis)]}initEvents(){const navigation=this,chart=navigation.chart,bindingsContainer=navigation.container,options=navigation.options;navigation.boundClassNames={};NavigationBindings_objectEach(options.bindings||{},value=>{navigation.boundClassNames[value.className]=value});[].forEach.call(bindingsContainer,subContainer=>{navigation.eventsToUnbind.push(NavigationBindings_addEvent(subContainer,"click",event=>{const bindings=navigation.getButtonEvents(subContainer,event);if(bindings&&!bindings.button.classList.contains("highcharts-disabled-btn")){navigation.bindingsButtonClick(bindings.button,bindings.events,event)}}))});NavigationBindings_objectEach(options.events||{},(callback,eventName)=>{if(isFunction(callback)){navigation.eventsToUnbind.push(NavigationBindings_addEvent(navigation,eventName,callback,{passive:false}))}});navigation.eventsToUnbind.push(NavigationBindings_addEvent(chart.container,"click",function(e){if(!chart.cancelClick&&chart.isInsidePlot(e.chartX-chart.plotLeft,e.chartY-chart.plotTop,{visiblePlotOnly:true})){navigation.bindingsChartClick(this,e)}}));navigation.eventsToUnbind.push(NavigationBindings_addEvent(chart.container,highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().isTouchDevice?"touchmove":"mousemove",function(e){navigation.bindingsContainerMouseMove(this,e)},highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().isTouchDevice?{passive:false}:void 0))}initUpdate(){const navigation=this;Chart_ChartNavigationComposition.compose(this.chart).navigation.addUpdate(options=>{navigation.update(options)})}bindingsButtonClick(button,events,clickEvent){const navigation=this,chart=navigation.chart,svgContainer=chart.renderer.boxWrapper;let shouldEventBeFired=true;if(navigation.selectedButtonElement){if(navigation.selectedButtonElement.classList===button.classList){shouldEventBeFired=false}NavigationBindings_fireEvent(navigation,"deselectButton",{button:navigation.selectedButtonElement});if(navigation.nextEvent){if(navigation.currentUserDetails&&navigation.currentUserDetails.coll==="annotations"){chart.removeAnnotation(navigation.currentUserDetails)}navigation.mouseMoveEvent=navigation.nextEvent=false}}if(shouldEventBeFired){navigation.selectedButton=events;navigation.selectedButtonElement=button;NavigationBindings_fireEvent(navigation,"selectButton",{button:button});if(events.init){events.init.call(navigation,button,clickEvent)}if(events.start||events.steps){chart.renderer.boxWrapper.addClass("highcharts-draw-mode")}}else{chart.stockTools&&button.classList.remove("highcharts-active");svgContainer.removeClass("highcharts-draw-mode");navigation.nextEvent=false;navigation.mouseMoveEvent=false;navigation.selectedButton=null}}bindingsChartClick(chart,clickEvent){chart=this.chart;const navigation=this,activeAnnotation=navigation.activeAnnotation,selectedButton=navigation.selectedButton,svgContainer=chart.renderer.boxWrapper;if(activeAnnotation){if(!activeAnnotation.cancelClick&&!clickEvent.activeAnnotation&&clickEvent.target.parentNode&&!closestPolyfill(clickEvent.target,".highcharts-popup")){NavigationBindings_fireEvent(navigation,"closePopup")}else if(activeAnnotation.cancelClick){setTimeout(()=>{activeAnnotation.cancelClick=false},0)}}if(!selectedButton||!selectedButton.start){return}if(!navigation.nextEvent){navigation.currentUserDetails=selectedButton.start.call(navigation,clickEvent);if(navigation.currentUserDetails&&selectedButton.steps){navigation.stepIndex=0;navigation.steps=true;navigation.mouseMoveEvent=navigation.nextEvent=selectedButton.steps[navigation.stepIndex]}else{NavigationBindings_fireEvent(navigation,"deselectButton",{button:navigation.selectedButtonElement});svgContainer.removeClass("highcharts-draw-mode");navigation.steps=false;navigation.selectedButton=null;if(selectedButton.end){selectedButton.end.call(navigation,clickEvent,navigation.currentUserDetails)}}}else{navigation.nextEvent(clickEvent,navigation.currentUserDetails);if(navigation.steps){navigation.stepIndex++;if(selectedButton.steps[navigation.stepIndex]){navigation.mouseMoveEvent=navigation.nextEvent=selectedButton.steps[navigation.stepIndex]}else{NavigationBindings_fireEvent(navigation,"deselectButton",{button:navigation.selectedButtonElement});svgContainer.removeClass("highcharts-draw-mode");if(selectedButton.end){selectedButton.end.call(navigation,clickEvent,navigation.currentUserDetails)}navigation.nextEvent=false;navigation.mouseMoveEvent=false;navigation.selectedButton=null}}}}bindingsContainerMouseMove(_container,moveEvent){if(this.mouseMoveEvent){this.mouseMoveEvent(moveEvent,this.currentUserDetails)}}fieldsToOptions(fields,config){NavigationBindings_objectEach(fields,(value,field)=>{const parsedValue=parseFloat(value),path=field.split("."),pathLength=path.length-1;if(NavigationBindings_isNumber(parsedValue)&&!value.match(/px|em/g)&&!field.match(/format/g)){value=parsedValue}if(value!=="undefined"){let parent=config;path.forEach((name,index)=>{if(name!=="__proto__"&&name!=="constructor"){const nextName=NavigationBindings_pick(path[index+1],"");if(pathLength===index){parent[name]=value}else if(!parent[name]){parent[name]=nextName.match(/\d/g)?[]:{};parent=parent[name]}else{parent=parent[name]}}})}});return config}deselectAnnotation(){if(this.activeAnnotation){this.activeAnnotation.setControlPointsVisibility(false);this.activeAnnotation=false}}annotationToFields(annotation){const options=annotation.options,editables=NavigationBindings.annotationsEditable,nestedEditables=editables.nestedOptions,type=NavigationBindings_pick(options.type,options.shapes&&options.shapes[0]&&options.shapes[0].type,options.labels&&options.labels[0]&&options.labels[0].type,"label"),nonEditables=NavigationBindings.annotationsNonEditable[options.langKey]||[],visualOptions={langKey:options.langKey,type:type};function traverse(option,key,parentEditables,parent,parentKey){let nextParent;if(parentEditables&&NavigationBindings_defined(option)&&nonEditables.indexOf(key)===-1&&((parentEditables.indexOf&&parentEditables.indexOf(key))>=0||parentEditables[key]||parentEditables===true)){if(NavigationBindings_isArray(option)){parent[key]=[];option.forEach((arrayOption,i)=>{if(!NavigationBindings_isObject(arrayOption)){traverse(arrayOption,0,nestedEditables[key],parent[key],key)}else{parent[key][i]={};NavigationBindings_objectEach(arrayOption,(nestedOption,nestedKey)=>{traverse(nestedOption,nestedKey,nestedEditables[key],parent[key][i],key)})}})}else if(NavigationBindings_isObject(option)){nextParent={};if(NavigationBindings_isArray(parent)){parent.push(nextParent);nextParent[key]={};nextParent=nextParent[key]}else{parent[key]=nextParent}NavigationBindings_objectEach(option,(nestedOption,nestedKey)=>{traverse(nestedOption,nestedKey,key===0?parentEditables:nestedEditables[key],nextParent,key)})}else{if(key==="format"){parent[key]=[NavigationBindings_format(option,annotation.labels[0].points[0]).toString(),"text"]}else if(NavigationBindings_isArray(parent)){parent.push([option,NavigationBindings_getFieldType(parentKey,option)])}else{parent[key]=[option,NavigationBindings_getFieldType(key,option)]}}}}NavigationBindings_objectEach(options,(option,key)=>{if(key==="typeOptions"){visualOptions[key]={};NavigationBindings_objectEach(options[key],(typeOption,typeKey)=>{traverse(typeOption,typeKey,nestedEditables,visualOptions[key],typeKey)})}else{traverse(option,key,editables[type],visualOptions,key)}});return visualOptions}getClickedClassNames(container,event){let element=event.target,classNames=[],elemClassName;while(element&&element.tagName){elemClassName=attr(element,"class");if(elemClassName){classNames=classNames.concat(elemClassName.split(" ").map(name=>[name,element]))}element=element.parentNode;if(element===container){return classNames}}return classNames}getButtonEvents(container,event){const navigation=this,classNames=this.getClickedClassNames(container,event);let bindings;classNames.forEach(className=>{if(navigation.boundClassNames[className[0]]&&!bindings){bindings={events:navigation.boundClassNames[className[0]],button:className[1]}}});return bindings}update(options){this.options=NavigationBindings_merge(true,this.options,options);this.removeEvents();this.initEvents()}removeEvents(){this.eventsToUnbind.forEach(unbinder=>unbinder())}destroy(){this.removeEvents()}}NavigationBindings.annotationsEditable={nestedOptions:{labelOptions:["style","format","backgroundColor"],labels:["style"],label:["style"],style:["fontSize","color"],background:["fill","strokeWidth","stroke"],innerBackground:["fill","strokeWidth","stroke"],outerBackground:["fill","strokeWidth","stroke"],shapeOptions:["fill","strokeWidth","stroke"],shapes:["fill","strokeWidth","stroke"],line:["strokeWidth","stroke"],backgroundColors:[true],connector:["fill","strokeWidth","stroke"],crosshairX:["strokeWidth","stroke"],crosshairY:["strokeWidth","stroke"]},circle:["shapes"],ellipse:["shapes"],verticalLine:[],label:["labelOptions"],measure:["background","crosshairY","crosshairX"],fibonacci:[],tunnel:["background","line","height"],pitchfork:["innerBackground","outerBackground"],rect:["shapes"],crookedLine:[],basicAnnotation:["shapes","labelOptions"]};NavigationBindings.annotationsNonEditable={rectangle:["crosshairX","crosshairY","labelOptions"],ellipse:["labelOptions"],circle:["labelOptions"]};const Annotations_NavigationBindings=NavigationBindings;"";const G=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();G.Annotation=G.Annotation||Annotations_Annotation;G.NavigationBindings=G.NavigationBindings||Annotations_NavigationBindings;G.Annotation.compose(G.Chart,G.NavigationBindings,G.Pointer,G.SVGRenderer);const annotations_src=null&&Highcharts;const{merge:BasicAnnotation_merge}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();class BasicAnnotation extends Annotations_Annotation{addControlPoints(){const options=this.options,controlPoints=BasicAnnotation.basicControlPoints,annotationType=this.basicType,optionsGroup=options.labels||options.shapes||[];optionsGroup.forEach(group=>{group.controlPoints=controlPoints[annotationType]})}init(){const options=this.options;if(options.shapes){delete options.labelOptions;const type=options.shapes[0].type;options.shapes[0].className=(options.shapes[0].className||"")+" highcharts-basic-shape";if(type&&type!=="path"){this.basicType=type}else{this.basicType="rectangle"}}else{delete options.shapes;this.basicType="label"}super.init.apply(this,arguments)}}BasicAnnotation.basicControlPoints={label:[{symbol:"triangle-down",positioner:function(target){if(!target.graphic.placed){return{x:0,y:-9e7}}const xy=Annotations_MockPoint.pointToPixels(target.points[0]);return{x:xy.x-(this.graphic.width||0)/2,y:xy.y-(this.graphic.height||0)/2}},events:{drag:function(e,target){const xy=this.mouseMoveToTranslation(e);target.translatePoint(xy.x,xy.y);target.annotation.userOptions.labels[0].point=target.options.point;target.redraw(false)}}},{symbol:"square",positioner:function(target){if(!target.graphic.placed){return{x:0,y:-9e7}}return{x:target.graphic.alignAttr.x-(this.graphic.width||0)/2,y:target.graphic.alignAttr.y-(this.graphic.height||0)/2}},events:{drag:function(e,target){const xy=this.mouseMoveToTranslation(e);target.translate(xy.x,xy.y);target.annotation.userOptions.labels[0].point=target.options.point;target.redraw(false)}}}],rectangle:[{positioner:function(annotation){const xy=Annotations_MockPoint.pointToPixels(annotation.points[2]);return{x:xy.x-4,y:xy.y-4}},events:{drag:function(e,target){const annotation=target.annotation,coords=this.chart.pointer?.getCoordinates(e),points=target.options.points,shapes=annotation.userOptions.shapes,xAxisIndex=annotation.clipXAxis?.index||0,yAxisIndex=annotation.clipYAxis?.index||0;if(coords){const x=coords.xAxis[xAxisIndex].value,y=coords.yAxis[yAxisIndex].value;points[1].x=x;points[2].x=x;points[2].y=y;points[3].y=y;if(shapes&&shapes[0]){shapes[0].points=target.options.points}}annotation.redraw(false)}}}],circle:[{positioner:function(target){const xy=Annotations_MockPoint.pointToPixels(target.points[0]),r=target.options.r;return{x:xy.x+r*Math.cos(Math.PI/4)-(this.graphic.width||0)/2,y:xy.y+r*Math.sin(Math.PI/4)-(this.graphic.height||0)/2}},events:{drag:function(e,target){const annotation=target.annotation,position=this.mouseMoveToTranslation(e),shapes=annotation.userOptions.shapes;target.setRadius(Math.max(target.options.r+position.y/Math.sin(Math.PI/4),5));if(shapes&&shapes[0]){shapes[0].r=target.options.r;shapes[0].point=target.options.point}target.redraw(false)}}}],ellipse:[{positioner:function(target){const position=target.getAbsolutePosition(target.points[0]);return{x:position.x-(this.graphic.width||0)/2,y:position.y-(this.graphic.height||0)/2}},events:{drag:function(e,target){const position=target.getAbsolutePosition(target.points[0]);target.translatePoint(e.chartX-position.x,e.chartY-position.y,0);target.redraw(false)}}},{positioner:function(target){const position=target.getAbsolutePosition(target.points[1]);return{x:position.x-(this.graphic.width||0)/2,y:position.y-(this.graphic.height||0)/2}},events:{drag:function(e,target){const position=target.getAbsolutePosition(target.points[1]);target.translatePoint(e.chartX-position.x,e.chartY-position.y,1);target.redraw(false)}}},{positioner:function(target){const position=target.getAbsolutePosition(target.points[0]),position2=target.getAbsolutePosition(target.points[1]),attrs=target.getAttrs(position,position2);return{x:attrs.cx-(this.graphic.width||0)/2+attrs.ry*Math.sin(attrs.angle*Math.PI/180),y:attrs.cy-(this.graphic.height||0)/2-attrs.ry*Math.cos(attrs.angle*Math.PI/180)}},events:{drag:function(e,target){const position=target.getAbsolutePosition(target.points[0]),position2=target.getAbsolutePosition(target.points[1]),newR=target.getDistanceFromLine(position,position2,e.chartX,e.chartY),yAxis=target.getYAxis(),newRY=Math.abs(yAxis.toValue(0)-yAxis.toValue(newR));target.setYRadius(newRY);target.redraw(false)}}}]};BasicAnnotation.prototype.defaultOptions=BasicAnnotation_merge(Annotations_Annotation.prototype.defaultOptions,{});Annotations_Annotation.types.basicAnnotation=BasicAnnotation;const Types_BasicAnnotation=null&&BasicAnnotation;const{merge:CrookedLine_merge}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();class CrookedLine extends Annotations_Annotation{setClipAxes(){this.clipXAxis=this.chart.xAxis[this.options.typeOptions.xAxis];this.clipYAxis=this.chart.yAxis[this.options.typeOptions.yAxis]}getPointsOptions(){const typeOptions=this.options.typeOptions;return(typeOptions.points||[]).map(pointOptions=>{pointOptions.xAxis=typeOptions.xAxis;pointOptions.yAxis=typeOptions.yAxis;return pointOptions})}getControlPointsOptions(){return this.getPointsOptions()}addControlPoints(){this.getControlPointsOptions().forEach(function(pointOptions,i){const controlPoint=new Annotations_ControlPoint(this.chart,this,CrookedLine_merge(this.options.controlPointOptions,pointOptions.controlPoint),i);this.controlPoints.push(controlPoint);pointOptions.controlPoint=controlPoint.options},this)}addShapes(){const typeOptions=this.options.typeOptions,shape=this.initShape(CrookedLine_merge(typeOptions.line,{type:"path",className:"highcharts-crooked-lines",points:this.points.map((_point,i)=>function(target){return target.annotation.points[i]})}),0);typeOptions.line=shape.options}}CrookedLine.prototype.defaultOptions=CrookedLine_merge(Annotations_Annotation.prototype.defaultOptions,{typeOptions:{xAxis:0,yAxis:0,line:{fill:"none"}},controlPointOptions:{positioner:function(target){const graphic=this.graphic,xy=Annotations_MockPoint.pointToPixels(target.points[this.index]);return{x:xy.x-(graphic.width||0)/2,y:xy.y-(graphic.height||0)/2}},events:{drag:function(e,target){if(target.chart.isInsidePlot(e.chartX-target.chart.plotLeft,e.chartY-target.chart.plotTop,{visiblePlotOnly:true})){const translation=this.mouseMoveToTranslation(e),typeOptions=target.options.typeOptions;target.translatePoint(translation.x,translation.y,this.index);typeOptions.points[this.index].x=target.points[this.index].x;typeOptions.points[this.index].y=target.points[this.index].y;target.redraw(false)}}}}});Annotations_Annotation.types.crookedLine=CrookedLine;const Types_CrookedLine=CrookedLine;const{merge:ElliottWave_merge}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();class ElliottWave extends Types_CrookedLine{addLabels(){this.getPointsOptions().forEach((point,i)=>{const typeOptions=this.options.typeOptions,label=this.initLabel(ElliottWave_merge(point.label,{text:typeOptions.labels[i],point:function(target){return target.annotation.points[i]}}),false);point.label=label.options})}}ElliottWave.prototype.defaultOptions=ElliottWave_merge(Types_CrookedLine.prototype.defaultOptions,{typeOptions:{labels:["(0)","(A)","(B)","(C)","(D)","(E)"],line:{strokeWidth:1}},labelOptions:{align:"center",allowOverlap:true,crop:true,overflow:"none",type:"rect",backgroundColor:"none",borderWidth:0,y:-5}});Annotations_Annotation.types.elliottWave=ElliottWave;const Types_ElliottWave=null&&ElliottWave;const{merge:Tunnel_merge}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();function getSecondCoordinate(p1,p2,x){return(p2.y-p1.y)/(p2.x-p1.x)*(x-p1.x)+p1.y}class Tunnel extends Types_CrookedLine{getPointsOptions(){const pointsOptions=Types_CrookedLine.prototype.getPointsOptions.call(this),yAxisIndex=this.options.typeOptions.yAxis||0,yAxis=this.chart.yAxis[yAxisIndex];pointsOptions[2]=this.heightPointOptions(pointsOptions[1]);pointsOptions[3]=this.heightPointOptions(pointsOptions[0]);if(yAxis&&yAxis.logarithmic){const h=yAxis.toPixels(pointsOptions[2].y)-yAxis.toPixels(pointsOptions[1].y),y3=yAxis.toPixels(pointsOptions[0].y)+h;pointsOptions[3].y=yAxis.toValue(y3)}return pointsOptions}getControlPointsOptions(){return this.getPointsOptions().slice(0,2)}heightPointOptions(pointOptions){const heightPointOptions=Tunnel_merge(pointOptions),typeOptions=this.options.typeOptions;heightPointOptions.y+=typeOptions.height;return heightPointOptions}addControlPoints(){Types_CrookedLine.prototype.addControlPoints.call(this);const options=this.options,typeOptions=options.typeOptions,controlPoint=new Annotations_ControlPoint(this.chart,this,Tunnel_merge(options.controlPointOptions,typeOptions.heightControlPoint),2);this.controlPoints.push(controlPoint);typeOptions.heightControlPoint=controlPoint.options}addShapes(){this.addLine();this.addBackground()}addLine(){const line=this.initShape(Tunnel_merge(this.options.typeOptions.line,{type:"path",points:[this.points[0],this.points[1],function(target){const pointOptions=Annotations_MockPoint.pointToOptions(target.annotation.points[2]);pointOptions.command="M";return pointOptions},this.points[3]],className:"highcharts-tunnel-lines"}),0);this.options.typeOptions.line=line.options}addBackground(){const background=this.initShape(Tunnel_merge(this.options.typeOptions.background,{type:"path",points:this.points.slice(),className:"highcharts-tunnel-background"}),1);this.options.typeOptions.background=background.options}translateSide(dx,dy,end){const topIndex=Number(end),bottomIndex=topIndex===0?3:2;this.translatePoint(dx,dy,topIndex);this.translatePoint(dx,dy,bottomIndex)}translateHeight(dh){this.translatePoint(0,dh,2);this.translatePoint(0,dh,3);this.options.typeOptions.height=this.points[3].y-this.points[0].y;this.userOptions.typeOptions.height=this.options.typeOptions.height}}Tunnel.prototype.defaultOptions=Tunnel_merge(Types_CrookedLine.prototype.defaultOptions,{typeOptions:{background:{fill:"rgba(130, 170, 255, 0.4)",strokeWidth:0},line:{strokeWidth:1},height:-2,heightControlPoint:{positioner:function(target){const startXY=Annotations_MockPoint.pointToPixels(target.points[2]),endXY=Annotations_MockPoint.pointToPixels(target.points[3]),x=(startXY.x+endXY.x)/2;return{x:x-(this.graphic.width||0)/2,y:getSecondCoordinate(startXY,endXY,x)-(this.graphic.height||0)/2}},events:{drag:function(e,target){if(target.chart.isInsidePlot(e.chartX-target.chart.plotLeft,e.chartY-target.chart.plotTop,{visiblePlotOnly:true})){target.translateHeight(this.mouseMoveToTranslation(e).y);target.redraw(false)}}}}},controlPointOptions:{events:{drag:function(e,target){if(target.chart.isInsidePlot(e.chartX-target.chart.plotLeft,e.chartY-target.chart.plotTop,{visiblePlotOnly:true})){const translation=this.mouseMoveToTranslation(e);target.translateSide(translation.x,translation.y,!!this.index);target.redraw(false)}}}}});Annotations_Annotation.types.tunnel=Tunnel;const Types_Tunnel=Tunnel;const{merge:InfinityLine_merge}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();class InfinityLine extends Types_CrookedLine{static edgePoint(startIndex,endIndex){return function(target){const annotation=target.annotation,type=annotation.options.typeOptions.type;let points=annotation.points;if(type==="horizontalLine"||type==="verticalLine"){points=[points[0],new Annotations_MockPoint(annotation.chart,points[0].target,{x:points[0].x+ +(type==="horizontalLine"),y:points[0].y+ +(type==="verticalLine"),xAxis:points[0].options.xAxis,yAxis:points[0].options.yAxis})]}return InfinityLine.findEdgePoint(points[startIndex],points[endIndex])}}static findEdgeCoordinate(firstPoint,secondPoint,xOrY,edgePointFirstCoordinate){const xOrYOpposite=xOrY==="x"?"y":"x";return(secondPoint[xOrY]-firstPoint[xOrY])*(edgePointFirstCoordinate-firstPoint[xOrYOpposite])/(secondPoint[xOrYOpposite]-firstPoint[xOrYOpposite])+firstPoint[xOrY]}static findEdgePoint(firstPoint,secondPoint){const chart=firstPoint.series.chart,xAxis=firstPoint.series.xAxis,yAxis=secondPoint.series.yAxis,firstPointPixels=Annotations_MockPoint.pointToPixels(firstPoint),secondPointPixels=Annotations_MockPoint.pointToPixels(secondPoint),deltaX=secondPointPixels.x-firstPointPixels.x,deltaY=secondPointPixels.y-firstPointPixels.y,xAxisMin=xAxis.left,xAxisMax=xAxisMin+xAxis.width,yAxisMin=yAxis.top,yAxisMax=yAxisMin+yAxis.height,xLimit=deltaX<0?xAxisMin:xAxisMax,yLimit=deltaY<0?yAxisMin:yAxisMax,edgePoint={x:deltaX===0?firstPointPixels.x:xLimit,y:deltaY===0?firstPointPixels.y:yLimit};let edgePointX,edgePointY,swap;if(deltaX!==0&&deltaY!==0){edgePointY=InfinityLine.findEdgeCoordinate(firstPointPixels,secondPointPixels,"y",xLimit);edgePointX=InfinityLine.findEdgeCoordinate(firstPointPixels,secondPointPixels,"x",yLimit);if(edgePointY>=yAxisMin&&edgePointY<=yAxisMax){edgePoint.x=xLimit;edgePoint.y=edgePointY}else{edgePoint.x=edgePointX;edgePoint.y=yLimit}}edgePoint.x-=chart.plotLeft;edgePoint.y-=chart.plotTop;if(firstPoint.series.chart.inverted){swap=edgePoint.x;edgePoint.x=edgePoint.y;edgePoint.y=swap}return edgePoint}addShapes(){const typeOptions=this.options.typeOptions,points=[this.points[0],InfinityLine.endEdgePoint];if(typeOptions.type.match(/line/gi)){points[0]=InfinityLine.startEdgePoint}const line=this.initShape(InfinityLine_merge(typeOptions.line,{type:"path",points:points,className:"highcharts-infinity-lines"}),0);typeOptions.line=line.options}}InfinityLine.endEdgePoint=InfinityLine.edgePoint(0,1);InfinityLine.startEdgePoint=InfinityLine.edgePoint(1,0);InfinityLine.prototype.defaultOptions=InfinityLine_merge(Types_CrookedLine.prototype.defaultOptions,{});Annotations_Annotation.types.infinityLine=InfinityLine;const Types_InfinityLine=InfinityLine;"";const{merge:TimeCycles_merge,isNumber:TimeCycles_isNumber,defined:TimeCycles_defined}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();function getStartingPath(x,y){return["M",x,y]}function getCirclePath(pixelInterval,numberOfCircles,startX,y){const path=[];for(let i=1;i<=numberOfCircles;i++){path.push(["A",pixelInterval/2,pixelInterval/2,0,1,1,startX+i*pixelInterval,y])}return path}class TimeCycles extends Types_CrookedLine{init(annotation,userOptions,index){if(TimeCycles_defined(userOptions.yAxis)){userOptions.points.forEach(point=>{point.yAxis=userOptions.yAxis})}if(TimeCycles_defined(userOptions.xAxis)){userOptions.points.forEach(point=>{point.xAxis=userOptions.xAxis})}super.init(annotation,userOptions,index)}setPath(){this.shapes[0].options.d=this.getPath()}getPath(){return[getStartingPath(this.startX,this.y)].concat(getCirclePath(this.pixelInterval,this.numberOfCircles,this.startX,this.y))}addShapes(){const typeOptions=this.options.typeOptions;this.setPathProperties();const shape=this.initShape(TimeCycles_merge(typeOptions.line,{type:"path",d:this.getPath(),points:this.options.points,className:"highcharts-timecycles-lines"}),0);typeOptions.line=shape.options}addControlPoints(){const options=this.options,typeOptions=options.typeOptions;options.controlPointOptions.style.cursor=this.chart.inverted?"ns-resize":"ew-resize";typeOptions.controlPointOptions.forEach(option=>{const controlPointsOptions=TimeCycles_merge(options.controlPointOptions,option);const controlPoint=new Annotations_ControlPoint(this.chart,this,controlPointsOptions,0);this.controlPoints.push(controlPoint)})}setPathProperties(){const options=this.options.typeOptions,points=options.points;if(!points){return}const point1=points[0],point2=points[1],xAxisNumber=options.xAxis||0,yAxisNumber=options.yAxis||0,xAxis=this.chart.xAxis[xAxisNumber],yAxis=this.chart.yAxis[yAxisNumber],xValue1=point1.x,yValue=point1.y,xValue2=point2.x;if(!xValue1||!xValue2){return}const y=TimeCycles_isNumber(yValue)?yAxis.toPixels(yValue):yAxis.top+yAxis.height,x=TimeCycles_isNumber(xValue1)?xAxis.toPixels(xValue1):xAxis.left,x2=TimeCycles_isNumber(xValue2)?xAxis.toPixels(xValue2):xAxis.left+30,xAxisLength=xAxis.len,pixelInterval=Math.round(Math.max(Math.abs(x2-x),2)),numberOfCircles=Math.floor(xAxisLength/pixelInterval)+2,pixelShift=(Math.floor((x-xAxis.left)/pixelInterval)+1)*pixelInterval;this.startX=x-pixelShift;this.y=y;this.pixelInterval=pixelInterval;this.numberOfCircles=numberOfCircles}redraw(animation){this.setPathProperties();this.setPath();super.redraw(animation)}}TimeCycles.prototype.defaultOptions=TimeCycles_merge(Types_CrookedLine.prototype.defaultOptions,{typeOptions:{controlPointOptions:[{positioner:function(target){const point=target.points[0],position=target.anchor(point).absolutePosition;return{x:position.x-(this.graphic.width||0)/2,y:target.y-(this.graphic.height||0)}},events:{drag:function(e,target){const position=target.anchor(target.points[0]).absolutePosition;target.translatePoint(e.chartX-position.x,0,0);target.redraw(false)}}},{positioner:function(target){const point=target.points[1],position=target.anchor(point).absolutePosition;return{x:position.x-(this.graphic.width||0)/2,y:target.y-(this.graphic.height||0)}},events:{drag:function(e,target){const position=target.anchor(target.points[1]).absolutePosition;target.translatePoint(e.chartX-position.x,0,1);target.redraw(false)}}}]}});Annotations_Annotation.types.timeCycles=TimeCycles;const Types_TimeCycles=null&&TimeCycles;const{merge:Fibonacci_merge}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();function createPathDGenerator(retracementIndex,isBackground){return function(){const annotation=this.annotation;if(!annotation.startRetracements||!annotation.endRetracements){return[]}const leftTop=this.anchor(annotation.startRetracements[retracementIndex]).absolutePosition,rightTop=this.anchor(annotation.endRetracements[retracementIndex]).absolutePosition,d=[["M",Math.round(leftTop.x),Math.round(leftTop.y)],["L",Math.round(rightTop.x),Math.round(rightTop.y)]];if(isBackground){const rightBottom=this.anchor(annotation.endRetracements[retracementIndex-1]).absolutePosition;const leftBottom=this.anchor(annotation.startRetracements[retracementIndex-1]).absolutePosition;d.push(["L",Math.round(rightBottom.x),Math.round(rightBottom.y)],["L",Math.round(leftBottom.x),Math.round(leftBottom.y)])}return d}}class Fibonacci extends Types_Tunnel{linkPoints(){super.linkPoints();this.linkRetracementsPoints();return}linkRetracementsPoints(){const points=this.points,startDiff=points[0].y-points[3].y,endDiff=points[1].y-points[2].y,startX=points[0].x,endX=points[1].x;Fibonacci.levels.forEach((level,i)=>{const startRetracement=points[0].y-startDiff*level,endRetracement=points[1].y-endDiff*level,index=this.options.typeOptions.reversed?Fibonacci.levels.length-i-1:i;this.startRetracements=this.startRetracements||[];this.endRetracements=this.endRetracements||[];this.linkRetracementPoint(index,startX,startRetracement,this.startRetracements);this.linkRetracementPoint(index,endX,endRetracement,this.endRetracements)})}linkRetracementPoint(pointIndex,x,y,retracements){const point=retracements[pointIndex],typeOptions=this.options.typeOptions;if(!point){retracements[pointIndex]=new Annotations_MockPoint(this.chart,this,{x:x,y:y,xAxis:typeOptions.xAxis,yAxis:typeOptions.yAxis})}else{point.options.x=x;point.options.y=y;point.refresh()}}addShapes(){Fibonacci.levels.forEach(function(_level,i){const{backgroundColors,lineColor,lineColors}=this.options.typeOptions;this.initShape({type:"path",d:createPathDGenerator(i),stroke:lineColors[i]||lineColor,className:"highcharts-fibonacci-line"},i);if(i>0){this.initShape({type:"path",fill:backgroundColors[i-1],strokeWidth:0,d:createPathDGenerator(i,true),className:"highcharts-fibonacci-background-"+(i-1)})}},this)}addLabels(){Fibonacci.levels.forEach(function(level,i){const options=this.options.typeOptions,label=this.initLabel(Fibonacci_merge(options.labels[i],{point:function(target){const point=Annotations_MockPoint.pointToOptions(target.annotation.startRetracements[i]);return point},text:level.toString()}));options.labels[i]=label.options},this)}}Fibonacci.levels=[0,.236,.382,.5,.618,.786,1];Fibonacci.prototype.defaultOptions=Fibonacci_merge(Types_Tunnel.prototype.defaultOptions,{typeOptions:{reversed:false,height:2,backgroundColors:["rgba(130, 170, 255, 0.4)","rgba(139, 191, 216, 0.4)","rgba(150, 216, 192, 0.4)","rgba(156, 229, 161, 0.4)","rgba(162, 241, 130, 0.4)","rgba(169, 255, 101, 0.4)"],lineColor:"#999999",lineColors:[],labels:[]},labelOptions:{allowOverlap:true,align:"right",backgroundColor:"none",borderWidth:0,crop:false,overflow:"none",shape:"rect",style:{color:"grey"},verticalAlign:"middle",y:0}});Annotations_Annotation.types.fibonacci=Fibonacci;const Types_Fibonacci=null&&Fibonacci;const{merge:FibonacciTimeZones_merge}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();function edgePoint(startIndex,endIndex,fibonacciIndex){return function(target){const chart=target.annotation.chart,plotLeftOrTop=chart.inverted?chart.plotTop:chart.plotLeft;let points=target.annotation.points;const xAxis=points[0].series.xAxis,deltaX=points.length>1?points[1].plotX-points[0].plotX:0,x=xAxis.toValue(points[0].plotX+plotLeftOrTop+fibonacciIndex*deltaX);points=[new Annotations_MockPoint(chart,points[0].target,{x:x,y:0,xAxis:points[0].options.xAxis,yAxis:points[0].options.yAxis}),new Annotations_MockPoint(chart,points[0].target,{x:x,y:1,xAxis:points[0].options.xAxis,yAxis:points[0].options.yAxis})];return Types_InfinityLine.findEdgePoint(points[startIndex],points[endIndex])}}class FibonacciTimeZones extends Types_CrookedLine{addShapes(){const numberOfLines=11;let fibb=1,nextFibb=1;for(let i=0;i<numberOfLines;i++){const correctedFibb=!i?0:fibb,points=[edgePoint(1,0,correctedFibb),edgePoint(0,1,correctedFibb)];nextFibb=fibb+nextFibb;fibb=nextFibb-fibb;if(i===1){this.secondLineEdgePoints=[points[0],points[1]]}this.initShape(FibonacciTimeZones_merge(this.options.typeOptions.line,{type:"path",points:points,className:"highcharts-fibonacci-timezones-lines"}),i)}}addControlPoints(){const options=this.options,typeOptions=options.typeOptions,controlPoint=new Annotations_ControlPoint(this.chart,this,FibonacciTimeZones_merge(options.controlPointOptions,typeOptions.controlPointOptions),0);this.controlPoints.push(controlPoint);typeOptions.controlPointOptions=controlPoint.options}}FibonacciTimeZones.prototype.defaultOptions=FibonacciTimeZones_merge(Types_CrookedLine.prototype.defaultOptions,{typeOptions:{line:{stroke:"rgba(0, 0, 0, 0.75)",strokeWidth:1,fill:void 0},controlPointOptions:{positioner:function(){const target=this.target,graphic=this.graphic,edgePoints=target.secondLineEdgePoints,args={annotation:target},firstEdgePointY=edgePoints[0](args).y,secondEdgePointY=edgePoints[1](args).y,plotLeft=this.chart.plotLeft,plotTop=this.chart.plotTop;let x=edgePoints[0](args).x,y=(firstEdgePointY+secondEdgePointY)/2;if(this.chart.inverted){[x,y]=[y,x]}return{x:plotLeft+x-(graphic.width||0)/2,y:plotTop+y-(graphic.height||0)/2}},events:{drag:function(e,target){const isInsidePlot=target.chart.isInsidePlot(e.chartX-target.chart.plotLeft,e.chartY-target.chart.plotTop,{visiblePlotOnly:true});if(isInsidePlot){const translation=this.mouseMoveToTranslation(e);target.translatePoint(translation.x,0,1);target.redraw(false)}}}}}});Annotations_Annotation.types.fibonacciTimeZones=FibonacciTimeZones;const Types_FibonacciTimeZones=null&&FibonacciTimeZones;const{merge:Pitchfork_merge}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();class Pitchfork extends Types_InfinityLine{static outerLineEdgePoint(firstPointIndex){return function(target){const annotation=target.annotation,points=annotation.points;return Pitchfork.findEdgePoint(points[firstPointIndex],points[0],new Annotations_MockPoint(annotation.chart,target,annotation.midPointOptions()))}}static findEdgePoint(point,firstAnglePoint,secondAnglePoint){const angle=Math.atan2(secondAnglePoint.plotY-firstAnglePoint.plotY,secondAnglePoint.plotX-firstAnglePoint.plotX),distance=1e7;return{x:point.plotX+distance*Math.cos(angle),y:point.plotY+distance*Math.sin(angle)}}static middleLineEdgePoint(target){const annotation=target.annotation,points=annotation.points;return Types_InfinityLine.findEdgePoint(points[0],new Annotations_MockPoint(annotation.chart,target,annotation.midPointOptions()))}midPointOptions(){const points=this.points;return{x:(points[1].x+points[2].x)/2,y:(points[1].y+points[2].y)/2,xAxis:points[0].series.xAxis,yAxis:points[0].series.yAxis}}addShapes(){this.addLines();this.addBackgrounds()}addLines(){const className="highcharts-pitchfork-lines";this.initShape({type:"path",points:[this.points[0],Pitchfork.middleLineEdgePoint],className:className},0);this.initShape({type:"path",points:[this.points[1],Pitchfork.topLineEdgePoint],className:className},1);this.initShape({type:"path",points:[this.points[2],Pitchfork.bottomLineEdgePoint],className:className},2)}addBackgrounds(){const shapes=this.shapes,typeOptions=this.options.typeOptions;const innerBackground=this.initShape(Pitchfork_merge(typeOptions.innerBackground,{type:"path",points:[function(target){const annotation=target.annotation,points=annotation.points,midPointOptions=annotation.midPointOptions();return{x:(points[1].x+midPointOptions.x)/2,y:(points[1].y+midPointOptions.y)/2,xAxis:midPointOptions.xAxis,yAxis:midPointOptions.yAxis}},shapes[1].points[1],shapes[2].points[1],function(target){const annotation=target.annotation,points=annotation.points,midPointOptions=annotation.midPointOptions();return{x:(midPointOptions.x+points[2].x)/2,y:(midPointOptions.y+points[2].y)/2,xAxis:midPointOptions.xAxis,yAxis:midPointOptions.yAxis}}],className:"highcharts-pitchfork-inner-background"}),3);const outerBackground=this.initShape(Pitchfork_merge(typeOptions.outerBackground,{type:"path",points:[this.points[1],shapes[1].points[1],shapes[2].points[1],this.points[2]],className:"highcharts-pitchfork-outer-background"}),4);typeOptions.innerBackground=innerBackground.options;typeOptions.outerBackground=outerBackground.options}}Pitchfork.topLineEdgePoint=Pitchfork.outerLineEdgePoint(1);Pitchfork.bottomLineEdgePoint=Pitchfork.outerLineEdgePoint(0);Pitchfork.prototype.defaultOptions=Pitchfork_merge(Types_InfinityLine.prototype.defaultOptions,{typeOptions:{innerBackground:{fill:"rgba(130, 170, 255, 0.4)",strokeWidth:0},outerBackground:{fill:"rgba(156, 229, 161, 0.4)",strokeWidth:0}}});Annotations_Annotation.types.pitchfork=Pitchfork;const Types_Pitchfork=null&&Pitchfork;const{merge:VerticalLine_merge,pick:VerticalLine_pick}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();class VerticalLine extends Annotations_Annotation{static connectorFirstPoint(target){const annotation=target.annotation,chart=annotation.chart,inverted=chart.inverted,point=annotation.points[0],left=VerticalLine_pick(point.series.yAxis&&point.series.yAxis.left,0),top=VerticalLine_pick(point.series.yAxis&&point.series.yAxis.top,0),offset=annotation.options.typeOptions.label.offset,y=Annotations_MockPoint.pointToPixels(point,true)[inverted?"x":"y"];return{x:point.x,xAxis:point.series.xAxis,y:y+offset+(inverted?left-chart.plotLeft:top-chart.plotTop)}}static connectorSecondPoint(target){const annotation=target.annotation,chart=annotation.chart,inverted=chart.inverted,typeOptions=annotation.options.typeOptions,point=annotation.points[0],left=VerticalLine_pick(point.series.yAxis&&point.series.yAxis.left,0),top=VerticalLine_pick(point.series.yAxis&&point.series.yAxis.top,0),y=Annotations_MockPoint.pointToPixels(point,true)[inverted?"x":"y"];let yOffset=typeOptions.yOffset;if(typeOptions.label.offset<0){yOffset*=-1}return{x:point.x,xAxis:point.series.xAxis,y:y+yOffset+(inverted?left-chart.plotLeft:top-chart.plotTop)}}getPointsOptions(){return[this.options.typeOptions.point]}addShapes(){const typeOptions=this.options.typeOptions,connector=this.initShape(VerticalLine_merge(typeOptions.connector,{type:"path",points:[VerticalLine.connectorFirstPoint,VerticalLine.connectorSecondPoint],className:"highcharts-vertical-line"}),0);typeOptions.connector=connector.options;this.userOptions.typeOptions.point=typeOptions.point}addLabels(){const typeOptions=this.options.typeOptions,labelOptions=typeOptions.label;let x=0,y=labelOptions.offset,verticalAlign=labelOptions.offset<0?"bottom":"top",align="center";if(this.chart.inverted){x=labelOptions.offset;y=0;verticalAlign="middle";align=labelOptions.offset<0?"right":"left"}const label=this.initLabel(VerticalLine_merge(labelOptions,{verticalAlign:verticalAlign,align:align,x:x,y:y}));typeOptions.label=label.options}}VerticalLine.prototype.defaultOptions=VerticalLine_merge(Annotations_Annotation.prototype.defaultOptions,{typeOptions:{yOffset:10,label:{offset:-40,point:function(target){return target.annotation.points[0]},allowOverlap:true,backgroundColor:"none",borderWidth:0,crop:true,overflow:"none",shape:"rect",text:"{y:.2f}"},connector:{strokeWidth:1,markerEnd:"arrow"}}});Annotations_Annotation.types.verticalLine=VerticalLine;const Types_VerticalLine=null&&VerticalLine;const{defined:Measure_defined,extend:Measure_extend,isNumber:Measure_isNumber,merge:Measure_merge,pick:Measure_pick}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();function average(){let average="";if(this.max!==""&&this.min!==""){average=(this.max+this.min)/2}return average}function bins(){const series=this.chart.series,ext=getExtremes(this.xAxisMin,this.xAxisMax,this.yAxisMin,this.yAxisMax);let bins=0,isCalculated=false;series.forEach(serie=>{if(serie.visible&&serie.options.id!=="highcharts-navigator-series"){serie.points.forEach(point=>{if(!point.isNull&&point.x>ext.xAxisMin&&point.x<=ext.xAxisMax&&point.y>ext.yAxisMin&&point.y<=ext.yAxisMax){bins++;isCalculated=true}})}});if(!isCalculated){bins=""}return bins}function defaultFormatter(){return"Min: "+this.min+"<br>Max: "+this.max+"<br>Average: "+this.average+"<br>Bins: "+this.bins}function getExtremes(xAxisMin,xAxisMax,yAxisMin,yAxisMax){return{xAxisMin:Math.min(xAxisMax,xAxisMin),xAxisMax:Math.max(xAxisMax,xAxisMin),yAxisMin:Math.min(yAxisMax,yAxisMin),yAxisMax:Math.max(yAxisMax,yAxisMin)}}function getPointPos(axis,value,offset){return axis.toValue(axis.toPixels(value)+offset)}function Measure_init(){const options=this.options.typeOptions,chart=this.chart,inverted=chart.inverted,xAxis=chart.xAxis[options.xAxis],yAxis=chart.yAxis[options.yAxis],bck=options.background,width=inverted?bck.height:bck.width,height=inverted?bck.width:bck.height,selectType=options.selectType,top=inverted?xAxis.left:yAxis.top,left=inverted?yAxis.top:xAxis.left;this.startXMin=options.point.x;this.startYMin=options.point.y;if(Measure_isNumber(width)){this.startXMax=this.startXMin+width}else{this.startXMax=getPointPos(xAxis,this.startXMin,parseFloat(width))}if(Measure_isNumber(height)){this.startYMax=this.startYMin-height}else{this.startYMax=getPointPos(yAxis,this.startYMin,parseFloat(height))}if(selectType==="x"){this.startYMin=yAxis.toValue(top);this.startYMax=yAxis.toValue(top+yAxis.len)}else if(selectType==="y"){this.startXMin=xAxis.toValue(left);this.startXMax=xAxis.toValue(left+xAxis.len)}}function max(){const series=this.chart.series,ext=getExtremes(this.xAxisMin,this.xAxisMax,this.yAxisMin,this.yAxisMax);let max=-Infinity,isCalculated=false;series.forEach(serie=>{if(serie.visible&&serie.options.id!=="highcharts-navigator-series"){serie.points.forEach(point=>{if(!point.isNull&&point.y>max&&point.x>ext.xAxisMin&&point.x<=ext.xAxisMax&&point.y>ext.yAxisMin&&point.y<=ext.yAxisMax){max=point.y;isCalculated=true}})}});if(!isCalculated){max=""}return max}function min(){const series=this.chart.series,ext=getExtremes(this.xAxisMin,this.xAxisMax,this.yAxisMin,this.yAxisMax);let min=Infinity,isCalculated=false;series.forEach(serie=>{if(serie.visible&&serie.options.id!=="highcharts-navigator-series"){serie.points.forEach(point=>{if(!point.isNull&&point.y<min&&point.x>ext.xAxisMin&&point.x<=ext.xAxisMax&&point.y>ext.yAxisMin&&point.y<=ext.yAxisMax){min=point.y;isCalculated=true}})}});if(!isCalculated){min=""}return min}function recalculate(resize){const options=this.options.typeOptions,xAxis=this.chart.xAxis[options.xAxis],yAxis=this.chart.yAxis[options.yAxis],offsetX=this.offsetX,offsetY=this.offsetY;this.xAxisMin=getPointPos(xAxis,this.startXMin,offsetX);this.xAxisMax=getPointPos(xAxis,this.startXMax,offsetX);this.yAxisMin=getPointPos(yAxis,this.startYMin,offsetY);this.yAxisMax=getPointPos(yAxis,this.startYMax,offsetY);this.min=min.call(this);this.max=max.call(this);this.average=average.call(this);this.bins=bins.call(this);if(resize){this.resize(0,0)}}function updateStartPoints(redraw,resize,cpIndex,dx,dy){const options=this.options.typeOptions,selectType=options.selectType,xAxis=this.chart.xAxis[options.xAxis],yAxis=this.chart.yAxis[options.yAxis],startXMin=this.startXMin,startXMax=this.startXMax,startYMin=this.startYMin,startYMax=this.startYMax,offsetX=this.offsetX,offsetY=this.offsetY;if(resize){if(selectType==="x"){if(cpIndex===0){this.startXMin=getPointPos(xAxis,startXMin,dx)}else{this.startXMax=getPointPos(xAxis,startXMax,dx)}}else if(selectType==="y"){if(cpIndex===0){this.startYMin=getPointPos(yAxis,startYMin,dy)}else{this.startYMax=getPointPos(yAxis,startYMax,dy)}}else{this.startXMax=getPointPos(xAxis,startXMax,dx);this.startYMax=getPointPos(yAxis,startYMax,dy)}}if(redraw){this.startXMin=getPointPos(xAxis,startXMin,offsetX);this.startXMax=getPointPos(xAxis,startXMax,offsetX);this.startYMin=getPointPos(yAxis,startYMin,offsetY);this.startYMax=getPointPos(yAxis,startYMax,offsetY);this.offsetX=0;this.offsetY=0}this.options.typeOptions.point={x:this.startXMin,y:this.startYMin};this.userOptions.typeOptions.point={x:this.startXMin,y:this.startYMin}}class Measure extends Annotations_Annotation{init(annotationOrChart,userOptions,index){super.init(annotationOrChart,userOptions,index);this.offsetX=0;this.offsetY=0;this.resizeX=0;this.resizeY=0;Measure_init.call(this);this.addValues();this.addShapes()}setClipAxes(){this.clipXAxis=this.chart.xAxis[this.options.typeOptions.xAxis];this.clipYAxis=this.chart.yAxis[this.options.typeOptions.yAxis]}pointsOptions(){return this.options.points}shapePointsOptions(){const options=this.options.typeOptions,xAxis=options.xAxis,yAxis=options.yAxis;return[{x:this.xAxisMin,y:this.yAxisMin,xAxis:xAxis,yAxis:yAxis},{x:this.xAxisMax,y:this.yAxisMin,xAxis:xAxis,yAxis:yAxis},{x:this.xAxisMax,y:this.yAxisMax,xAxis:xAxis,yAxis:yAxis},{x:this.xAxisMin,y:this.yAxisMax,xAxis:xAxis,yAxis:yAxis},{command:"Z"}]}addControlPoints(){const inverted=this.chart.inverted,options=this.options.controlPointOptions,selectType=this.options.typeOptions.selectType;if(!Measure_defined(this.userOptions.controlPointOptions&&this.userOptions.controlPointOptions.style.cursor)){if(selectType==="x"){options.style.cursor=inverted?"ns-resize":"ew-resize"}else if(selectType==="y"){options.style.cursor=inverted?"ew-resize":"ns-resize"}}let controlPoint=new Annotations_ControlPoint(this.chart,this,this.options.controlPointOptions,0);this.controlPoints.push(controlPoint);if(selectType!=="xy"){controlPoint=new Annotations_ControlPoint(this.chart,this,this.options.controlPointOptions,1);this.controlPoints.push(controlPoint)}}addValues(resize){const typeOptions=this.options.typeOptions,formatter=typeOptions.label.formatter;recalculate.call(this,resize);if(!typeOptions.label.enabled){return}if(this.labels.length>0){this.labels[0].text=formatter&&formatter.call(this)||defaultFormatter.call(this)}else{this.initLabel(Measure_extend({shape:"rect",backgroundColor:"none",color:"black",borderWidth:0,dashStyle:"Dash",overflow:"allow",align:"left",y:0,x:0,verticalAlign:"top",crop:true,xAxis:0,yAxis:0,point:function(target){const annotation=target.annotation,options=target.options;return{x:annotation.xAxisMin,y:annotation.yAxisMin,xAxis:Measure_pick(typeOptions.xAxis,options.xAxis),yAxis:Measure_pick(typeOptions.yAxis,options.yAxis)}},text:formatter&&formatter.call(this)||defaultFormatter.call(this)},typeOptions.label),void 0)}}addShapes(){this.addCrosshairs();this.addBackground()}addBackground(){const shapePoints=this.shapePointsOptions();if(typeof shapePoints[0].x==="undefined"){return}this.initShape(Measure_extend({type:"path",points:shapePoints,className:"highcharts-measure-background"},this.options.typeOptions.background),2)}addCrosshairs(){const chart=this.chart,options=this.options.typeOptions,point=this.options.typeOptions.point,xAxis=chart.xAxis[options.xAxis],yAxis=chart.yAxis[options.yAxis],inverted=chart.inverted,defaultOptions={point:point,type:"path"};let xAxisMin=xAxis.toPixels(this.xAxisMin),xAxisMax=xAxis.toPixels(this.xAxisMax),yAxisMin=yAxis.toPixels(this.yAxisMin),yAxisMax=yAxis.toPixels(this.yAxisMax),pathH=[],pathV=[],crosshairOptionsX,crosshairOptionsY,temp;if(inverted){temp=xAxisMin;xAxisMin=yAxisMin;yAxisMin=temp;temp=xAxisMax;xAxisMax=yAxisMax;yAxisMax=temp}if(options.crosshairX.enabled){pathH=[["M",xAxisMin,yAxisMin+(yAxisMax-yAxisMin)/2],["L",xAxisMax,yAxisMin+(yAxisMax-yAxisMin)/2]]}if(options.crosshairY.enabled){pathV=[["M",xAxisMin+(xAxisMax-xAxisMin)/2,yAxisMin],["L",xAxisMin+(xAxisMax-xAxisMin)/2,yAxisMax]]}if(this.shapes.length>0){this.shapes[0].options.d=pathH;this.shapes[1].options.d=pathV}else{crosshairOptionsX=Measure_merge(defaultOptions,{className:"highcharts-measure-crosshair-x"},options.crosshairX);crosshairOptionsY=Measure_merge(defaultOptions,{className:"highcharts-measure-crosshair-y"},options.crosshairY);this.initShape(Measure_extend({d:pathH},crosshairOptionsX),0);this.initShape(Measure_extend({d:pathV},crosshairOptionsY),1)}}onDrag(e){const translation=this.mouseMoveToTranslation(e),selectType=this.options.typeOptions.selectType,x=selectType==="y"?0:translation.x,y=selectType==="x"?0:translation.y;this.translate(x,y);this.offsetX+=x;this.offsetY+=y;this.redraw(false,false,true)}resize(dx,dy,cpIndex,selectType){const bckShape=this.shapes[2];if(selectType==="x"){if(cpIndex===0){bckShape.translatePoint(dx,0,0);bckShape.translatePoint(dx,dy,3)}else{bckShape.translatePoint(dx,0,1);bckShape.translatePoint(dx,dy,2)}}else if(selectType==="y"){if(cpIndex===0){bckShape.translatePoint(0,dy,0);bckShape.translatePoint(0,dy,1)}else{bckShape.translatePoint(0,dy,2);bckShape.translatePoint(0,dy,3)}}else{bckShape.translatePoint(dx,0,1);bckShape.translatePoint(dx,dy,2);bckShape.translatePoint(0,dy,3)}updateStartPoints.call(this,false,true,cpIndex,dx,dy);this.options.typeOptions.background.height=Math.abs(this.startYMax-this.startYMin);this.options.typeOptions.background.width=Math.abs(this.startXMax-this.startXMin)}redraw(animation,resize,setStartPoints){this.linkPoints();if(!this.graphic){this.render()}if(setStartPoints){updateStartPoints.call(this,true,false)}if(this.clipRect){this.clipRect.animate(this.getClipBox())}this.addValues(resize);this.addCrosshairs();this.redrawItems(this.shapes,animation);this.redrawItems(this.labels,animation);const backgroundOptions=this.options.typeOptions.background;if(backgroundOptions?.strokeWidth&&this.shapes[2]?.graphic){const offset=backgroundOptions.strokeWidth/2;const background=this.shapes[2];const path=background.graphic.pathArray;const p1=path[0];const p2=path[1];const p3=path[2];const p4=path[3];p1[1]=(p1[1]||0)+offset;p2[1]=(p2[1]||0)-offset;p3[1]=(p3[1]||0)-offset;p4[1]=(p4[1]||0)+offset;p1[2]=(p1[2]||0)+offset;p2[2]=(p2[2]||0)+offset;p3[2]=(p3[2]||0)-offset;p4[2]=(p4[2]||0)-offset;background.graphic.attr({d:path})}this.controlPoints.forEach(controlPoint=>controlPoint.redraw())}translate(dx,dy){this.shapes.forEach(item=>item.translate(dx,dy))}}Measure.prototype.defaultOptions=Measure_merge(Annotations_Annotation.prototype.defaultOptions,{typeOptions:{selectType:"xy",xAxis:0,yAxis:0,background:{fill:"rgba(130, 170, 255, 0.4)",strokeWidth:0,stroke:void 0},crosshairX:{enabled:true,zIndex:6,dashStyle:"Dash",markerEnd:"arrow"},crosshairY:{enabled:true,zIndex:6,dashStyle:"Dash",markerEnd:"arrow"},label:{enabled:true,style:{fontSize:"0.7em",color:"#666666"},formatter:void 0}},controlPointOptions:{positioner:function(target){const cpIndex=this.index,chart=target.chart,options=target.options,typeOptions=options.typeOptions,selectType=typeOptions.selectType,controlPointOptions=options.controlPointOptions,inverted=chart.inverted,xAxis=chart.xAxis[typeOptions.xAxis],yAxis=chart.yAxis[typeOptions.yAxis],ext=getExtremes(target.xAxisMin,target.xAxisMax,target.yAxisMin,target.yAxisMax);let targetX=target.xAxisMax,targetY=target.yAxisMax,x,y;if(selectType==="x"){targetY=(ext.yAxisMax+ext.yAxisMin)/2;if(cpIndex===0){targetX=target.xAxisMin}}if(selectType==="y"){targetX=ext.xAxisMin+(ext.xAxisMax-ext.xAxisMin)/2;if(cpIndex===0){targetY=target.yAxisMin}}if(inverted){x=yAxis.toPixels(targetY);y=xAxis.toPixels(targetX)}else{x=xAxis.toPixels(targetX);y=yAxis.toPixels(targetY)}return{x:x-controlPointOptions.width/2,y:y-controlPointOptions.height/2}},events:{drag:function(e,target){const translation=this.mouseMoveToTranslation(e),selectType=target.options.typeOptions.selectType,index=this.index,x=selectType==="y"?0:translation.x,y=selectType==="x"?0:translation.y;target.resize(x,y,index,selectType);target.resizeX+=x;target.resizeY+=y;target.redraw(false,true)}}}});Annotations_Annotation.types.measure=Measure;const Types_Measure=null&&Measure;const annotations_advanced_src=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();__webpack_exports__=__webpack_exports__["default"];return __webpack_exports__})()});