(function webpackUniversalModuleDefinition(root,factory){if(typeof exports==="object"&&typeof module==="object")module.exports=factory(root["_Highcharts"],root["_Highcharts"]["Axis"],root["_Highcharts"]["Point"],root["_Highcharts"]["Series"],root["_Highcharts"]["Color"],root["_Highcharts"]["SeriesRegistry"],root["_Highcharts"]["RendererRegistry"],root["_Highcharts"]["SVGRenderer"],root["_Highcharts"]["SVGElement"],root["_Highcharts"]["Chart"],root["_Highcharts"]["Templating"],root["_Highcharts"]["Series"]["types"]["column"],root["_Highcharts"]["StackItem"]);else if(typeof define==="function"&&define.amd)define("highcharts/modules/stock",["highcharts/highcharts"],function(amd1){return factory(amd1,amd1["Axis"],amd1["Point"],amd1["Series"],amd1["Color"],amd1["SeriesRegistry"],amd1["RendererRegistry"],amd1["SVGRenderer"],amd1["SVGElement"],amd1["Chart"],amd1["Templating"],amd1["Series"],["types"],["column"],amd1["StackItem"])});else if(typeof exports==="object")exports["highcharts/modules/stock"]=factory(root["_Highcharts"],root["_Highcharts"]["Axis"],root["_Highcharts"]["Point"],root["_Highcharts"]["Series"],root["_Highcharts"]["Color"],root["_Highcharts"]["SeriesRegistry"],root["_Highcharts"]["RendererRegistry"],root["_Highcharts"]["SVGRenderer"],root["_Highcharts"]["SVGElement"],root["_Highcharts"]["Chart"],root["_Highcharts"]["Templating"],root["_Highcharts"]["Series"]["types"]["column"],root["_Highcharts"]["StackItem"]);else root["Highcharts"]=factory(root["Highcharts"],root["Highcharts"]["Axis"],root["Highcharts"]["Point"],root["Highcharts"]["Series"],root["Highcharts"]["Color"],root["Highcharts"]["SeriesRegistry"],root["Highcharts"]["RendererRegistry"],root["Highcharts"]["SVGRenderer"],root["Highcharts"]["SVGElement"],root["Highcharts"]["Chart"],root["Highcharts"]["Templating"],root["Highcharts"]["Series"]["types"]["column"],root["Highcharts"]["StackItem"])})(typeof window==="undefined"?this:window,(__WEBPACK_EXTERNAL_MODULE__944__,__WEBPACK_EXTERNAL_MODULE__532__,__WEBPACK_EXTERNAL_MODULE__260__,__WEBPACK_EXTERNAL_MODULE__820__,__WEBPACK_EXTERNAL_MODULE__620__,__WEBPACK_EXTERNAL_MODULE__512__,__WEBPACK_EXTERNAL_MODULE__608__,__WEBPACK_EXTERNAL_MODULE__540__,__WEBPACK_EXTERNAL_MODULE__28__,__WEBPACK_EXTERNAL_MODULE__960__,__WEBPACK_EXTERNAL_MODULE__984__,__WEBPACK_EXTERNAL_MODULE__448__,__WEBPACK_EXTERNAL_MODULE__184__)=>{return(()=>{"use strict";var __webpack_modules__={532:module=>{module.exports=__WEBPACK_EXTERNAL_MODULE__532__},960:module=>{module.exports=__WEBPACK_EXTERNAL_MODULE__960__},620:module=>{module.exports=__WEBPACK_EXTERNAL_MODULE__620__},260:module=>{module.exports=__WEBPACK_EXTERNAL_MODULE__260__},608:module=>{module.exports=__WEBPACK_EXTERNAL_MODULE__608__},28:module=>{module.exports=__WEBPACK_EXTERNAL_MODULE__28__},540:module=>{module.exports=__WEBPACK_EXTERNAL_MODULE__540__},448:module=>{module.exports=__WEBPACK_EXTERNAL_MODULE__448__},820:module=>{module.exports=__WEBPACK_EXTERNAL_MODULE__820__},512:module=>{module.exports=__WEBPACK_EXTERNAL_MODULE__512__},184:module=>{module.exports=__WEBPACK_EXTERNAL_MODULE__184__},984:module=>{module.exports=__WEBPACK_EXTERNAL_MODULE__984__},944:module=>{module.exports=__WEBPACK_EXTERNAL_MODULE__944__}};var __webpack_module_cache__={};function __webpack_require__(moduleId){var cachedModule=__webpack_module_cache__[moduleId];if(cachedModule!==undefined){return cachedModule.exports}var module=__webpack_module_cache__[moduleId]={exports:{}};__webpack_modules__[moduleId](module,module.exports,__webpack_require__);return module.exports}(()=>{__webpack_require__.n=module=>{var getter=module&&module.__esModule?()=>module["default"]:()=>module;__webpack_require__.d(getter,{a:getter});return getter}})();(()=>{__webpack_require__.d=(exports,definition)=>{for(var key in definition){if(__webpack_require__.o(definition,key)&&!__webpack_require__.o(exports,key)){Object.defineProperty(exports,key,{enumerable:true,get:definition[key]})}}}})();(()=>{__webpack_require__.o=(obj,prop)=>Object.prototype.hasOwnProperty.call(obj,prop)})();var __webpack_exports__={};__webpack_require__.d(__webpack_exports__,{default:()=>stock_src});var highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_=__webpack_require__(944);var highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default=__webpack_require__.n(highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_);var highcharts_Axis_commonjs_highcharts_Axis_commonjs2_highcharts_Axis_root_Highcharts_Axis_=__webpack_require__(532);var highcharts_Axis_commonjs_highcharts_Axis_commonjs2_highcharts_Axis_root_Highcharts_Axis_default=__webpack_require__.n(highcharts_Axis_commonjs_highcharts_Axis_commonjs2_highcharts_Axis_root_Highcharts_Axis_);var highcharts_Point_commonjs_highcharts_Point_commonjs2_highcharts_Point_root_Highcharts_Point_=__webpack_require__(260);var highcharts_Point_commonjs_highcharts_Point_commonjs2_highcharts_Point_root_Highcharts_Point_default=__webpack_require__.n(highcharts_Point_commonjs_highcharts_Point_commonjs2_highcharts_Point_root_Highcharts_Point_);var highcharts_Series_commonjs_highcharts_Series_commonjs2_highcharts_Series_root_Highcharts_Series_=__webpack_require__(820);var highcharts_Series_commonjs_highcharts_Series_commonjs2_highcharts_Series_root_Highcharts_Series_default=__webpack_require__.n(highcharts_Series_commonjs_highcharts_Series_commonjs2_highcharts_Series_root_Highcharts_Series_);const{tooltipFormatter:pointTooltipFormatter}=highcharts_Point_commonjs_highcharts_Point_commonjs2_highcharts_Point_root_Highcharts_Point_default().prototype;const{addEvent,arrayMax,arrayMin,correctFloat,defined,isArray,isNumber,isString,pick}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();var DataModifyComposition;(function(DataModifyComposition){function compose(SeriesClass,AxisClass,PointClass){const axisProto=AxisClass.prototype,pointProto=PointClass.prototype,seriesProto=SeriesClass.prototype;if(!seriesProto.setCompare){seriesProto.setCompare=seriesSetCompare;seriesProto.setCumulative=seriesSetCumulative;addEvent(SeriesClass,"afterInit",afterInit);addEvent(SeriesClass,"afterGetExtremes",afterGetExtremes);addEvent(SeriesClass,"afterProcessData",afterProcessData)}if(!axisProto.setCompare){axisProto.setCompare=axisSetCompare;axisProto.setModifier=setModifier;axisProto.setCumulative=axisSetCumulative;pointProto.tooltipFormatter=tooltipFormatter}return SeriesClass}DataModifyComposition.compose=compose;function setModifier(mode,modeState,redraw){if(!this.isXAxis){this.series.forEach(function(series){if(mode==="compare"&&typeof modeState!=="boolean"){series.setCompare(modeState,false)}else if(mode==="cumulative"&&!isString(modeState)){series.setCumulative(modeState,false)}});if(pick(redraw,true)){this.chart.redraw()}}}function tooltipFormatter(pointFormat){const point=this,{numberFormatter}=point.series.chart,replace=function(value){pointFormat=pointFormat.replace("{point."+value+"}",(point[value]>0&&value==="change"?"+":"")+numberFormatter(point[value],pick(point.series.tooltipOptions.changeDecimals,2)))};if(defined(point.change)){replace("change")}if(defined(point.cumulativeSum)){replace("cumulativeSum")}return pointTooltipFormatter.apply(this,[pointFormat])}function afterInit(){const compare=this.options.compare;let dataModify;if(compare==="percent"||compare==="value"||this.options.cumulative){dataModify=new Additions(this);if(compare==="percent"||compare==="value"){dataModify.initCompare(compare)}else{dataModify.initCumulative()}}this.dataModify=dataModify}function afterGetExtremes(e){const dataExtremes=e.dataExtremes,activeYData=dataExtremes.activeYData;if(this.dataModify&&dataExtremes){let extremes;if(this.options.compare){extremes=[this.dataModify.modifyValue(dataExtremes.dataMin),this.dataModify.modifyValue(dataExtremes.dataMax)]}else if(this.options.cumulative&&isArray(activeYData)&&activeYData.length>=2){extremes=Additions.getCumulativeExtremes(activeYData)}if(extremes){dataExtremes.dataMin=arrayMin(extremes);dataExtremes.dataMax=arrayMax(extremes)}}}function seriesSetCompare(compare,redraw){this.options.compare=this.userOptions.compare=compare;this.update({},pick(redraw,true));if(this.dataModify&&(compare==="value"||compare==="percent")){this.dataModify.initCompare(compare)}else{this.points.forEach(point=>{delete point.change})}}function afterProcessData(){const series=this,compareColumn=this.getColumn(series.pointArrayMap&&(series.options.pointValKey||series.pointValKey)||"y",true);if(series.xAxis&&compareColumn.length&&series.dataModify){const processedXData=series.getColumn("x",true),length=series.dataTable.rowCount,compareStart=series.options.compareStart===true?0:1;for(let i=0;i<length-compareStart;i++){const compareValue=compareColumn[i];if(isNumber(compareValue)&&compareValue!==0&&processedXData[i+compareStart]>=(series.xAxis.min||0)){series.dataModify.compareValue=compareValue;break}}}}function axisSetCompare(compare,redraw){this.setModifier("compare",compare,redraw)}function seriesSetCumulative(cumulative,redraw){cumulative=pick(cumulative,false);this.options.cumulative=this.userOptions.cumulative=cumulative;this.update({},pick(redraw,true));if(this.dataModify){this.dataModify.initCumulative()}else{this.points.forEach(point=>{delete point.cumulativeSum})}}function axisSetCumulative(cumulative,redraw){this.setModifier("cumulative",cumulative,redraw)}class Additions{constructor(series){this.series=series}modifyValue(){return 0}static getCumulativeExtremes(activeYData){let cumulativeDataMin=Infinity,cumulativeDataMax=-Infinity;activeYData.reduce((prev,cur)=>{const sum=prev+cur;cumulativeDataMin=Math.min(cumulativeDataMin,sum,prev);cumulativeDataMax=Math.max(cumulativeDataMax,sum,prev);return sum});return[cumulativeDataMin,cumulativeDataMax]}initCompare(compare){this.modifyValue=function(value,index){if(value===null){value=0}const compareValue=this.compareValue;if(typeof value!=="undefined"&&typeof compareValue!=="undefined"){if(compare==="value"){value-=compareValue}else{const compareBase=this.series.options.compareBase;value=100*(value/compareValue)-(compareBase===100?0:100)}if(typeof index!=="undefined"){const point=this.series.points[index];if(point){point.change=value}}return value}return 0}}initCumulative(){this.modifyValue=function(value,index){if(value===null){value=0}if(value!==void 0&&index!==void 0){const prevPoint=index>0?this.series.points[index-1]:null;if(prevPoint&&prevPoint.cumulativeSum){value=correctFloat(prevPoint.cumulativeSum+value)}const point=this.series.points[index];const cumulativeStart=point.series.options.cumulativeStart,withinRange=point.x<=this.series.xAxis.max&&point.x>=this.series.xAxis.min;if(point){if(!cumulativeStart||withinRange){point.cumulativeSum=value}else{point.cumulativeSum=void 0}}return value}return 0}}}DataModifyComposition.Additions=Additions})(DataModifyComposition||(DataModifyComposition={}));const Series_DataModifyComposition=DataModifyComposition;"";const{isTouchDevice}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const{addEvent:ChartNavigatorComposition_addEvent,merge,pick:ChartNavigatorComposition_pick}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const composedMembers=[];let NavigatorConstructor;function compose(ChartClass,NavigatorClass){if(highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().pushUnique(composedMembers,ChartClass)){const chartProto=ChartClass.prototype;NavigatorConstructor=NavigatorClass;chartProto.callbacks.push(onChartCallback);ChartNavigatorComposition_addEvent(ChartClass,"afterAddSeries",onChartAfterAddSeries);ChartNavigatorComposition_addEvent(ChartClass,"afterSetChartSize",onChartAfterSetChartSize);ChartNavigatorComposition_addEvent(ChartClass,"afterUpdate",onChartAfterUpdate);ChartNavigatorComposition_addEvent(ChartClass,"beforeRender",onChartBeforeRender);ChartNavigatorComposition_addEvent(ChartClass,"beforeShowResetZoom",onChartBeforeShowResetZoom);ChartNavigatorComposition_addEvent(ChartClass,"update",onChartUpdate)}}function onChartAfterAddSeries(){if(this.navigator){this.navigator.setBaseSeries(null,false)}}function onChartAfterSetChartSize(){const legend=this.legend,navigator=this.navigator;let legendOptions,xAxis,yAxis;if(navigator){legendOptions=legend&&legend.options;xAxis=navigator.xAxis;yAxis=navigator.yAxis;const{scrollbarHeight,scrollButtonSize}=navigator;if(this.inverted){navigator.left=navigator.opposite?this.chartWidth-scrollbarHeight-navigator.height:this.spacing[3]+scrollbarHeight;navigator.top=this.plotTop+scrollButtonSize}else{navigator.left=ChartNavigatorComposition_pick(xAxis.left,this.plotLeft+scrollButtonSize);navigator.top=navigator.navigatorOptions.top||this.chartHeight-navigator.height-scrollbarHeight-(this.scrollbar?.options.margin||0)-this.spacing[2]-(this.rangeSelector&&this.extraBottomMargin?this.rangeSelector.getHeight():0)-(legendOptions&&legendOptions.verticalAlign==="bottom"&&legendOptions.layout!=="proximate"&&legendOptions.enabled&&!legendOptions.floating?legend.legendHeight+ChartNavigatorComposition_pick(legendOptions.margin,10):0)-(this.titleOffset?this.titleOffset[2]:0)}if(xAxis&&yAxis){if(this.inverted){xAxis.options.left=yAxis.options.left=navigator.left}else{xAxis.options.top=yAxis.options.top=navigator.top}xAxis.setAxisSize();yAxis.setAxisSize()}}}function onChartAfterUpdate(event){if(!this.navigator&&!this.scroller&&(this.options.navigator.enabled||this.options.scrollbar.enabled)){this.scroller=this.navigator=new NavigatorConstructor(this);if(ChartNavigatorComposition_pick(event.redraw,true)){this.redraw(event.animation)}}}function onChartBeforeRender(){const options=this.options;if(options.navigator.enabled||options.scrollbar.enabled){this.scroller=this.navigator=new NavigatorConstructor(this)}}function onChartBeforeShowResetZoom(){const chartOptions=this.options,navigator=chartOptions.navigator,rangeSelector=chartOptions.rangeSelector;if((navigator&&navigator.enabled||rangeSelector&&rangeSelector.enabled)&&(!isTouchDevice&&this.zooming.type==="x"||isTouchDevice&&this.zooming.pinchType==="x")){return false}}function onChartCallback(chart){const navigator=chart.navigator;if(navigator&&chart.xAxis[0]){const extremes=chart.xAxis[0].getExtremes();navigator.render(extremes.min,extremes.max)}}function onChartUpdate(e){const navigatorOptions=e.options.navigator||{},scrollbarOptions=e.options.scrollbar||{};if(!this.navigator&&!this.scroller&&(navigatorOptions.enabled||scrollbarOptions.enabled)){merge(true,this.options.navigator,navigatorOptions);merge(true,this.options.scrollbar,scrollbarOptions);delete e.options.navigator;delete e.options.scrollbar}}const ChartNavigatorComposition={compose:compose};const Navigator_ChartNavigatorComposition=ChartNavigatorComposition;const{isTouchDevice:NavigatorAxisComposition_isTouchDevice}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const{addEvent:NavigatorAxisComposition_addEvent,correctFloat:NavigatorAxisComposition_correctFloat,defined:NavigatorAxisComposition_defined,isNumber:NavigatorAxisComposition_isNumber,pick:NavigatorAxisComposition_pick}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();function onAxisInit(){const axis=this;if(!axis.navigatorAxis){axis.navigatorAxis=new NavigatorAxisAdditions(axis)}}function onAxisSetExtremes(e){const axis=this,chart=axis.chart,chartOptions=chart.options,navigator=chartOptions.navigator,navigatorAxis=axis.navigatorAxis,pinchType=chart.zooming.pinchType,rangeSelector=chartOptions.rangeSelector,zoomType=chart.zooming.type;let zoomed;if(axis.isXAxis&&(navigator?.enabled||rangeSelector?.enabled)){if(zoomType==="y"&&e.trigger==="zoom"){zoomed=false}else if((e.trigger==="zoom"&&zoomType==="xy"||NavigatorAxisComposition_isTouchDevice&&pinchType==="xy")&&axis.options.range){const previousZoom=navigatorAxis.previousZoom;if(NavigatorAxisComposition_defined(e.min)){navigatorAxis.previousZoom=[axis.min,axis.max]}else if(previousZoom){e.min=previousZoom[0];e.max=previousZoom[1];navigatorAxis.previousZoom=void 0}}}if(typeof zoomed!=="undefined"){e.preventDefault()}}class NavigatorAxisAdditions{static compose(AxisClass){if(!AxisClass.keepProps.includes("navigatorAxis")){AxisClass.keepProps.push("navigatorAxis");NavigatorAxisComposition_addEvent(AxisClass,"init",onAxisInit);NavigatorAxisComposition_addEvent(AxisClass,"setExtremes",onAxisSetExtremes)}}constructor(axis){this.axis=axis}destroy(){this.axis=void 0}toFixedRange(pxMin,pxMax,fixedMin,fixedMax){const axis=this.axis,halfPointRange=(axis.pointRange||0)/2;let newMin=NavigatorAxisComposition_pick(fixedMin,axis.translate(pxMin,true,!axis.horiz)),newMax=NavigatorAxisComposition_pick(fixedMax,axis.translate(pxMax,true,!axis.horiz));if(!NavigatorAxisComposition_defined(fixedMin)){newMin=NavigatorAxisComposition_correctFloat(newMin+halfPointRange)}if(!NavigatorAxisComposition_defined(fixedMax)){newMax=NavigatorAxisComposition_correctFloat(newMax-halfPointRange)}if(!NavigatorAxisComposition_isNumber(newMin)||!NavigatorAxisComposition_isNumber(newMax)){newMin=newMax=void 0}return{min:newMin,max:newMax}}}const NavigatorAxisComposition=NavigatorAxisAdditions;var highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_=__webpack_require__(620);var highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_default=__webpack_require__.n(highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_);var highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_=__webpack_require__(512);var highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default=__webpack_require__.n(highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_);const{parse:color}=highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_default();const{seriesTypes}=highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default();const NavigatorDefaults={height:40,margin:25,maskInside:true,handles:{width:7,borderRadius:0,height:15,symbols:["navigator-handle","navigator-handle"],enabled:true,lineWidth:1,backgroundColor:"#f2f2f2",borderColor:"#999999"},maskFill:color("#667aff").setOpacity(.3).get(),outlineColor:"#999999",outlineWidth:1,series:{type:typeof seriesTypes.areaspline==="undefined"?"line":"areaspline",fillOpacity:.05,lineWidth:1,compare:null,sonification:{enabled:false},dataGrouping:{approximation:"average",enabled:true,groupPixelWidth:2,firstAnchor:"firstPoint",anchor:"middle",lastAnchor:"lastPoint",units:[["millisecond",[1,2,5,10,20,25,50,100,200,500]],["second",[1,2,5,10,15,30]],["minute",[1,2,5,10,15,30]],["hour",[1,2,3,4,6,8,12]],["day",[1,2,3,4]],["week",[1,2,3]],["month",[1,3,6]],["year",null]]},dataLabels:{enabled:false,zIndex:2},id:"highcharts-navigator-series",className:"highcharts-navigator-series",lineColor:null,marker:{enabled:false},threshold:null},xAxis:{className:"highcharts-navigator-xaxis",tickLength:0,lineWidth:0,gridLineColor:"#e6e6e6",id:"navigator-x-axis",gridLineWidth:1,tickPixelInterval:200,labels:{align:"left",style:{color:"#000000",fontSize:"0.7em",opacity:.6,textOutline:"2px contrast"},x:3,y:-4},crosshair:false},yAxis:{className:"highcharts-navigator-yaxis",gridLineWidth:0,startOnTick:false,endOnTick:false,minPadding:.1,id:"navigator-y-axis",maxPadding:.1,labels:{enabled:false},crosshair:false,title:{text:null},tickLength:0,tickWidth:0}};const Navigator_NavigatorDefaults=NavigatorDefaults;"";const{defined:Symbols_defined,isNumber:Symbols_isNumber,pick:Symbols_pick}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();function arc(cx,cy,w,h,options){const arc=[];if(options){const start=options.start||0,rx=Symbols_pick(options.r,w),ry=Symbols_pick(options.r,h||w),proximity=2e-4/(options.borderRadius?1:Math.max(rx,1)),fullCircle=Math.abs((options.end||0)-start-2*Math.PI)<proximity,end=(options.end||0)-(fullCircle?proximity:0),innerRadius=options.innerR,open=Symbols_pick(options.open,fullCircle),cosStart=Math.cos(start),sinStart=Math.sin(start),cosEnd=Math.cos(end),sinEnd=Math.sin(end),longArc=Symbols_pick(options.longArc,end-start-Math.PI<proximity?0:1);let arcSegment=["A",rx,ry,0,longArc,Symbols_pick(options.clockwise,1),cx+rx*cosEnd,cy+ry*sinEnd];arcSegment.params={start:start,end:end,cx:cx,cy:cy};arc.push(["M",cx+rx*cosStart,cy+ry*sinStart],arcSegment);if(Symbols_defined(innerRadius)){arcSegment=["A",innerRadius,innerRadius,0,longArc,Symbols_defined(options.clockwise)?1-options.clockwise:0,cx+innerRadius*cosStart,cy+innerRadius*sinStart];arcSegment.params={start:end,end:start,cx:cx,cy:cy};arc.push(open?["M",cx+innerRadius*cosEnd,cy+innerRadius*sinEnd]:["L",cx+innerRadius*cosEnd,cy+innerRadius*sinEnd],arcSegment)}if(!open){arc.push(["Z"])}}return arc}function callout(x,y,w,h,options){const arrowLength=6,halfDistance=6,r=Math.min(options&&options.r||0,w,h),safeDistance=r+halfDistance,anchorX=options&&options.anchorX,anchorY=options&&options.anchorY||0;const path=roundedRect(x,y,w,h,{r:r});if(!Symbols_isNumber(anchorX)){return path}if(anchorX<w&&anchorX>0&&anchorY<h&&anchorY>0){return path}if(x+anchorX>w-safeDistance){if(anchorY>y+safeDistance&&anchorY<y+h-safeDistance){path.splice(3,1,["L",x+w,anchorY-halfDistance],["L",x+w+arrowLength,anchorY],["L",x+w,anchorY+halfDistance],["L",x+w,y+h-r])}else{if(anchorX<w){const isTopCorner=anchorY<y+safeDistance,cornerY=isTopCorner?y:y+h,sliceStart=isTopCorner?2:5;path.splice(sliceStart,0,["L",anchorX,anchorY],["L",x+w-r,cornerY])}else{path.splice(3,1,["L",x+w,h/2],["L",anchorX,anchorY],["L",x+w,h/2],["L",x+w,y+h-r])}}}else if(x+anchorX<safeDistance){if(anchorY>y+safeDistance&&anchorY<y+h-safeDistance){path.splice(7,1,["L",x,anchorY+halfDistance],["L",x-arrowLength,anchorY],["L",x,anchorY-halfDistance],["L",x,y+r])}else{if(anchorX>0){const isTopCorner=anchorY<y+safeDistance,cornerY=isTopCorner?y:y+h,sliceStart=isTopCorner?1:6;path.splice(sliceStart,0,["L",anchorX,anchorY],["L",x+r,cornerY])}else{path.splice(7,1,["L",x,h/2],["L",anchorX,anchorY],["L",x,h/2],["L",x,y+r])}}}else if(anchorY>h&&anchorX<w-safeDistance){path.splice(5,1,["L",anchorX+halfDistance,y+h],["L",anchorX,y+h+arrowLength],["L",anchorX-halfDistance,y+h],["L",x+r,y+h])}else if(anchorY<0&&anchorX>safeDistance){path.splice(1,1,["L",anchorX-halfDistance,y],["L",anchorX,y-arrowLength],["L",anchorX+halfDistance,y],["L",w-r,y])}return path}function circle(x,y,w,h){return arc(x+w/2,y+h/2,w/2,h/2,{start:Math.PI*.5,end:Math.PI*2.5,open:false})}function diamond(x,y,w,h){return[["M",x+w/2,y],["L",x+w,y+h/2],["L",x+w/2,y+h],["L",x,y+h/2],["Z"]]}function rect(x,y,w,h,options){if(options&&options.r){return roundedRect(x,y,w,h,options)}return[["M",x,y],["L",x+w,y],["L",x+w,y+h],["L",x,y+h],["Z"]]}function roundedRect(x,y,w,h,options){const r=options?.r||0;return[["M",x+r,y],["L",x+w-r,y],["A",r,r,0,0,1,x+w,y+r],["L",x+w,y+h-r],["A",r,r,0,0,1,x+w-r,y+h],["L",x+r,y+h],["A",r,r,0,0,1,x,y+h-r],["L",x,y+r],["A",r,r,0,0,1,x+r,y],["Z"]]}function triangle(x,y,w,h){return[["M",x+w/2,y],["L",x+w,y+h],["L",x,y+h],["Z"]]}function triangleDown(x,y,w,h){return[["M",x,y],["L",x+w,y],["L",x+w/2,y+h],["Z"]]}const Symbols={arc:arc,callout:callout,circle:circle,diamond:diamond,rect:rect,roundedRect:roundedRect,square:rect,triangle:triangle,"triangle-down":triangleDown};const SVG_Symbols=Symbols;const{relativeLength}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();function navigatorHandle(_x,_y,width,height,options={}){const halfWidth=options.width?options.width/2:width,markerPosition=1.5,r=relativeLength(options.borderRadius||0,Math.min(halfWidth*2,height));height=options.height||height;return[["M",-markerPosition,height/2-3.5],["L",-markerPosition,height/2+4.5],["M",markerPosition-1,height/2-3.5],["L",markerPosition-1,height/2+4.5],...SVG_Symbols.rect(-halfWidth-1,.5,halfWidth*2+1,height,{r:r})]}const NavigatorSymbols={"navigator-handle":navigatorHandle};const Navigator_NavigatorSymbols=NavigatorSymbols;var highcharts_RendererRegistry_commonjs_highcharts_RendererRegistry_commonjs2_highcharts_RendererRegistry_root_Highcharts_RendererRegistry_=__webpack_require__(608);var highcharts_RendererRegistry_commonjs_highcharts_RendererRegistry_commonjs2_highcharts_RendererRegistry_root_Highcharts_RendererRegistry_default=__webpack_require__.n(highcharts_RendererRegistry_commonjs_highcharts_RendererRegistry_commonjs2_highcharts_RendererRegistry_root_Highcharts_RendererRegistry_);const{defined:StockUtilities_defined}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();function setFixedRange(range){const xAxis=this.xAxis[0];if(StockUtilities_defined(xAxis.dataMax)&&StockUtilities_defined(xAxis.dataMin)&&range){this.fixedRange=Math.min(range,xAxis.dataMax-xAxis.dataMin)}else{this.fixedRange=range}}const StockUtilities={setFixedRange:setFixedRange};const Utilities_StockUtilities=StockUtilities;const{setOptions}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const{composed}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const{getRendererType}=highcharts_RendererRegistry_commonjs_highcharts_RendererRegistry_commonjs2_highcharts_RendererRegistry_root_Highcharts_RendererRegistry_default();const{setFixedRange:NavigatorComposition_setFixedRange}=Utilities_StockUtilities;const{addEvent:NavigatorComposition_addEvent,extend,pushUnique}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();function NavigatorComposition_compose(ChartClass,AxisClass,SeriesClass){NavigatorAxisComposition.compose(AxisClass);if(pushUnique(composed,"Navigator")){ChartClass.prototype.setFixedRange=NavigatorComposition_setFixedRange;extend(getRendererType().prototype.symbols,Navigator_NavigatorSymbols);NavigatorComposition_addEvent(SeriesClass,"afterUpdate",onSeriesAfterUpdate);setOptions({navigator:Navigator_NavigatorDefaults})}}function onSeriesAfterUpdate(){if(this.chart.navigator&&!this.options.isInternal){this.chart.navigator.setBaseSeries(null,false)}}const NavigatorComposition={compose:NavigatorComposition_compose};const Navigator_NavigatorComposition=NavigatorComposition;const{composed:ScrollbarAxis_composed}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const{addEvent:ScrollbarAxis_addEvent,defined:ScrollbarAxis_defined,pick:ScrollbarAxis_pick,pushUnique:ScrollbarAxis_pushUnique}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();var ScrollbarAxis;(function(ScrollbarAxis){let Scrollbar;function compose(AxisClass,ScrollbarClass){if(ScrollbarAxis_pushUnique(ScrollbarAxis_composed,"Axis.Scrollbar")){Scrollbar=ScrollbarClass;ScrollbarAxis_addEvent(AxisClass,"afterGetOffset",onAxisAfterGetOffset);ScrollbarAxis_addEvent(AxisClass,"afterInit",onAxisAfterInit);ScrollbarAxis_addEvent(AxisClass,"afterRender",onAxisAfterRender)}}ScrollbarAxis.compose=compose;function getExtremes(axis){const axisMin=ScrollbarAxis_pick(axis.options&&axis.options.min,axis.min);const axisMax=ScrollbarAxis_pick(axis.options&&axis.options.max,axis.max);return{axisMin:axisMin,axisMax:axisMax,scrollMin:ScrollbarAxis_defined(axis.dataMin)?Math.min(axisMin,axis.min,axis.dataMin,ScrollbarAxis_pick(axis.threshold,Infinity)):axisMin,scrollMax:ScrollbarAxis_defined(axis.dataMax)?Math.max(axisMax,axis.max,axis.dataMax,ScrollbarAxis_pick(axis.threshold,-Infinity)):axisMax}}function onAxisAfterGetOffset(){const axis=this,scrollbar=axis.scrollbar,opposite=scrollbar&&!scrollbar.options.opposite,index=axis.horiz?2:opposite?3:1;if(scrollbar){axis.chart.scrollbarsOffsets=[0,0];axis.chart.axisOffset[index]+=scrollbar.size+(scrollbar.options.margin||0)}}function onAxisAfterInit(){const axis=this;if(axis.options&&axis.options.scrollbar&&axis.options.scrollbar.enabled){axis.options.scrollbar.vertical=!axis.horiz;axis.options.startOnTick=axis.options.endOnTick=false;axis.scrollbar=new Scrollbar(axis.chart.renderer,axis.options.scrollbar,axis.chart);ScrollbarAxis_addEvent(axis.scrollbar,"changed",function(e){const{axisMin,axisMax,scrollMin:unitedMin,scrollMax:unitedMax}=getExtremes(axis),range=unitedMax-unitedMin;let to,from;if(!ScrollbarAxis_defined(axisMin)||!ScrollbarAxis_defined(axisMax)){return}if(axis.horiz&&!axis.reversed||!axis.horiz&&axis.reversed){to=unitedMin+range*this.to;from=unitedMin+range*this.from}else{to=unitedMin+range*(1-this.from);from=unitedMin+range*(1-this.to)}if(this.shouldUpdateExtremes(e.DOMType)){const animate=e.DOMType==="mousemove"||e.DOMType==="touchmove"?false:void 0;axis.setExtremes(from,to,true,animate,e)}else{this.setRange(this.from,this.to)}})}}function onAxisAfterRender(){const axis=this,{scrollMin,scrollMax}=getExtremes(axis),scrollbar=axis.scrollbar,offset=axis.axisTitleMargin+(axis.titleOffset||0),scrollbarsOffsets=axis.chart.scrollbarsOffsets,axisMargin=axis.options.margin||0;let offsetsIndex,from,to;if(scrollbar&&scrollbarsOffsets){if(axis.horiz){if(!axis.opposite){scrollbarsOffsets[1]+=offset}scrollbar.position(axis.left,axis.top+axis.height+2+scrollbarsOffsets[1]-(axis.opposite?axisMargin:0),axis.width,axis.height);if(!axis.opposite){scrollbarsOffsets[1]+=axisMargin}offsetsIndex=1}else{if(axis.opposite){scrollbarsOffsets[0]+=offset}let xPosition;if(!scrollbar.options.opposite){xPosition=axis.opposite?0:axisMargin}else{xPosition=axis.left+axis.width+2+scrollbarsOffsets[0]-(axis.opposite?0:axisMargin)}scrollbar.position(xPosition,axis.top,axis.width,axis.height);if(axis.opposite){scrollbarsOffsets[0]+=axisMargin}offsetsIndex=0}scrollbarsOffsets[offsetsIndex]+=scrollbar.size+(scrollbar.options.margin||0);if(isNaN(scrollMin)||isNaN(scrollMax)||!ScrollbarAxis_defined(axis.min)||!ScrollbarAxis_defined(axis.max)||axis.dataMin===axis.dataMax){scrollbar.setRange(0,1)}else if(axis.min===axis.max){const interval=axis.pointRange/(axis.dataMax+1);from=interval*axis.min;to=interval*(axis.max+1);scrollbar.setRange(from,to)}else{from=(axis.min-scrollMin)/(scrollMax-scrollMin);to=(axis.max-scrollMin)/(scrollMax-scrollMin);if(axis.horiz&&!axis.reversed||!axis.horiz&&axis.reversed){scrollbar.setRange(from,to)}else{scrollbar.setRange(1-to,1-from)}}}}})(ScrollbarAxis||(ScrollbarAxis={}));const Axis_ScrollbarAxis=ScrollbarAxis;const ScrollbarDefaults={height:10,barBorderRadius:5,buttonBorderRadius:0,buttonsEnabled:false,liveRedraw:void 0,margin:void 0,minWidth:6,opposite:true,step:.2,zIndex:3,barBackgroundColor:"#cccccc",barBorderWidth:0,barBorderColor:"#cccccc",buttonArrowColor:"#333333",buttonBackgroundColor:"#e6e6e6",buttonBorderColor:"#cccccc",buttonBorderWidth:1,rifleColor:"none",trackBackgroundColor:"rgba(255, 255, 255, 0.001)",trackBorderColor:"#cccccc",trackBorderRadius:5,trackBorderWidth:1};const Scrollbar_ScrollbarDefaults=ScrollbarDefaults;const{defaultOptions}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const{addEvent:Scrollbar_addEvent,correctFloat:Scrollbar_correctFloat,crisp,defined:Scrollbar_defined,destroyObjectProperties,fireEvent,merge:Scrollbar_merge,pick:Scrollbar_pick,removeEvent}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();class Scrollbar{static compose(AxisClass){Axis_ScrollbarAxis.compose(AxisClass,Scrollbar)}static swapXY(path,vertical){if(vertical){path.forEach(seg=>{const len=seg.length;let temp;for(let i=0;i<len;i+=2){temp=seg[i+1];if(typeof temp==="number"){seg[i+1]=seg[i+2];seg[i+2]=temp}}})}return path}constructor(renderer,options,chart){this._events=[];this.chartX=0;this.chartY=0;this.from=0;this.scrollbarButtons=[];this.scrollbarLeft=0;this.scrollbarStrokeWidth=1;this.scrollbarTop=0;this.size=0;this.to=0;this.trackBorderWidth=1;this.x=0;this.y=0;this.init(renderer,options,chart)}addEvents(){const buttonsOrder=this.options.inverted?[1,0]:[0,1],buttons=this.scrollbarButtons,bar=this.scrollbarGroup.element,track=this.track.element,mouseDownHandler=this.mouseDownHandler.bind(this),mouseMoveHandler=this.mouseMoveHandler.bind(this),mouseUpHandler=this.mouseUpHandler.bind(this);const _events=[[buttons[buttonsOrder[0]].element,"click",this.buttonToMinClick.bind(this)],[buttons[buttonsOrder[1]].element,"click",this.buttonToMaxClick.bind(this)],[track,"click",this.trackClick.bind(this)],[bar,"mousedown",mouseDownHandler],[bar.ownerDocument,"mousemove",mouseMoveHandler],[bar.ownerDocument,"mouseup",mouseUpHandler],[bar,"touchstart",mouseDownHandler],[bar.ownerDocument,"touchmove",mouseMoveHandler],[bar.ownerDocument,"touchend",mouseUpHandler]];_events.forEach(function(args){Scrollbar_addEvent.apply(null,args)});this._events=_events}buttonToMaxClick(e){const scroller=this;const range=(scroller.to-scroller.from)*Scrollbar_pick(scroller.options.step,.2);scroller.updatePosition(scroller.from+range,scroller.to+range);fireEvent(scroller,"changed",{from:scroller.from,to:scroller.to,trigger:"scrollbar",DOMEvent:e})}buttonToMinClick(e){const scroller=this;const range=Scrollbar_correctFloat(scroller.to-scroller.from)*Scrollbar_pick(scroller.options.step,.2);scroller.updatePosition(Scrollbar_correctFloat(scroller.from-range),Scrollbar_correctFloat(scroller.to-range));fireEvent(scroller,"changed",{from:scroller.from,to:scroller.to,trigger:"scrollbar",DOMEvent:e})}cursorToScrollbarPosition(normalizedEvent){const scroller=this,options=scroller.options,minWidthDifference=options.minWidth>scroller.calculatedWidth?options.minWidth:0;return{chartX:(normalizedEvent.chartX-scroller.x-scroller.xOffset)/(scroller.barWidth-minWidthDifference),chartY:(normalizedEvent.chartY-scroller.y-scroller.yOffset)/(scroller.barWidth-minWidthDifference)}}destroy(){const scroller=this,navigator=scroller.chart.scroller;scroller.removeEvents();["track","scrollbarRifles","scrollbar","scrollbarGroup","group"].forEach(function(prop){if(scroller[prop]&&scroller[prop].destroy){scroller[prop]=scroller[prop].destroy()}});if(navigator&&scroller===navigator.scrollbar){navigator.scrollbar=null;destroyObjectProperties(navigator.scrollbarButtons)}}drawScrollbarButton(index){const scroller=this,renderer=scroller.renderer,scrollbarButtons=scroller.scrollbarButtons,options=scroller.options,size=scroller.size,group=renderer.g().add(scroller.group);scrollbarButtons.push(group);if(options.buttonsEnabled){const rect=renderer.rect().addClass("highcharts-scrollbar-button").add(group);if(!scroller.chart.styledMode){rect.attr({stroke:options.buttonBorderColor,"stroke-width":options.buttonBorderWidth,fill:options.buttonBackgroundColor})}rect.attr(rect.crisp({x:-.5,y:-.5,width:size,height:size,r:options.buttonBorderRadius},rect.strokeWidth()));const arrow=renderer.path(Scrollbar.swapXY([["M",size/2+(index?-1:1),size/2-3],["L",size/2+(index?-1:1),size/2+3],["L",size/2+(index?2:-2),size/2]],options.vertical)).addClass("highcharts-scrollbar-arrow").add(scrollbarButtons[index]);if(!scroller.chart.styledMode){arrow.attr({fill:options.buttonArrowColor})}}}init(renderer,options,chart){const scroller=this;scroller.scrollbarButtons=[];scroller.renderer=renderer;scroller.userOptions=options;scroller.options=Scrollbar_merge(Scrollbar_ScrollbarDefaults,defaultOptions.scrollbar,options);scroller.options.margin=Scrollbar_pick(scroller.options.margin,10);scroller.chart=chart;scroller.size=Scrollbar_pick(scroller.options.size,scroller.options.height);if(options.enabled){scroller.render();scroller.addEvents()}}mouseDownHandler(e){const scroller=this,normalizedEvent=scroller.chart.pointer?.normalize(e)||e,mousePosition=scroller.cursorToScrollbarPosition(normalizedEvent);scroller.chartX=mousePosition.chartX;scroller.chartY=mousePosition.chartY;scroller.initPositions=[scroller.from,scroller.to];scroller.grabbedCenter=true}mouseMoveHandler(e){const scroller=this,normalizedEvent=scroller.chart.pointer?.normalize(e)||e,options=scroller.options,direction=options.vertical?"chartY":"chartX",initPositions=scroller.initPositions||[];let scrollPosition,chartPosition,change;if(scroller.grabbedCenter&&(!e.touches||e.touches[0][direction]!==0)){chartPosition=scroller.cursorToScrollbarPosition(normalizedEvent)[direction];scrollPosition=scroller[direction];change=chartPosition-scrollPosition;scroller.hasDragged=true;scroller.updatePosition(initPositions[0]+change,initPositions[1]+change);if(scroller.hasDragged){fireEvent(scroller,"changed",{from:scroller.from,to:scroller.to,trigger:"scrollbar",DOMType:e.type,DOMEvent:e})}}}mouseUpHandler(e){const scroller=this;if(scroller.hasDragged){fireEvent(scroller,"changed",{from:scroller.from,to:scroller.to,trigger:"scrollbar",DOMType:e.type,DOMEvent:e})}scroller.grabbedCenter=scroller.hasDragged=scroller.chartX=scroller.chartY=null}position(x,y,width,height){const scroller=this,options=scroller.options,{buttonsEnabled,margin=0,vertical}=options,method=scroller.rendered?"animate":"attr";let xOffset=height,yOffset=0;scroller.group.show();scroller.x=x;scroller.y=y+this.trackBorderWidth;scroller.width=width;scroller.height=height;scroller.xOffset=xOffset;scroller.yOffset=yOffset;if(vertical){scroller.width=scroller.yOffset=width=yOffset=scroller.size;scroller.xOffset=xOffset=0;scroller.yOffset=yOffset=buttonsEnabled?scroller.size:0;scroller.barWidth=height-(buttonsEnabled?width*2:0);scroller.x=x=x+margin}else{scroller.height=height=scroller.size;scroller.xOffset=xOffset=buttonsEnabled?scroller.size:0;scroller.barWidth=width-(buttonsEnabled?height*2:0);scroller.y=scroller.y+margin}scroller.group[method]({translateX:x,translateY:scroller.y});scroller.track[method]({width:width,height:height});scroller.scrollbarButtons[1][method]({translateX:vertical?0:width-xOffset,translateY:vertical?height-yOffset:0})}removeEvents(){this._events.forEach(function(args){removeEvent.apply(null,args)});this._events.length=0}render(){const scroller=this,renderer=scroller.renderer,options=scroller.options,size=scroller.size,styledMode=scroller.chart.styledMode,group=renderer.g("scrollbar").attr({zIndex:options.zIndex}).hide().add();scroller.group=group;scroller.track=renderer.rect().addClass("highcharts-scrollbar-track").attr({r:options.trackBorderRadius||0,height:size,width:size}).add(group);if(!styledMode){scroller.track.attr({fill:options.trackBackgroundColor,stroke:options.trackBorderColor,"stroke-width":options.trackBorderWidth})}const trackBorderWidth=scroller.trackBorderWidth=scroller.track.strokeWidth();scroller.track.attr({x:-crisp(0,trackBorderWidth),y:-crisp(0,trackBorderWidth)});scroller.scrollbarGroup=renderer.g().add(group);scroller.scrollbar=renderer.rect().addClass("highcharts-scrollbar-thumb").attr({height:size-trackBorderWidth,width:size-trackBorderWidth,r:options.barBorderRadius||0}).add(scroller.scrollbarGroup);scroller.scrollbarRifles=renderer.path(Scrollbar.swapXY([["M",-3,size/4],["L",-3,2*size/3],["M",0,size/4],["L",0,2*size/3],["M",3,size/4],["L",3,2*size/3]],options.vertical)).addClass("highcharts-scrollbar-rifles").add(scroller.scrollbarGroup);if(!styledMode){scroller.scrollbar.attr({fill:options.barBackgroundColor,stroke:options.barBorderColor,"stroke-width":options.barBorderWidth});scroller.scrollbarRifles.attr({stroke:options.rifleColor,"stroke-width":1})}scroller.scrollbarStrokeWidth=scroller.scrollbar.strokeWidth();scroller.scrollbarGroup.translate(-crisp(0,scroller.scrollbarStrokeWidth),-crisp(0,scroller.scrollbarStrokeWidth));scroller.drawScrollbarButton(0);scroller.drawScrollbarButton(1)}setRange(from,to){const scroller=this,options=scroller.options,vertical=options.vertical,minWidth=options.minWidth,fullWidth=scroller.barWidth,method=this.rendered&&!this.hasDragged&&!(this.chart.navigator&&this.chart.navigator.hasDragged)?"animate":"attr";if(!Scrollbar_defined(fullWidth)){return}const toPX=fullWidth*Math.min(to,1);let fromPX,newSize;from=Math.max(from,0);fromPX=Math.ceil(fullWidth*from);scroller.calculatedWidth=newSize=Scrollbar_correctFloat(toPX-fromPX);if(newSize<minWidth){fromPX=(fullWidth-minWidth+newSize)*from;newSize=minWidth}const newPos=Math.floor(fromPX+scroller.xOffset+scroller.yOffset);const newRiflesPos=newSize/2-.5;scroller.from=from;scroller.to=to;if(!vertical){scroller.scrollbarGroup[method]({translateX:newPos});scroller.scrollbar[method]({width:newSize});scroller.scrollbarRifles[method]({translateX:newRiflesPos});scroller.scrollbarLeft=newPos;scroller.scrollbarTop=0}else{scroller.scrollbarGroup[method]({translateY:newPos});scroller.scrollbar[method]({height:newSize});scroller.scrollbarRifles[method]({translateY:newRiflesPos});scroller.scrollbarTop=newPos;scroller.scrollbarLeft=0}if(newSize<=12){scroller.scrollbarRifles.hide()}else{scroller.scrollbarRifles.show()}if(options.showFull===false){if(from<=0&&to>=1){scroller.group.hide()}else{scroller.group.show()}}scroller.rendered=true}shouldUpdateExtremes(eventType){return Scrollbar_pick(this.options.liveRedraw,highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().svg&&!highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().isTouchDevice&&!this.chart.boosted)||eventType==="mouseup"||eventType==="touchend"||!Scrollbar_defined(eventType)}trackClick(e){const scroller=this;const normalizedEvent=scroller.chart.pointer?.normalize(e)||e,range=scroller.to-scroller.from,top=scroller.y+scroller.scrollbarTop,left=scroller.x+scroller.scrollbarLeft;if(scroller.options.vertical&&normalizedEvent.chartY>top||!scroller.options.vertical&&normalizedEvent.chartX>left){scroller.updatePosition(scroller.from+range,scroller.to+range)}else{scroller.updatePosition(scroller.from-range,scroller.to-range)}fireEvent(scroller,"changed",{from:scroller.from,to:scroller.to,trigger:"scrollbar",DOMEvent:e})}update(options){this.destroy();this.init(this.chart.renderer,Scrollbar_merge(true,this.options,options),this.chart)}updatePosition(from,to){if(to>1){from=Scrollbar_correctFloat(1-Scrollbar_correctFloat(to-from));to=1}if(from<0){to=Scrollbar_correctFloat(to-from);from=0}this.from=from;this.to=to}}Scrollbar.defaultOptions=Scrollbar_ScrollbarDefaults;defaultOptions.scrollbar=Scrollbar_merge(true,Scrollbar.defaultOptions,defaultOptions.scrollbar);const Scrollbar_Scrollbar=Scrollbar;var highcharts_SVGRenderer_commonjs_highcharts_SVGRenderer_commonjs2_highcharts_SVGRenderer_root_Highcharts_SVGRenderer_=__webpack_require__(540);var highcharts_SVGRenderer_commonjs_highcharts_SVGRenderer_commonjs2_highcharts_SVGRenderer_root_Highcharts_SVGRenderer_default=__webpack_require__.n(highcharts_SVGRenderer_commonjs_highcharts_SVGRenderer_commonjs2_highcharts_SVGRenderer_root_Highcharts_SVGRenderer_);const{defaultOptions:Navigator_defaultOptions}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const{isTouchDevice:Navigator_isTouchDevice}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const{prototype:{symbols}}=highcharts_SVGRenderer_commonjs_highcharts_SVGRenderer_commonjs2_highcharts_SVGRenderer_root_Highcharts_SVGRenderer_default();const{addEvent:Navigator_addEvent,clamp,correctFloat:Navigator_correctFloat,defined:Navigator_defined,destroyObjectProperties:Navigator_destroyObjectProperties,erase,extend:Navigator_extend,find,fireEvent:Navigator_fireEvent,isArray:Navigator_isArray,isNumber:Navigator_isNumber,merge:Navigator_merge,pick:Navigator_pick,removeEvent:Navigator_removeEvent,splat}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();function numExt(extreme,...args){const numbers=[].filter.call(args,Navigator_isNumber);if(numbers.length){return Math[extreme].apply(0,numbers)}}class Navigator{static compose(ChartClass,AxisClass,SeriesClass){Navigator_ChartNavigatorComposition.compose(ChartClass,Navigator);Navigator_NavigatorComposition.compose(ChartClass,AxisClass,SeriesClass)}constructor(chart){this.isDirty=false;this.scrollbarHeight=0;this.init(chart)}drawHandle(x,index,inverted,verb){const navigator=this,height=navigator.navigatorOptions.handles.height;navigator.handles[index][verb](inverted?{translateX:Math.round(navigator.left+navigator.height/2),translateY:Math.round(navigator.top+parseInt(x,10)+.5-height)}:{translateX:Math.round(navigator.left+parseInt(x,10)),translateY:Math.round(navigator.top+navigator.height/2-height/2-1)})}drawOutline(zoomedMin,zoomedMax,inverted,verb){const navigator=this,maskInside=navigator.navigatorOptions.maskInside,outlineWidth=navigator.outline.strokeWidth(),halfOutline=outlineWidth/2,outlineCorrection=outlineWidth%2/2,scrollButtonSize=navigator.scrollButtonSize,navigatorSize=navigator.size,navigatorTop=navigator.top,height=navigator.height,lineTop=navigatorTop-halfOutline,lineBtm=navigatorTop+height;let left=navigator.left,verticalMin,path;if(inverted){verticalMin=navigatorTop+zoomedMax+outlineCorrection;zoomedMax=navigatorTop+zoomedMin+outlineCorrection;path=[["M",left+height,navigatorTop-scrollButtonSize-outlineCorrection],["L",left+height,verticalMin],["L",left,verticalMin],["M",left,zoomedMax],["L",left+height,zoomedMax],["L",left+height,navigatorTop+navigatorSize+scrollButtonSize]];if(maskInside){path.push(["M",left+height,verticalMin-halfOutline],["L",left+height,zoomedMax+halfOutline])}}else{left-=scrollButtonSize;zoomedMin+=left+scrollButtonSize-outlineCorrection;zoomedMax+=left+scrollButtonSize-outlineCorrection;path=[["M",left,lineTop],["L",zoomedMin,lineTop],["L",zoomedMin,lineBtm],["M",zoomedMax,lineBtm],["L",zoomedMax,lineTop],["L",left+navigatorSize+scrollButtonSize*2,lineTop]];if(maskInside){path.push(["M",zoomedMin-halfOutline,lineTop],["L",zoomedMax+halfOutline,lineTop])}}navigator.outline[verb]({d:path})}drawMasks(zoomedMin,zoomedMax,inverted,verb){const navigator=this,left=navigator.left,top=navigator.top,navigatorHeight=navigator.height;let height,width,x,y;if(inverted){x=[left,left,left];y=[top,top+zoomedMin,top+zoomedMax];width=[navigatorHeight,navigatorHeight,navigatorHeight];height=[zoomedMin,zoomedMax-zoomedMin,navigator.size-zoomedMax]}else{x=[left,left+zoomedMin,left+zoomedMax];y=[top,top,top];width=[zoomedMin,zoomedMax-zoomedMin,navigator.size-zoomedMax];height=[navigatorHeight,navigatorHeight,navigatorHeight]}navigator.shades.forEach((shade,i)=>{shade[verb]({x:x[i],y:y[i],width:width[i],height:height[i]})})}renderElements(){const navigator=this,navigatorOptions=navigator.navigatorOptions,maskInside=navigatorOptions.maskInside,chart=navigator.chart,inverted=chart.inverted,renderer=chart.renderer,mouseCursor={cursor:inverted?"ns-resize":"ew-resize"},navigatorGroup=navigator.navigatorGroup??(navigator.navigatorGroup=renderer.g("navigator").attr({zIndex:8,visibility:"hidden"}).add());[!maskInside,maskInside,!maskInside].forEach((hasMask,index)=>{const shade=navigator.shades[index]??(navigator.shades[index]=renderer.rect().addClass("highcharts-navigator-mask"+(index===1?"-inside":"-outside")).add(navigatorGroup));if(!chart.styledMode){shade.attr({fill:hasMask?navigatorOptions.maskFill:"rgba(0,0,0,0)"});if(index===1){shade.css(mouseCursor)}}});if(!navigator.outline){navigator.outline=renderer.path().addClass("highcharts-navigator-outline").add(navigatorGroup)}if(!chart.styledMode){navigator.outline.attr({"stroke-width":navigatorOptions.outlineWidth,stroke:navigatorOptions.outlineColor})}if(navigatorOptions.handles?.enabled){const handlesOptions=navigatorOptions.handles,{height,width}=handlesOptions;[0,1].forEach(index=>{const symbolName=handlesOptions.symbols[index];if(!navigator.handles[index]||navigator.handles[index].symbolUrl!==symbolName){navigator.handles[index]?.destroy();navigator.handles[index]=renderer.symbol(symbolName,-width/2-1,0,width,height,handlesOptions);navigator.handles[index].attr({zIndex:7-index}).addClass("highcharts-navigator-handle "+"highcharts-navigator-handle-"+["left","right"][index]).add(navigatorGroup);navigator.addMouseEvents()}else if(!navigator.handles[index].isImg&&navigator.handles[index].symbolName!==symbolName){const symbolFn=symbols[symbolName],path=symbolFn.call(symbols,-width/2-1,0,width,height);navigator.handles[index].attr({d:path});navigator.handles[index].symbolName=symbolName}if(chart.inverted){navigator.handles[index].attr({rotation:90,rotationOriginX:Math.floor(-width/2),rotationOriginY:(height+width)/2})}if(!chart.styledMode){navigator.handles[index].attr({fill:handlesOptions.backgroundColor,stroke:handlesOptions.borderColor,"stroke-width":handlesOptions.lineWidth,width:handlesOptions.width,height:handlesOptions.height,x:-width/2-1,y:0}).css(mouseCursor)}})}}update(options,redraw=false){const chart=this.chart,invertedUpdate=chart.options.chart.inverted!==chart.scrollbar?.options.vertical;Navigator_merge(true,chart.options.navigator,options);this.navigatorOptions=chart.options.navigator||{};this.setOpposite();if(Navigator_defined(options.enabled)||invertedUpdate){this.destroy();this.navigatorEnabled=options.enabled||this.navigatorEnabled;return this.init(chart)}if(this.navigatorEnabled){this.isDirty=true;if(options.adaptToUpdatedData===false){this.baseSeries.forEach(series=>{Navigator_removeEvent(series,"updatedData",this.updatedDataHandler)},this)}if(options.adaptToUpdatedData){this.baseSeries.forEach(series=>{series.eventsToUnbind.push(Navigator_addEvent(series,"updatedData",this.updatedDataHandler))},this)}if(options.series||options.baseSeries){this.setBaseSeries(void 0,false)}if(options.height||options.xAxis||options.yAxis){this.height=options.height??this.height;const offsets=this.getXAxisOffsets();this.xAxis.update({...options.xAxis,offsets:offsets,[chart.inverted?"width":"height"]:this.height,[chart.inverted?"height":"width"]:void 0},false);this.yAxis.update({...options.yAxis,[chart.inverted?"width":"height"]:this.height},false)}}if(redraw){chart.redraw()}}render(min,max,pxMin,pxMax){const navigator=this,chart=navigator.chart,xAxis=navigator.xAxis,pointRange=xAxis.pointRange||0,scrollbarXAxis=xAxis.navigatorAxis.fake?chart.xAxis[0]:xAxis,navigatorEnabled=navigator.navigatorEnabled,rendered=navigator.rendered,inverted=chart.inverted,minRange=chart.xAxis[0].minRange,maxRange=chart.xAxis[0].options.maxRange,scrollButtonSize=navigator.scrollButtonSize;let navigatorWidth,scrollbarLeft,scrollbarTop,scrollbarHeight=navigator.scrollbarHeight,navigatorSize,verb;if(this.hasDragged&&!Navigator_defined(pxMin)){return}if(this.isDirty){this.renderElements()}min=Navigator_correctFloat(min-pointRange/2);max=Navigator_correctFloat(max+pointRange/2);if(!Navigator_isNumber(min)||!Navigator_isNumber(max)){if(rendered){pxMin=0;pxMax=Navigator_pick(xAxis.width,scrollbarXAxis.width)}else{return}}navigator.left=Navigator_pick(xAxis.left,chart.plotLeft+scrollButtonSize+(inverted?chart.plotWidth:0));let zoomedMax=navigator.size=navigatorSize=Navigator_pick(xAxis.len,(inverted?chart.plotHeight:chart.plotWidth)-2*scrollButtonSize);if(inverted){navigatorWidth=scrollbarHeight}else{navigatorWidth=navigatorSize+2*scrollButtonSize}pxMin=Navigator_pick(pxMin,xAxis.toPixels(min,true));pxMax=Navigator_pick(pxMax,xAxis.toPixels(max,true));if(!Navigator_isNumber(pxMin)||Math.abs(pxMin)===Infinity){pxMin=0;pxMax=navigatorWidth}const newMin=xAxis.toValue(pxMin,true),newMax=xAxis.toValue(pxMax,true),currentRange=Math.abs(Navigator_correctFloat(newMax-newMin));if(currentRange<minRange){if(this.grabbedLeft){pxMin=xAxis.toPixels(newMax-minRange-pointRange,true)}else if(this.grabbedRight){pxMax=xAxis.toPixels(newMin+minRange+pointRange,true)}}else if(Navigator_defined(maxRange)&&Navigator_correctFloat(currentRange-pointRange)>maxRange){if(this.grabbedLeft){pxMin=xAxis.toPixels(newMax-maxRange-pointRange,true)}else if(this.grabbedRight){pxMax=xAxis.toPixels(newMin+maxRange+pointRange,true)}}navigator.zoomedMax=clamp(Math.max(pxMin,pxMax),0,zoomedMax);navigator.zoomedMin=clamp(navigator.fixedWidth?navigator.zoomedMax-navigator.fixedWidth:Math.min(pxMin,pxMax),0,zoomedMax);navigator.range=navigator.zoomedMax-navigator.zoomedMin;zoomedMax=Math.round(navigator.zoomedMax);const zoomedMin=Math.round(navigator.zoomedMin);if(navigatorEnabled){navigator.navigatorGroup.attr({visibility:"inherit"});verb=rendered&&!navigator.hasDragged?"animate":"attr";navigator.drawMasks(zoomedMin,zoomedMax,inverted,verb);navigator.drawOutline(zoomedMin,zoomedMax,inverted,verb);if(navigator.navigatorOptions.handles.enabled){navigator.drawHandle(zoomedMin,0,inverted,verb);navigator.drawHandle(zoomedMax,1,inverted,verb)}}if(navigator.scrollbar){if(inverted){scrollbarTop=navigator.top-scrollButtonSize;scrollbarLeft=navigator.left-scrollbarHeight+(navigatorEnabled||!scrollbarXAxis.opposite?0:(scrollbarXAxis.titleOffset||0)+scrollbarXAxis.axisTitleMargin);scrollbarHeight=navigatorSize+2*scrollButtonSize}else{scrollbarTop=navigator.top+(navigatorEnabled?navigator.height:-scrollbarHeight);scrollbarLeft=navigator.left-scrollButtonSize}navigator.scrollbar.position(scrollbarLeft,scrollbarTop,navigatorWidth,scrollbarHeight);navigator.scrollbar.setRange(navigator.zoomedMin/(navigatorSize||1),navigator.zoomedMax/(navigatorSize||1))}navigator.rendered=true;this.isDirty=false;Navigator_fireEvent(this,"afterRender")}addMouseEvents(){const navigator=this,chart=navigator.chart,container=chart.container;let eventsToUnbind=[],mouseMoveHandler,mouseUpHandler;navigator.mouseMoveHandler=mouseMoveHandler=function(e){navigator.onMouseMove(e)};navigator.mouseUpHandler=mouseUpHandler=function(e){navigator.onMouseUp(e)};eventsToUnbind=navigator.getPartsEvents("mousedown");eventsToUnbind.push(Navigator_addEvent(chart.renderTo,"mousemove",mouseMoveHandler),Navigator_addEvent(container.ownerDocument,"mouseup",mouseUpHandler),Navigator_addEvent(chart.renderTo,"touchmove",mouseMoveHandler),Navigator_addEvent(container.ownerDocument,"touchend",mouseUpHandler));eventsToUnbind.concat(navigator.getPartsEvents("touchstart"));navigator.eventsToUnbind=eventsToUnbind;if(navigator.series&&navigator.series[0]){eventsToUnbind.push(Navigator_addEvent(navigator.series[0].xAxis,"foundExtremes",function(){chart.navigator.modifyNavigatorAxisExtremes()}))}}getPartsEvents(eventName){const navigator=this,events=[];["shades","handles"].forEach(function(name){navigator[name].forEach(function(navigatorItem,index){events.push(Navigator_addEvent(navigatorItem.element,eventName,function(e){navigator[name+"Mousedown"](e,index)}))})});return events}shadesMousedown(e,index){e=this.chart.pointer?.normalize(e)||e;const navigator=this,chart=navigator.chart,xAxis=navigator.xAxis,zoomedMin=navigator.zoomedMin,navigatorSize=navigator.size,range=navigator.range;let navigatorPosition=navigator.left,chartX=e.chartX,fixedMax,fixedMin,ext,left;if(chart.inverted){chartX=e.chartY;navigatorPosition=navigator.top}if(index===1){navigator.grabbedCenter=chartX;navigator.fixedWidth=range;navigator.dragOffset=chartX-zoomedMin}else{left=chartX-navigatorPosition-range/2;if(index===0){left=Math.max(0,left)}else if(index===2&&left+range>=navigatorSize){left=navigatorSize-range;if(navigator.reversedExtremes){left-=range;fixedMin=navigator.getUnionExtremes().dataMin}else{fixedMax=navigator.getUnionExtremes().dataMax}}if(left!==zoomedMin){navigator.fixedWidth=range;ext=xAxis.navigatorAxis.toFixedRange(left,left+range,fixedMin,fixedMax);if(Navigator_defined(ext.min)){Navigator_fireEvent(this,"setRange",{min:Math.min(ext.min,ext.max),max:Math.max(ext.min,ext.max),redraw:true,eventArguments:{trigger:"navigator"}})}}}}handlesMousedown(e,index){e=this.chart.pointer?.normalize(e)||e;const navigator=this,chart=navigator.chart,baseXAxis=chart.xAxis[0],reverse=navigator.reversedExtremes;if(index===0){navigator.grabbedLeft=true;navigator.otherHandlePos=navigator.zoomedMax;navigator.fixedExtreme=reverse?baseXAxis.min:baseXAxis.max}else{navigator.grabbedRight=true;navigator.otherHandlePos=navigator.zoomedMin;navigator.fixedExtreme=reverse?baseXAxis.max:baseXAxis.min}chart.setFixedRange(void 0)}onMouseMove(e){const navigator=this,chart=navigator.chart,navigatorSize=navigator.navigatorSize,range=navigator.range,dragOffset=navigator.dragOffset,inverted=chart.inverted;let left=navigator.left,chartX;if(!e.touches||e.touches[0].pageX!==0){e=chart.pointer?.normalize(e)||e;chartX=e.chartX;if(inverted){left=navigator.top;chartX=e.chartY}if(navigator.grabbedLeft){navigator.hasDragged=true;navigator.render(0,0,chartX-left,navigator.otherHandlePos)}else if(navigator.grabbedRight){navigator.hasDragged=true;navigator.render(0,0,navigator.otherHandlePos,chartX-left)}else if(navigator.grabbedCenter){navigator.hasDragged=true;if(chartX<dragOffset){chartX=dragOffset}else if(chartX>navigatorSize+dragOffset-range){chartX=navigatorSize+dragOffset-range}navigator.render(0,0,chartX-dragOffset,chartX-dragOffset+range)}if(navigator.hasDragged&&navigator.scrollbar&&Navigator_pick(navigator.scrollbar.options.liveRedraw,!Navigator_isTouchDevice&&!this.chart.boosted)){e.DOMType=e.type;setTimeout(function(){navigator.onMouseUp(e)},0)}}}onMouseUp(e){const navigator=this,chart=navigator.chart,xAxis=navigator.xAxis,scrollbar=navigator.scrollbar,DOMEvent=e.DOMEvent||e,inverted=chart.inverted,verb=navigator.rendered&&!navigator.hasDragged?"animate":"attr";let zoomedMax,zoomedMin,unionExtremes,fixedMin,fixedMax,ext;if(navigator.hasDragged&&(!scrollbar||!scrollbar.hasDragged)||e.trigger==="scrollbar"){unionExtremes=navigator.getUnionExtremes();if(navigator.zoomedMin===navigator.otherHandlePos){fixedMin=navigator.fixedExtreme}else if(navigator.zoomedMax===navigator.otherHandlePos){fixedMax=navigator.fixedExtreme}if(navigator.zoomedMax===navigator.size){fixedMax=navigator.reversedExtremes?unionExtremes.dataMin:unionExtremes.dataMax}if(navigator.zoomedMin===0){fixedMin=navigator.reversedExtremes?unionExtremes.dataMax:unionExtremes.dataMin}ext=xAxis.navigatorAxis.toFixedRange(navigator.zoomedMin,navigator.zoomedMax,fixedMin,fixedMax);if(Navigator_defined(ext.min)){Navigator_fireEvent(this,"setRange",{min:Math.min(ext.min,ext.max),max:Math.max(ext.min,ext.max),redraw:true,animation:navigator.hasDragged?false:null,eventArguments:{trigger:"navigator",triggerOp:"navigator-drag",DOMEvent:DOMEvent}})}}if(e.DOMType!=="mousemove"&&e.DOMType!=="touchmove"){navigator.grabbedLeft=navigator.grabbedRight=navigator.grabbedCenter=navigator.fixedWidth=navigator.fixedExtreme=navigator.otherHandlePos=navigator.hasDragged=navigator.dragOffset=null}if(navigator.navigatorEnabled&&Navigator_isNumber(navigator.zoomedMin)&&Navigator_isNumber(navigator.zoomedMax)){zoomedMin=Math.round(navigator.zoomedMin);zoomedMax=Math.round(navigator.zoomedMax);if(navigator.shades){navigator.drawMasks(zoomedMin,zoomedMax,inverted,verb)}if(navigator.outline){navigator.drawOutline(zoomedMin,zoomedMax,inverted,verb)}if(navigator.navigatorOptions.handles.enabled&&Object.keys(navigator.handles).length===navigator.handles.length){navigator.drawHandle(zoomedMin,0,inverted,verb);navigator.drawHandle(zoomedMax,1,inverted,verb)}}}removeEvents(){if(this.eventsToUnbind){this.eventsToUnbind.forEach(function(unbind){unbind()});this.eventsToUnbind=void 0}this.removeBaseSeriesEvents()}removeBaseSeriesEvents(){const baseSeries=this.baseSeries||[];if(this.navigatorEnabled&&baseSeries[0]){if(this.navigatorOptions.adaptToUpdatedData!==false){baseSeries.forEach(function(series){Navigator_removeEvent(series,"updatedData",this.updatedDataHandler)},this)}if(baseSeries[0].xAxis){Navigator_removeEvent(baseSeries[0].xAxis,"foundExtremes",this.modifyBaseAxisExtremes)}}}getXAxisOffsets(){return this.chart.inverted?[this.scrollButtonSize,0,-this.scrollButtonSize,0]:[0,-this.scrollButtonSize,0,this.scrollButtonSize]}init(chart){const chartOptions=chart.options,navigatorOptions=chartOptions.navigator||{},navigatorEnabled=navigatorOptions.enabled,scrollbarOptions=chartOptions.scrollbar||{},scrollbarEnabled=scrollbarOptions.enabled,height=navigatorEnabled&&navigatorOptions.height||0,scrollbarHeight=scrollbarEnabled&&scrollbarOptions.height||0,scrollButtonSize=scrollbarOptions.buttonsEnabled&&scrollbarHeight||0;this.handles=[];this.shades=[];this.chart=chart;this.setBaseSeries();this.height=height;this.scrollbarHeight=scrollbarHeight;this.scrollButtonSize=scrollButtonSize;this.scrollbarEnabled=scrollbarEnabled;this.navigatorEnabled=navigatorEnabled;this.navigatorOptions=navigatorOptions;this.scrollbarOptions=scrollbarOptions;this.setOpposite();const navigator=this,baseSeries=navigator.baseSeries,xAxisIndex=chart.xAxis.length,yAxisIndex=chart.yAxis.length,baseXaxis=baseSeries&&baseSeries[0]&&baseSeries[0].xAxis||chart.xAxis[0]||{options:{}};chart.isDirtyBox=true;if(navigator.navigatorEnabled){const offsets=this.getXAxisOffsets();navigator.xAxis=new(highcharts_Axis_commonjs_highcharts_Axis_commonjs2_highcharts_Axis_root_Highcharts_Axis_default())(chart,Navigator_merge({breaks:baseXaxis.options.breaks,ordinal:baseXaxis.options.ordinal,overscroll:baseXaxis.options.overscroll},navigatorOptions.xAxis,{type:"datetime",yAxis:navigatorOptions.yAxis?.id,index:xAxisIndex,isInternal:true,offset:0,keepOrdinalPadding:true,startOnTick:false,endOnTick:false,minPadding:baseXaxis.options.ordinal?0:baseXaxis.options.minPadding,maxPadding:baseXaxis.options.ordinal?0:baseXaxis.options.maxPadding,zoomEnabled:false},chart.inverted?{offsets:offsets,width:height}:{offsets:offsets,height:height}),"xAxis");navigator.yAxis=new(highcharts_Axis_commonjs_highcharts_Axis_commonjs2_highcharts_Axis_root_Highcharts_Axis_default())(chart,Navigator_merge(navigatorOptions.yAxis,{alignTicks:false,offset:0,index:yAxisIndex,isInternal:true,reversed:Navigator_pick(navigatorOptions.yAxis&&navigatorOptions.yAxis.reversed,chart.yAxis[0]&&chart.yAxis[0].reversed,false),zoomEnabled:false},chart.inverted?{width:height}:{height:height}),"yAxis");if(baseSeries||navigatorOptions.series.data){navigator.updateNavigatorSeries(false)}else if(chart.series.length===0){navigator.unbindRedraw=Navigator_addEvent(chart,"beforeRedraw",function(){if(chart.series.length>0&&!navigator.series){navigator.setBaseSeries();navigator.unbindRedraw()}})}navigator.reversedExtremes=chart.inverted&&!navigator.xAxis.reversed||!chart.inverted&&navigator.xAxis.reversed;navigator.renderElements();navigator.addMouseEvents()}else{navigator.xAxis={chart:chart,navigatorAxis:{fake:true},translate:function(value,reverse){const axis=chart.xAxis[0],ext=axis.getExtremes(),scrollTrackWidth=axis.len-2*scrollButtonSize,min=numExt("min",axis.options.min,ext.dataMin),valueRange=numExt("max",axis.options.max,ext.dataMax)-min;return reverse?value*valueRange/scrollTrackWidth+min:scrollTrackWidth*(value-min)/valueRange},toPixels:function(value){return this.translate(value)},toValue:function(value){return this.translate(value,true)}};navigator.xAxis.navigatorAxis.axis=navigator.xAxis;navigator.xAxis.navigatorAxis.toFixedRange=NavigatorAxisComposition.prototype.toFixedRange.bind(navigator.xAxis.navigatorAxis)}if(chart.options.scrollbar.enabled){const options=Navigator_merge(chart.options.scrollbar,{vertical:chart.inverted});if(!Navigator_isNumber(options.margin)&&navigator.navigatorEnabled){options.margin=chart.inverted?-3:3}chart.scrollbar=navigator.scrollbar=new Scrollbar_Scrollbar(chart.renderer,options,chart);Navigator_addEvent(navigator.scrollbar,"changed",function(e){const range=navigator.size,to=range*this.to,from=range*this.from;navigator.hasDragged=navigator.scrollbar.hasDragged;navigator.render(0,0,from,to);if(this.shouldUpdateExtremes(e.DOMType)){setTimeout(function(){navigator.onMouseUp(e)})}})}navigator.addBaseSeriesEvents();navigator.addChartEvents()}setOpposite(){const navigatorOptions=this.navigatorOptions,navigatorEnabled=this.navigatorEnabled,chart=this.chart;this.opposite=Navigator_pick(navigatorOptions.opposite,Boolean(!navigatorEnabled&&chart.inverted))}getUnionExtremes(returnFalseOnNoBaseSeries){const baseAxis=this.chart.xAxis[0],time=this.chart.time,navAxis=this.xAxis,navAxisOptions=navAxis.options,baseAxisOptions=baseAxis.options;let ret;if(!returnFalseOnNoBaseSeries||baseAxis.dataMin!==null){ret={dataMin:Navigator_pick(time.parse(navAxisOptions?.min),numExt("min",time.parse(baseAxisOptions.min),baseAxis.dataMin,navAxis.dataMin,navAxis.min)),dataMax:Navigator_pick(time.parse(navAxisOptions?.max),numExt("max",time.parse(baseAxisOptions.max),baseAxis.dataMax,navAxis.dataMax,navAxis.max))}}return ret}setBaseSeries(baseSeriesOptions,redraw){const chart=this.chart,baseSeries=this.baseSeries=[];baseSeriesOptions=baseSeriesOptions||chart.options&&chart.options.navigator.baseSeries||(chart.series.length?find(chart.series,s=>!s.options.isInternal).index:0);(chart.series||[]).forEach((series,i)=>{if(!series.options.isInternal&&(series.options.showInNavigator||(i===baseSeriesOptions||series.options.id===baseSeriesOptions)&&series.options.showInNavigator!==false)){baseSeries.push(series)}});if(this.xAxis&&!this.xAxis.navigatorAxis.fake){this.updateNavigatorSeries(true,redraw)}}updateNavigatorSeries(addEvents,redraw){const navigator=this,chart=navigator.chart,baseSeries=navigator.baseSeries,navSeriesMixin={enableMouseTracking:false,index:null,linkedTo:null,group:"nav",padXAxis:false,xAxis:this.navigatorOptions.xAxis?.id,yAxis:this.navigatorOptions.yAxis?.id,showInLegend:false,stacking:void 0,isInternal:true,states:{inactive:{opacity:1}}},navigatorSeries=navigator.series=(navigator.series||[]).filter(navSeries=>{const base=navSeries.baseSeries;if(baseSeries.indexOf(base)<0){if(base){Navigator_removeEvent(base,"updatedData",navigator.updatedDataHandler);delete base.navigatorSeries}if(navSeries.chart){navSeries.destroy()}return false}return true});let baseOptions,mergedNavSeriesOptions,chartNavigatorSeriesOptions=navigator.navigatorOptions.series,baseNavigatorOptions;if(baseSeries&&baseSeries.length){baseSeries.forEach(base=>{const linkedNavSeries=base.navigatorSeries,userNavOptions=Navigator_extend({color:base.color,visible:base.visible},!Navigator_isArray(chartNavigatorSeriesOptions)?chartNavigatorSeriesOptions:Navigator_defaultOptions.navigator.series);if(linkedNavSeries&&navigator.navigatorOptions.adaptToUpdatedData===false){return}navSeriesMixin.name="Navigator "+baseSeries.length;baseOptions=base.options||{};baseNavigatorOptions=baseOptions.navigatorOptions||{};userNavOptions.dataLabels=splat(userNavOptions.dataLabels);mergedNavSeriesOptions=Navigator_merge(baseOptions,navSeriesMixin,userNavOptions,baseNavigatorOptions);mergedNavSeriesOptions.pointRange=Navigator_pick(userNavOptions.pointRange,baseNavigatorOptions.pointRange,Navigator_defaultOptions.plotOptions[mergedNavSeriesOptions.type||"line"].pointRange);const navigatorSeriesData=baseNavigatorOptions.data||userNavOptions.data;navigator.hasNavigatorData=navigator.hasNavigatorData||!!navigatorSeriesData;mergedNavSeriesOptions.data=navigatorSeriesData||baseOptions.data?.slice(0);if(linkedNavSeries&&linkedNavSeries.options){linkedNavSeries.update(mergedNavSeriesOptions,redraw)}else{base.navigatorSeries=chart.initSeries(mergedNavSeriesOptions);chart.setSortedData();base.navigatorSeries.baseSeries=base;navigatorSeries.push(base.navigatorSeries)}})}if(chartNavigatorSeriesOptions.data&&!(baseSeries&&baseSeries.length)||Navigator_isArray(chartNavigatorSeriesOptions)){navigator.hasNavigatorData=false;chartNavigatorSeriesOptions=splat(chartNavigatorSeriesOptions);chartNavigatorSeriesOptions.forEach((userSeriesOptions,i)=>{navSeriesMixin.name="Navigator "+(navigatorSeries.length+1);mergedNavSeriesOptions=Navigator_merge(Navigator_defaultOptions.navigator.series,{color:chart.series[i]&&!chart.series[i].options.isInternal&&chart.series[i].color||chart.options.colors[i]||chart.options.colors[0]},navSeriesMixin,userSeriesOptions);mergedNavSeriesOptions.data=userSeriesOptions.data;if(mergedNavSeriesOptions.data){navigator.hasNavigatorData=true;navigatorSeries.push(chart.initSeries(mergedNavSeriesOptions))}})}if(addEvents){this.addBaseSeriesEvents()}}addBaseSeriesEvents(){const navigator=this,baseSeries=navigator.baseSeries||[];if(baseSeries[0]&&baseSeries[0].xAxis){baseSeries[0].eventsToUnbind.push(Navigator_addEvent(baseSeries[0].xAxis,"foundExtremes",this.modifyBaseAxisExtremes))}baseSeries.forEach(base=>{base.eventsToUnbind.push(Navigator_addEvent(base,"show",function(){if(this.navigatorSeries){this.navigatorSeries.setVisible(true,false)}}));base.eventsToUnbind.push(Navigator_addEvent(base,"hide",function(){if(this.navigatorSeries){this.navigatorSeries.setVisible(false,false)}}));if(this.navigatorOptions.adaptToUpdatedData!==false){if(base.xAxis){base.eventsToUnbind.push(Navigator_addEvent(base,"updatedData",this.updatedDataHandler))}}base.eventsToUnbind.push(Navigator_addEvent(base,"remove",function(){if(baseSeries){erase(baseSeries,base)}if(this.navigatorSeries&&navigator.series){erase(navigator.series,this.navigatorSeries);if(Navigator_defined(this.navigatorSeries.options)){this.navigatorSeries.remove(false)}delete this.navigatorSeries}}))})}getBaseSeriesMin(currentSeriesMin){return this.baseSeries.reduce(function(min,series){return Math.min(min,series.getColumn("x")[0]??min)},currentSeriesMin)}modifyNavigatorAxisExtremes(){const xAxis=this.xAxis;if(typeof xAxis.getExtremes!=="undefined"){const unionExtremes=this.getUnionExtremes(true);if(unionExtremes&&(unionExtremes.dataMin!==xAxis.min||unionExtremes.dataMax!==xAxis.max)){xAxis.min=unionExtremes.dataMin;xAxis.max=unionExtremes.dataMax}}}modifyBaseAxisExtremes(){const baseXAxis=this,navigator=baseXAxis.chart.navigator,baseExtremes=baseXAxis.getExtremes(),baseMin=baseExtremes.min,baseMax=baseExtremes.max,baseDataMin=baseExtremes.dataMin,baseDataMax=baseExtremes.dataMax,range=baseMax-baseMin,stickToMin=navigator.stickToMin,stickToMax=navigator.stickToMax,overscroll=Navigator_pick(baseXAxis.ordinal?.convertOverscroll(baseXAxis.options.overscroll),0),navigatorSeries=navigator.series&&navigator.series[0],hasSetExtremes=!!baseXAxis.setExtremes,unmutable=baseXAxis.eventArgs&&baseXAxis.eventArgs.trigger==="rangeSelectorButton";let newMax,newMin;if(!unmutable){if(stickToMin){newMin=baseDataMin;newMax=newMin+range}if(stickToMax){newMax=baseDataMax+overscroll;if(!stickToMin){newMin=Math.max(baseDataMin,newMax-range,navigator.getBaseSeriesMin(navigatorSeries&&navigatorSeries.xData?navigatorSeries.xData[0]:-Number.MAX_VALUE))}}if(hasSetExtremes&&(stickToMin||stickToMax)){if(Navigator_isNumber(newMin)){baseXAxis.min=baseXAxis.userMin=newMin;baseXAxis.max=baseXAxis.userMax=newMax}}}navigator.stickToMin=navigator.stickToMax=null}updatedDataHandler(){const navigator=this.chart.navigator,baseSeries=this,navigatorSeries=this.navigatorSeries,shouldStickToMax=navigator.reversedExtremes?Math.round(navigator.zoomedMin)===0:Math.round(navigator.zoomedMax)>=Math.round(navigator.size);navigator.stickToMax=Navigator_pick(this.chart.options.navigator&&this.chart.options.navigator.stickToMax,shouldStickToMax);navigator.stickToMin=navigator.shouldStickToMin(baseSeries,navigator);if(navigatorSeries&&!navigator.hasNavigatorData){navigatorSeries.options.pointStart=baseSeries.getColumn("x")[0];navigatorSeries.setData(baseSeries.options.data,false,null,false)}}shouldStickToMin(baseSeries,navigator){const xDataMin=navigator.getBaseSeriesMin(baseSeries.getColumn("x")[0]),xAxis=baseSeries.xAxis,max=xAxis.max,min=xAxis.min,range=xAxis.options.range;let stickToMin=true;if(Navigator_isNumber(max)&&Navigator_isNumber(min)){if(range&&max-xDataMin>0){stickToMin=max-xDataMin<range}else{stickToMin=min<=xDataMin}}else{stickToMin=false}return stickToMin}addChartEvents(){if(!this.eventsToUnbind){this.eventsToUnbind=[]}this.eventsToUnbind.push(Navigator_addEvent(this.chart,"redraw",function(){const navigator=this.navigator,xAxis=navigator&&(navigator.baseSeries&&navigator.baseSeries[0]&&navigator.baseSeries[0].xAxis||this.xAxis[0]);if(xAxis){navigator.render(xAxis.min,xAxis.max)}}),Navigator_addEvent(this.chart,"getMargins",function(){const chart=this,navigator=chart.navigator;let marginName=navigator.opposite?"plotTop":"marginBottom";if(chart.inverted){marginName=navigator.opposite?"marginRight":"plotLeft"}chart[marginName]=(chart[marginName]||0)+(navigator.navigatorEnabled||!chart.inverted?navigator.height+navigator.scrollbarHeight:0)+navigator.navigatorOptions.margin}),Navigator_addEvent(Navigator,"setRange",function(e){this.chart.xAxis[0].setExtremes(e.min,e.max,e.redraw,e.animation,e.eventArguments)}))}destroy(){this.removeEvents();if(this.xAxis){erase(this.chart.xAxis,this.xAxis);erase(this.chart.axes,this.xAxis)}if(this.yAxis){erase(this.chart.yAxis,this.yAxis);erase(this.chart.axes,this.yAxis)}(this.series||[]).forEach(s=>{if(s.destroy){s.destroy()}});["series","xAxis","yAxis","shades","outline","scrollbarTrack","scrollbarRifles","scrollbarGroup","scrollbar","navigatorGroup","rendered"].forEach(prop=>{if(this[prop]&&this[prop].destroy){this[prop].destroy()}this[prop]=null});[this.handles].forEach(coll=>{Navigator_destroyObjectProperties(coll)});this.navigatorEnabled=false}}const Navigator_Navigator=Navigator;const{fireEvent:DataTableCore_fireEvent,isArray:DataTableCore_isArray,objectEach,uniqueKey}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();class DataTableCore{constructor(options={}){this.autoId=!options.id;this.columns={};this.id=options.id||uniqueKey();this.modified=this;this.rowCount=0;this.versionTag=uniqueKey();let rowCount=0;objectEach(options.columns||{},(column,columnName)=>{this.columns[columnName]=column.slice();rowCount=Math.max(rowCount,column.length)});this.applyRowCount(rowCount)}applyRowCount(rowCount){this.rowCount=rowCount;objectEach(this.columns,column=>{if(DataTableCore_isArray(column)){column.length=rowCount}})}getColumn(columnName,asReference){return this.columns[columnName]}getColumns(columnNames,asReference){return(columnNames||Object.keys(this.columns)).reduce((columns,columnName)=>{columns[columnName]=this.columns[columnName];return columns},{})}getRow(rowIndex,columnNames){return(columnNames||Object.keys(this.columns)).map(key=>this.columns[key]?.[rowIndex])}setColumn(columnName,column=[],rowIndex=0,eventDetail){this.setColumns({[columnName]:column},rowIndex,eventDetail)}setColumns(columns,rowIndex,eventDetail){let rowCount=this.rowCount;objectEach(columns,(column,columnName)=>{this.columns[columnName]=column.slice();rowCount=column.length});this.applyRowCount(rowCount);if(!eventDetail?.silent){DataTableCore_fireEvent(this,"afterSetColumns");this.versionTag=uniqueKey()}}setRow(row,rowIndex=this.rowCount,insert,eventDetail){const{columns}=this,indexRowCount=insert?this.rowCount+1:rowIndex+1;objectEach(row,(cellValue,columnName)=>{const column=columns[columnName]||eventDetail?.addColumns!==false&&new Array(indexRowCount);if(column){if(insert){column.splice(rowIndex,0,cellValue)}else{column[rowIndex]=cellValue}columns[columnName]=column}});if(indexRowCount>this.rowCount){this.applyRowCount(indexRowCount)}if(!eventDetail?.silent){DataTableCore_fireEvent(this,"afterSetRows");this.versionTag=uniqueKey()}}}const Data_DataTableCore=DataTableCore;"";const{addEvent:OrdinalAxis_addEvent,correctFloat:OrdinalAxis_correctFloat,css,defined:OrdinalAxis_defined,error,isNumber:OrdinalAxis_isNumber,pick:OrdinalAxis_pick,timeUnits,isString:OrdinalAxis_isString}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();var OrdinalAxis;(function(OrdinalAxis){function compose(AxisClass,SeriesClass,ChartClass){const axisProto=AxisClass.prototype;if(!axisProto.ordinal2lin){axisProto.getTimeTicks=getTimeTicks;axisProto.index2val=index2val;axisProto.lin2val=lin2val;axisProto.val2lin=val2lin;axisProto.ordinal2lin=axisProto.val2lin;OrdinalAxis_addEvent(AxisClass,"afterInit",onAxisAfterInit);OrdinalAxis_addEvent(AxisClass,"foundExtremes",onAxisFoundExtremes);OrdinalAxis_addEvent(AxisClass,"afterSetScale",onAxisAfterSetScale);OrdinalAxis_addEvent(AxisClass,"initialAxisTranslation",onAxisInitialAxisTranslation);OrdinalAxis_addEvent(ChartClass,"pan",onChartPan);OrdinalAxis_addEvent(ChartClass,"touchpan",onChartPan);OrdinalAxis_addEvent(SeriesClass,"updatedData",onSeriesUpdatedData)}return AxisClass}OrdinalAxis.compose=compose;function getTimeTicks(normalizedInterval,min,max,startOfWeek,positions=[],closestDistance=0,findHigherRanks){const higherRanks={},tickPixelIntervalOption=this.options.tickPixelInterval,time=this.chart.time,segmentStarts=[];let end,segmentPositions,hasCrossedHigherRank,info,outsideMax,start=0,groupPositions=[],lastGroupPosition=-Number.MAX_VALUE;if(!this.options.ordinal&&!this.options.breaks||!positions||positions.length<3||typeof min==="undefined"){return time.getTimeTicks.apply(time,arguments)}const posLength=positions.length;for(end=0;end<posLength;end++){outsideMax=end&&positions[end-1]>max;if(positions[end]<min){start=end}if(end===posLength-1||positions[end+1]-positions[end]>closestDistance*5||outsideMax){if(positions[end]>lastGroupPosition){segmentPositions=time.getTimeTicks(normalizedInterval,positions[start],positions[end],startOfWeek);while(segmentPositions.length&&segmentPositions[0]<=lastGroupPosition){segmentPositions.shift()}if(segmentPositions.length){lastGroupPosition=segmentPositions[segmentPositions.length-1]}segmentStarts.push(groupPositions.length);groupPositions=groupPositions.concat(segmentPositions)}start=end+1}if(outsideMax){break}}if(segmentPositions){info=segmentPositions.info;if(findHigherRanks&&info.unitRange<=timeUnits.hour){end=groupPositions.length-1;for(start=1;start<end;start++){if(time.dateFormat("%d",groupPositions[start])!==time.dateFormat("%d",groupPositions[start-1])){higherRanks[groupPositions[start]]="day";hasCrossedHigherRank=true}}if(hasCrossedHigherRank){higherRanks[groupPositions[0]]="day"}info.higherRanks=higherRanks}info.segmentStarts=segmentStarts;groupPositions.info=info}else{error(12,false,this.chart)}if(findHigherRanks&&OrdinalAxis_defined(tickPixelIntervalOption)){const length=groupPositions.length,translatedArr=[],distances=[];let itemToRemove,translated,lastTranslated,medianDistance,distance,i=length;while(i--){translated=this.translate(groupPositions[i]);if(lastTranslated){distances[i]=lastTranslated-translated}translatedArr[i]=lastTranslated=translated}distances.sort((a,b)=>a-b);medianDistance=distances[Math.floor(distances.length/2)];if(medianDistance<tickPixelIntervalOption*.6){medianDistance=null}i=groupPositions[length-1]>max?length-1:length;lastTranslated=void 0;while(i--){translated=translatedArr[i];distance=Math.abs(lastTranslated-translated);if(lastTranslated&&distance<tickPixelIntervalOption*.8&&(medianDistance===null||distance<medianDistance*.8)){if(higherRanks[groupPositions[i]]&&!higherRanks[groupPositions[i+1]]){itemToRemove=i+1;lastTranslated=translated}else{itemToRemove=i}groupPositions.splice(itemToRemove,1)}else{lastTranslated=translated}}}return groupPositions}function index2val(index){const axis=this,ordinal=axis.ordinal,ordinalPositions=ordinal.positions;if(!ordinalPositions){return index}let i=ordinalPositions.length-1,distance;if(index<0){index=ordinalPositions[0]}else if(index>i){index=ordinalPositions[i]}else{i=Math.floor(index);distance=index-i}if(typeof distance!=="undefined"&&typeof ordinalPositions[i]!=="undefined"){return ordinalPositions[i]+(distance?distance*(ordinalPositions[i+1]-ordinalPositions[i]):0)}return index}function lin2val(val){const axis=this,ordinal=axis.ordinal,localMin=axis.old?axis.old.min:axis.min,localA=axis.old?axis.old.transA:axis.transA;const positions=ordinal.getExtendedPositions();if(positions?.length){const pixelVal=OrdinalAxis_correctFloat((val-localMin)*localA+axis.minPixelPadding),index=OrdinalAxis_correctFloat(ordinal.getIndexOfPoint(pixelVal,positions)),mantissa=OrdinalAxis_correctFloat(index%1);if(index>=0&&index<=positions.length-1){const leftNeighbour=positions[Math.floor(index)],rightNeighbour=positions[Math.ceil(index)],distance=rightNeighbour-leftNeighbour;return positions[Math.floor(index)]+mantissa*distance}}return val}function getIndexInArray(ordinalPositions,val){const index=OrdinalAxis.Additions.findIndexOf(ordinalPositions,val,true);if(ordinalPositions[index]===val){return index}const percent=(val-ordinalPositions[index])/(ordinalPositions[index+1]-ordinalPositions[index]);return index+percent}function onAxisAfterInit(){const axis=this;if(!axis.ordinal){axis.ordinal=new OrdinalAxis.Additions(axis)}}function onAxisFoundExtremes(){const axis=this,{eventArgs,options}=axis;if(axis.isXAxis&&OrdinalAxis_defined(options.overscroll)&&options.overscroll!==0&&OrdinalAxis_isNumber(axis.max)&&OrdinalAxis_isNumber(axis.min)){if(axis.options.ordinal&&!axis.ordinal.originalOrdinalRange){axis.ordinal.getExtendedPositions(false)}if(axis.max===axis.dataMax&&(eventArgs?.trigger!=="pan"||axis.isInternal)&&eventArgs?.trigger!=="navigator"){const overscroll=axis.ordinal.convertOverscroll(options.overscroll);axis.max+=overscroll;if(!axis.isInternal&&OrdinalAxis_defined(axis.userMin)&&eventArgs?.trigger!=="mousewheel"){axis.min+=overscroll}}}}function onAxisAfterSetScale(){const axis=this;if(axis.horiz&&!axis.isDirty){axis.isDirty=axis.isOrdinal&&axis.chart.navigator&&!axis.chart.navigator.adaptToUpdatedData}}function onAxisInitialAxisTranslation(){const axis=this;if(axis.ordinal){axis.ordinal.beforeSetTickPositions();axis.tickInterval=axis.ordinal.postProcessTickInterval(axis.tickInterval)}}function onChartPan(e){const chart=this,xAxis=chart.xAxis[0],overscroll=xAxis.ordinal.convertOverscroll(xAxis.options.overscroll),chartX=e.originalEvent.chartX,panning=chart.options.chart.panning;let runBase=false;if(panning&&panning.type!=="y"&&xAxis.options.ordinal&&xAxis.series.length&&(!e.touches||e.touches.length<=1)){const mouseDownX=chart.mouseDownX,extremes=xAxis.getExtremes(),dataMin=extremes.dataMin,dataMax=extremes.dataMax,min=extremes.min,max=extremes.max,hoverPoints=chart.hoverPoints,closestPointRange=xAxis.closestPointRange||xAxis.ordinal&&xAxis.ordinal.overscrollPointsRange,pointPixelWidth=xAxis.translationSlope*(xAxis.ordinal.slope||closestPointRange),movedUnits=Math.round((mouseDownX-chartX)/pointPixelWidth),extendedOrdinalPositions=xAxis.ordinal.getExtendedPositions(),extendedAxis={ordinal:{positions:extendedOrdinalPositions,extendedOrdinalPositions:extendedOrdinalPositions}},index2val=xAxis.index2val,val2lin=xAxis.val2lin;let trimmedRange,ordinalPositions;if(min<=dataMin&&movedUnits<0||max+overscroll>=dataMax&&movedUnits>0){return}if(!extendedAxis.ordinal.positions){runBase=true}else if(Math.abs(movedUnits)>1){if(hoverPoints){hoverPoints.forEach(function(point){point.setState()})}ordinalPositions=extendedAxis.ordinal.positions;if(dataMax>ordinalPositions[ordinalPositions.length-1]){ordinalPositions.push(dataMax)}chart.setFixedRange(max-min);trimmedRange=xAxis.navigatorAxis.toFixedRange(void 0,void 0,index2val.apply(extendedAxis,[val2lin.apply(extendedAxis,[min,true])+movedUnits]),index2val.apply(extendedAxis,[val2lin.apply(extendedAxis,[max,true])+movedUnits]));if(trimmedRange.min>=Math.min(ordinalPositions[0],min)&&trimmedRange.max<=Math.max(ordinalPositions[ordinalPositions.length-1],max)+overscroll){xAxis.setExtremes(trimmedRange.min,trimmedRange.max,true,false,{trigger:"pan"})}chart.mouseDownX=chartX;css(chart.container,{cursor:"move"})}}else{runBase=true}if(runBase||panning&&/y/.test(panning.type)){if(overscroll){xAxis.max=xAxis.dataMax+overscroll}}else{e.preventDefault()}}function onSeriesUpdatedData(){const xAxis=this.xAxis;if(xAxis&&xAxis.options.ordinal){delete xAxis.ordinal.index;delete xAxis.ordinal.originalOrdinalRange}}function val2lin(val,toIndex){const axis=this,ordinal=axis.ordinal,ordinalPositions=ordinal.positions;let slope=ordinal.slope,extendedOrdinalPositions;if(!ordinalPositions){return val}const ordinalLength=ordinalPositions.length;let ordinalIndex;if(ordinalPositions[0]<=val&&ordinalPositions[ordinalLength-1]>=val){ordinalIndex=getIndexInArray(ordinalPositions,val)}else{extendedOrdinalPositions=ordinal.getExtendedPositions&&ordinal.getExtendedPositions();if(!(extendedOrdinalPositions&&extendedOrdinalPositions.length)){return val}const length=extendedOrdinalPositions.length;if(!slope){slope=(extendedOrdinalPositions[length-1]-extendedOrdinalPositions[0])/length}const originalPositionsReference=getIndexInArray(extendedOrdinalPositions,ordinalPositions[0]);if(val>=extendedOrdinalPositions[0]&&val<=extendedOrdinalPositions[length-1]){ordinalIndex=getIndexInArray(extendedOrdinalPositions,val)-originalPositionsReference}else{if(!toIndex){return val}if(val<extendedOrdinalPositions[0]){const diff=extendedOrdinalPositions[0]-val,approximateIndexOffset=diff/slope;ordinalIndex=-originalPositionsReference-approximateIndexOffset}else{const diff=val-extendedOrdinalPositions[length-1],approximateIndexOffset=diff/slope;ordinalIndex=approximateIndexOffset+length-originalPositionsReference}}}return toIndex?ordinalIndex:slope*(ordinalIndex||0)+ordinal.offset}class Additions{constructor(axis){this.index={};this.axis=axis}beforeSetTickPositions(){const axis=this.axis,ordinal=axis.ordinal,extremes=axis.getExtremes(),min=extremes.min,max=extremes.max,hasBreaks=axis.brokenAxis?.hasBreaks,isOrdinal=axis.options.ordinal;let len,uniqueOrdinalPositions,dist,minIndex,maxIndex,slope,i,ordinalPositions=[],overscrollPointsRange=Number.MAX_VALUE,useOrdinal=false,adjustOrdinalExtremesPoints=false,isBoosted=false;if(isOrdinal||hasBreaks){let distanceBetweenPoint=0;axis.series.forEach(function(series,i){const xData=series.getColumn("x",true);uniqueOrdinalPositions=[];if(i>0&&series.options.id!=="highcharts-navigator-series"&&xData.length>1){adjustOrdinalExtremesPoints=distanceBetweenPoint!==xData[1]-xData[0]}distanceBetweenPoint=xData[1]-xData[0];if(series.boosted){isBoosted=series.boosted}if(series.reserveSpace()&&(series.takeOrdinalPosition!==false||hasBreaks)){ordinalPositions=ordinalPositions.concat(xData);len=ordinalPositions.length;ordinalPositions.sort(function(a,b){return a-b});overscrollPointsRange=Math.min(overscrollPointsRange,OrdinalAxis_pick(series.closestPointRange,overscrollPointsRange));if(len){i=0;while(i<len-1){if(ordinalPositions[i]!==ordinalPositions[i+1]){uniqueOrdinalPositions.push(ordinalPositions[i+1])}i++}if(uniqueOrdinalPositions[0]!==ordinalPositions[0]){uniqueOrdinalPositions.unshift(ordinalPositions[0])}ordinalPositions=uniqueOrdinalPositions}}});if(!axis.ordinal.originalOrdinalRange){axis.ordinal.originalOrdinalRange=(ordinalPositions.length-1)*overscrollPointsRange}if(adjustOrdinalExtremesPoints&&isBoosted){ordinalPositions.pop();ordinalPositions.shift()}len=ordinalPositions.length;if(len>2){dist=ordinalPositions[1]-ordinalPositions[0];i=len-1;while(i--&&!useOrdinal){if(ordinalPositions[i+1]-ordinalPositions[i]!==dist){useOrdinal=true}}if(!axis.options.keepOrdinalPadding&&(ordinalPositions[0]-min>dist||max-ordinalPositions[ordinalPositions.length-1]>dist)){useOrdinal=true}}else if(axis.options.overscroll){if(len===2){overscrollPointsRange=ordinalPositions[1]-ordinalPositions[0]}else if(len===1){overscrollPointsRange=axis.ordinal.convertOverscroll(axis.options.overscroll);ordinalPositions=[ordinalPositions[0],ordinalPositions[0]+overscrollPointsRange]}else{overscrollPointsRange=ordinal.overscrollPointsRange}}if(useOrdinal||axis.forceOrdinal){if(axis.options.overscroll){ordinal.overscrollPointsRange=overscrollPointsRange;ordinalPositions=ordinalPositions.concat(ordinal.getOverscrollPositions())}ordinal.positions=ordinalPositions;minIndex=axis.ordinal2lin(Math.max(min,ordinalPositions[0]),true);maxIndex=Math.max(axis.ordinal2lin(Math.min(max,ordinalPositions[ordinalPositions.length-1]),true),1);ordinal.slope=slope=(max-min)/(maxIndex-minIndex);ordinal.offset=min-minIndex*slope}else{ordinal.overscrollPointsRange=OrdinalAxis_pick(axis.closestPointRange,ordinal.overscrollPointsRange);ordinal.positions=axis.ordinal.slope=ordinal.offset=void 0}}axis.isOrdinal=isOrdinal&&useOrdinal;ordinal.groupIntervalFactor=null}static findIndexOf(sortedArray,key,indirectSearch){let start=0,end=sortedArray.length-1,middle;while(start<end){middle=Math.ceil((start+end)/2);if(sortedArray[middle]<=key){start=middle}else{end=middle-1}}if(sortedArray[start]===key){return start}return!indirectSearch?-1:start}getExtendedPositions(withOverscroll=true){const ordinal=this,axis=ordinal.axis,axisProto=axis.constructor.prototype,chart=axis.chart,key=axis.series.reduce((k,series)=>{const grouping=series.currentDataGrouping;return k+(grouping?grouping.count+grouping.unitName:"raw")},""),overscroll=withOverscroll?axis.ordinal.convertOverscroll(axis.options.overscroll):0,extremes=axis.getExtremes();let fakeAxis,fakeSeries=void 0,ordinalIndex=ordinal.index;if(!ordinalIndex){ordinalIndex=ordinal.index={}}if(!ordinalIndex[key]){fakeAxis={series:[],chart:chart,forceOrdinal:false,getExtremes:function(){return{min:extremes.dataMin,max:extremes.dataMax+overscroll}},applyGrouping:axisProto.applyGrouping,getGroupPixelWidth:axisProto.getGroupPixelWidth,getTimeTicks:axisProto.getTimeTicks,options:{ordinal:true},ordinal:{getGroupIntervalFactor:this.getGroupIntervalFactor},ordinal2lin:axisProto.ordinal2lin,getIndexOfPoint:axisProto.getIndexOfPoint,val2lin:axisProto.val2lin};fakeAxis.ordinal.axis=fakeAxis;axis.series.forEach(series=>{fakeSeries={xAxis:fakeAxis,chart:chart,groupPixelWidth:series.groupPixelWidth,destroyGroupedData:highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().noop,getColumn:series.getColumn,applyGrouping:series.applyGrouping,getProcessedData:series.getProcessedData,reserveSpace:series.reserveSpace,visible:series.visible};const xData=series.getColumn("x").concat(withOverscroll?ordinal.getOverscrollPositions():[]);fakeSeries.dataTable=new Data_DataTableCore({columns:{x:xData}});fakeSeries.options={...series.options,dataGrouping:series.currentDataGrouping?{firstAnchor:series.options.dataGrouping?.firstAnchor,anchor:series.options.dataGrouping?.anchor,lastAnchor:series.options.dataGrouping?.firstAnchor,enabled:true,forced:true,approximation:"open",units:[[series.currentDataGrouping.unitName,[series.currentDataGrouping.count]]]}:{enabled:false}};fakeAxis.series.push(fakeSeries);series.processData.apply(fakeSeries)});fakeAxis.applyGrouping({hasExtremesChanged:true});if(fakeSeries?.closestPointRange!==fakeSeries?.basePointRange&&fakeSeries.currentDataGrouping){fakeAxis.forceOrdinal=true}axis.ordinal.beforeSetTickPositions.apply({axis:fakeAxis});if(!axis.ordinal.originalOrdinalRange&&fakeAxis.ordinal.originalOrdinalRange){axis.ordinal.originalOrdinalRange=fakeAxis.ordinal.originalOrdinalRange}if(fakeAxis.ordinal.positions){ordinalIndex[key]=fakeAxis.ordinal.positions}}return ordinalIndex[key]}getGroupIntervalFactor(xMin,xMax,series){const ordinal=this,processedXData=series.getColumn("x",true),len=processedXData.length,distances=[];let median,i,groupIntervalFactor=ordinal.groupIntervalFactor;if(!groupIntervalFactor){for(i=0;i<len-1;i++){distances[i]=processedXData[i+1]-processedXData[i]}distances.sort(function(a,b){return a-b});median=distances[Math.floor(len/2)];xMin=Math.max(xMin,processedXData[0]);xMax=Math.min(xMax,processedXData[len-1]);ordinal.groupIntervalFactor=groupIntervalFactor=len*median/(xMax-xMin)}return groupIntervalFactor}getIndexOfPoint(pixelVal,ordinalArray){const ordinal=this,axis=ordinal.axis,min=axis.min,minX=axis.minPixelPadding,indexOfMin=getIndexInArray(ordinalArray,min);const ordinalPointPixelInterval=axis.translationSlope*(ordinal.slope||axis.closestPointRange||ordinal.overscrollPointsRange);const shiftIndex=OrdinalAxis_correctFloat((pixelVal-minX)/ordinalPointPixelInterval);return indexOfMin+shiftIndex}getOverscrollPositions(){const ordinal=this,axis=ordinal.axis,extraRange=ordinal.convertOverscroll(axis.options.overscroll),distance=ordinal.overscrollPointsRange,positions=[];let max=axis.dataMax;if(OrdinalAxis_defined(distance)){while(max<axis.dataMax+extraRange){max+=distance;positions.push(max)}}return positions}postProcessTickInterval(tickInterval){const ordinal=this,axis=ordinal.axis,ordinalSlope=ordinal.slope,closestPointRange=axis.closestPointRange;let ret;if(ordinalSlope&&closestPointRange){if(!axis.options.breaks){ret=tickInterval/(ordinalSlope/closestPointRange)}else{ret=closestPointRange||tickInterval}}else{ret=tickInterval}return ret}convertOverscroll(overscroll=0){const ordinal=this,axis=ordinal.axis,calculateOverscroll=function(overscrollPercentage){return OrdinalAxis_pick(ordinal.originalOrdinalRange,OrdinalAxis_defined(axis.dataMax)&&OrdinalAxis_defined(axis.dataMin)?axis.dataMax-axis.dataMin:0)*overscrollPercentage};if(OrdinalAxis_isString(overscroll)){const overscrollValue=parseInt(overscroll,10);if(/%$/.test(overscroll)){return calculateOverscroll(overscrollValue/100)}if(/px/.test(overscroll)){const limitedOverscrollValue=Math.min(overscrollValue,axis.len*.9),pixelToPercent=limitedOverscrollValue/axis.len;return calculateOverscroll(pixelToPercent/(1-pixelToPercent))}return 0}return overscroll}}OrdinalAxis.Additions=Additions})(OrdinalAxis||(OrdinalAxis={}));const Axis_OrdinalAxis=OrdinalAxis;const lang={rangeSelectorZoom:"Zoom",rangeSelectorFrom:"",rangeSelectorTo:"→"};const rangeSelector={allButtonsEnabled:false,buttons:[{type:"month",count:1,text:"1m",title:"View 1 month"},{type:"month",count:3,text:"3m",title:"View 3 months"},{type:"month",count:6,text:"6m",title:"View 6 months"},{type:"ytd",text:"YTD",title:"View year to date"},{type:"year",count:1,text:"1y",title:"View 1 year"},{type:"all",text:"All",title:"View all"}],buttonSpacing:5,dropdown:"responsive",enabled:void 0,verticalAlign:"top",buttonTheme:{width:28,height:18,padding:2,zIndex:7},floating:false,x:0,y:0,height:void 0,inputBoxBorderColor:"none",inputBoxHeight:17,inputBoxWidth:void 0,inputDateFormat:"%[ebY]",inputDateParser:void 0,inputEditDateFormat:"%Y-%m-%d",inputEnabled:true,inputPosition:{align:"right",x:0,y:0},inputSpacing:5,selected:void 0,buttonPosition:{align:"left",x:0,y:0},inputStyle:{color:"#334eff",cursor:"pointer",fontSize:"0.8em"},labelStyle:{color:"#666666",fontSize:"0.8em"}};const RangeSelectorDefaults={lang:lang,rangeSelector:rangeSelector};const RangeSelector_RangeSelectorDefaults=RangeSelectorDefaults;const{defaultOptions:RangeSelectorComposition_defaultOptions}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const{composed:RangeSelectorComposition_composed}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const{addEvent:RangeSelectorComposition_addEvent,defined:RangeSelectorComposition_defined,extend:RangeSelectorComposition_extend,isNumber:RangeSelectorComposition_isNumber,merge:RangeSelectorComposition_merge,pick:RangeSelectorComposition_pick,pushUnique:RangeSelectorComposition_pushUnique}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const chartDestroyEvents=[];let RangeSelectorConstructor;function axisMinFromRange(){const rangeOptions=this.range,type=rangeOptions.type,max=this.max,time=this.chart.time,getTrueRange=function(base,count){const original=time.toParts(base),modified=original.slice();if(type==="year"){modified[0]+=count}else{modified[1]+=count}let d=time.makeTime.apply(time,modified);const numbers=time.toParts(d);if(type==="month"&&original[1]===numbers[1]&&Math.abs(count)===1){modified[0]=original[0];modified[1]=original[1];modified[2]=0}d=time.makeTime.apply(time,modified);return d-base};let min,range;if(RangeSelectorComposition_isNumber(rangeOptions)){min=max-rangeOptions;range=rangeOptions}else if(rangeOptions){min=max+getTrueRange(max,-(rangeOptions.count||1));if(this.chart){this.chart.setFixedRange(max-min)}}const dataMin=RangeSelectorComposition_pick(this.dataMin,Number.MIN_VALUE);if(!RangeSelectorComposition_isNumber(min)){min=dataMin}if(min<=dataMin){min=dataMin;if(typeof range==="undefined"){range=getTrueRange(min,rangeOptions.count)}this.newMax=Math.min(min+range,RangeSelectorComposition_pick(this.dataMax,Number.MAX_VALUE))}if(!RangeSelectorComposition_isNumber(max)){min=void 0}else if(!RangeSelectorComposition_isNumber(rangeOptions)&&rangeOptions&&rangeOptions._offsetMin){min+=rangeOptions._offsetMin}return min}function updateRangeSelectorButtons(){this.rangeSelector?.redrawElements()}function RangeSelectorComposition_compose(AxisClass,ChartClass,RangeSelectorClass){RangeSelectorConstructor=RangeSelectorClass;if(RangeSelectorComposition_pushUnique(RangeSelectorComposition_composed,"RangeSelector")){const chartProto=ChartClass.prototype;AxisClass.prototype.minFromRange=axisMinFromRange;RangeSelectorComposition_addEvent(ChartClass,"afterGetContainer",createRangeSelector);RangeSelectorComposition_addEvent(ChartClass,"beforeRender",RangeSelectorComposition_onChartBeforeRender);RangeSelectorComposition_addEvent(ChartClass,"destroy",onChartDestroy);RangeSelectorComposition_addEvent(ChartClass,"getMargins",onChartGetMargins);RangeSelectorComposition_addEvent(ChartClass,"redraw",redrawRangeSelector);RangeSelectorComposition_addEvent(ChartClass,"update",RangeSelectorComposition_onChartUpdate);RangeSelectorComposition_addEvent(ChartClass,"beforeRedraw",updateRangeSelectorButtons);chartProto.callbacks.push(redrawRangeSelector);RangeSelectorComposition_extend(RangeSelectorComposition_defaultOptions,{rangeSelector:RangeSelector_RangeSelectorDefaults.rangeSelector});RangeSelectorComposition_extend(RangeSelectorComposition_defaultOptions.lang,RangeSelector_RangeSelectorDefaults.lang)}}function createRangeSelector(){if(this.options.rangeSelector&&this.options.rangeSelector.enabled){this.rangeSelector=new RangeSelectorConstructor(this)}}function RangeSelectorComposition_onChartBeforeRender(){const chart=this,rangeSelector=chart.rangeSelector;if(rangeSelector){if(RangeSelectorComposition_isNumber(rangeSelector.deferredYTDClick)){rangeSelector.clickButton(rangeSelector.deferredYTDClick);delete rangeSelector.deferredYTDClick}const verticalAlign=rangeSelector.options.verticalAlign;if(!rangeSelector.options.floating){if(verticalAlign==="bottom"){this.extraBottomMargin=true}else if(verticalAlign==="top"){this.extraTopMargin=true}}}}function redrawRangeSelector(){const chart=this;const rangeSelector=this.rangeSelector;if(!rangeSelector){return}let alignTo;const extremes=chart.xAxis[0].getExtremes();const legend=chart.legend;const verticalAlign=rangeSelector&&rangeSelector.options.verticalAlign;if(RangeSelectorComposition_isNumber(extremes.min)){rangeSelector.render(extremes.min,extremes.max)}if(legend.display&&verticalAlign==="top"&&verticalAlign===legend.options.verticalAlign){alignTo=RangeSelectorComposition_merge(chart.spacingBox);if(legend.options.layout==="vertical"){alignTo.y=chart.plotTop}else{alignTo.y+=rangeSelector.getHeight()}legend.group.placed=false;legend.align(alignTo)}}function onChartDestroy(){for(let i=0,iEnd=chartDestroyEvents.length;i<iEnd;++i){const events=chartDestroyEvents[i];if(events[0]===this){events[1].forEach(unbind=>unbind());chartDestroyEvents.splice(i,1);return}}}function onChartGetMargins(){const rangeSelector=this.rangeSelector;if(rangeSelector?.options?.enabled){const rangeSelectorHeight=rangeSelector.getHeight();const verticalAlign=rangeSelector.options.verticalAlign;if(!rangeSelector.options.floating){if(verticalAlign==="bottom"){this.marginBottom+=rangeSelectorHeight}else if(verticalAlign!=="middle"){this.plotTop+=rangeSelectorHeight}}}}function RangeSelectorComposition_onChartUpdate(e){const chart=this,options=e.options,optionsRangeSelector=options.rangeSelector,extraBottomMarginWas=this.extraBottomMargin,extraTopMarginWas=this.extraTopMargin;let rangeSelector=chart.rangeSelector;if(optionsRangeSelector&&optionsRangeSelector.enabled&&!RangeSelectorComposition_defined(rangeSelector)&&this.options.rangeSelector){this.options.rangeSelector.enabled=true;this.rangeSelector=rangeSelector=new RangeSelectorConstructor(this)}this.extraBottomMargin=false;this.extraTopMargin=false;if(rangeSelector){const verticalAlign=optionsRangeSelector&&optionsRangeSelector.verticalAlign||rangeSelector.options&&rangeSelector.options.verticalAlign;if(!rangeSelector.options.floating){if(verticalAlign==="bottom"){this.extraBottomMargin=true}else if(verticalAlign!=="middle"){this.extraTopMargin=true}}if(this.extraBottomMargin!==extraBottomMarginWas||this.extraTopMargin!==extraTopMarginWas){this.isDirtyBox=true}}}const RangeSelectorComposition={compose:RangeSelectorComposition_compose};const RangeSelector_RangeSelectorComposition=RangeSelectorComposition;var highcharts_SVGElement_commonjs_highcharts_SVGElement_commonjs2_highcharts_SVGElement_root_Highcharts_SVGElement_=__webpack_require__(28);var highcharts_SVGElement_commonjs_highcharts_SVGElement_commonjs2_highcharts_SVGElement_root_Highcharts_SVGElement_default=__webpack_require__.n(highcharts_SVGElement_commonjs_highcharts_SVGElement_commonjs2_highcharts_SVGElement_root_Highcharts_SVGElement_);const{defaultOptions:RangeSelector_defaultOptions}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const{addEvent:RangeSelector_addEvent,createElement,css:RangeSelector_css,defined:RangeSelector_defined,destroyObjectProperties:RangeSelector_destroyObjectProperties,diffObjects,discardElement,extend:RangeSelector_extend,fireEvent:RangeSelector_fireEvent,isNumber:RangeSelector_isNumber,isString:RangeSelector_isString,merge:RangeSelector_merge,objectEach:RangeSelector_objectEach,pick:RangeSelector_pick,splat:RangeSelector_splat}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();function preferredInputType(format){const ms=RangeSelector_isString(format)?format.indexOf("%L")!==-1:format.fractionalSecondDigits;if(ms){return"text"}const date=RangeSelector_isString(format)?["a","A","d","e","w","b","B","m","o","y","Y"].some(char=>format.indexOf("%"+char)!==-1):format.dateStyle||format.day||format.month||format.year;const time=RangeSelector_isString(format)?["H","k","I","l","M","S"].some(char=>format.indexOf("%"+char)!==-1):format.timeStyle||format.hour||format.minute||format.second;if(date&&time){return"datetime-local"}if(date){return"date"}if(time){return"time"}return"text"}class RangeSelector{static compose(AxisClass,ChartClass){RangeSelector_RangeSelectorComposition.compose(AxisClass,ChartClass,RangeSelector)}constructor(chart){this.isDirty=false;this.buttonOptions=RangeSelector.prototype.defaultButtons;this.initialButtonGroupWidth=0;this.init(chart)}clickButton(i,redraw){const rangeSelector=this,chart=rangeSelector.chart,rangeOptions=rangeSelector.buttonOptions[i],baseAxis=chart.xAxis[0],unionExtremes=chart.scroller&&chart.scroller.getUnionExtremes()||baseAxis||{},type=rangeOptions.type,dataGrouping=rangeOptions.dataGrouping;let dataMin=unionExtremes.dataMin,dataMax=unionExtremes.dataMax,newMin,newMax=RangeSelector_isNumber(baseAxis?.max)?Math.round(Math.min(baseAxis.max,dataMax??baseAxis.max)):void 0,baseXAxisOptions,range=rangeOptions._range,rangeMin,ctx,ytdExtremes,addOffsetMin=true;if(dataMin===null||dataMax===null){return}rangeSelector.setSelected(i);if(dataGrouping){this.forcedDataGrouping=true;highcharts_Axis_commonjs_highcharts_Axis_commonjs2_highcharts_Axis_root_Highcharts_Axis_default().prototype.setDataGrouping.call(baseAxis||{chart:this.chart},dataGrouping,false);this.frozenStates=rangeOptions.preserveDataGrouping}if(type==="month"||type==="year"){if(!baseAxis){range=rangeOptions}else{ctx={range:rangeOptions,max:newMax,chart:chart,dataMin:dataMin,dataMax:dataMax};newMin=baseAxis.minFromRange.call(ctx);if(RangeSelector_isNumber(ctx.newMax)){newMax=ctx.newMax}addOffsetMin=false}}else if(range){if(RangeSelector_isNumber(newMax)){newMin=Math.max(newMax-range,dataMin);newMax=Math.min(newMin+range,dataMax);addOffsetMin=false}}else if(type==="ytd"){if(baseAxis){if(baseAxis.hasData()&&(!RangeSelector_isNumber(dataMax)||!RangeSelector_isNumber(dataMin))){dataMin=Number.MAX_VALUE;dataMax=-Number.MAX_VALUE;chart.series.forEach(series=>{const xData=series.getColumn("x");if(xData.length){dataMin=Math.min(xData[0],dataMin);dataMax=Math.max(xData[xData.length-1],dataMax)}});redraw=false}if(RangeSelector_isNumber(dataMax)&&RangeSelector_isNumber(dataMin)){ytdExtremes=rangeSelector.getYTDExtremes(dataMax,dataMin);newMin=rangeMin=ytdExtremes.min;newMax=ytdExtremes.max}}else{rangeSelector.deferredYTDClick=i;return}}else if(type==="all"&&baseAxis){if(chart.navigator&&chart.navigator.baseSeries[0]){chart.navigator.baseSeries[0].xAxis.options.range=void 0}newMin=dataMin;newMax=dataMax}if(addOffsetMin&&rangeOptions._offsetMin&&RangeSelector_defined(newMin)){newMin+=rangeOptions._offsetMin}if(rangeOptions._offsetMax&&RangeSelector_defined(newMax)){newMax+=rangeOptions._offsetMax}if(this.dropdown){this.dropdown.selectedIndex=i+1}if(!baseAxis){baseXAxisOptions=RangeSelector_splat(chart.options.xAxis||{})[0];const axisRangeUpdateEvent=RangeSelector_addEvent(chart,"afterCreateAxes",function(){const xAxis=chart.xAxis[0];xAxis.range=xAxis.options.range=range;xAxis.min=xAxis.options.min=rangeMin});RangeSelector_addEvent(chart,"load",function resetMinAndRange(){const xAxis=chart.xAxis[0];chart.setFixedRange(rangeOptions._range);xAxis.options.range=baseXAxisOptions.range;xAxis.options.min=baseXAxisOptions.min;axisRangeUpdateEvent()})}else if(RangeSelector_isNumber(newMin)&&RangeSelector_isNumber(newMax)){baseAxis.setExtremes(newMin,newMax,RangeSelector_pick(redraw,true),void 0,{trigger:"rangeSelectorButton",rangeSelectorButton:rangeOptions});chart.setFixedRange(rangeOptions._range)}RangeSelector_fireEvent(this,"afterBtnClick")}setSelected(selected){this.selected=this.options.selected=selected}init(chart){const rangeSelector=this,options=chart.options.rangeSelector,buttonOptions=options.buttons,selectedOption=options.selected,blurInputs=function(){const minInput=rangeSelector.minInput,maxInput=rangeSelector.maxInput;if(minInput&&!!minInput.blur){RangeSelector_fireEvent(minInput,"blur")}if(maxInput&&!!maxInput.blur){RangeSelector_fireEvent(maxInput,"blur")}};rangeSelector.chart=chart;rangeSelector.options=options;rangeSelector.buttons=[];rangeSelector.buttonOptions=buttonOptions;this.eventsToUnbind=[];this.eventsToUnbind.push(RangeSelector_addEvent(chart.container,"mousedown",blurInputs));this.eventsToUnbind.push(RangeSelector_addEvent(chart,"resize",blurInputs));buttonOptions.forEach(rangeSelector.computeButtonRange);if(typeof selectedOption!=="undefined"&&buttonOptions[selectedOption]){this.clickButton(selectedOption,false)}this.eventsToUnbind.push(RangeSelector_addEvent(chart,"load",function(){if(chart.xAxis&&chart.xAxis[0]){RangeSelector_addEvent(chart.xAxis[0],"setExtremes",function(e){if(RangeSelector_isNumber(this.max)&&RangeSelector_isNumber(this.min)&&this.max-this.min!==chart.fixedRange&&e.trigger!=="rangeSelectorButton"&&e.trigger!=="updatedData"&&rangeSelector.forcedDataGrouping&&!rangeSelector.frozenStates){this.setDataGrouping(false,false)}})}}));this.createElements()}updateButtonStates(){const rangeSelector=this,chart=this.chart,dropdown=this.dropdown,dropdownLabel=this.dropdownLabel,baseAxis=chart.xAxis[0],actualRange=Math.round(baseAxis.max-baseAxis.min),hasNoData=!baseAxis.hasVisibleSeries,day=24*36e5,unionExtremes=chart.scroller&&chart.scroller.getUnionExtremes()||baseAxis,dataMin=unionExtremes.dataMin,dataMax=unionExtremes.dataMax,ytdExtremes=rangeSelector.getYTDExtremes(dataMax,dataMin),ytdMin=ytdExtremes.min,ytdMax=ytdExtremes.max,selected=rangeSelector.selected,allButtonsEnabled=rangeSelector.options.allButtonsEnabled,buttonStates=new Array(rangeSelector.buttonOptions.length).fill(0),selectedExists=RangeSelector_isNumber(selected),buttons=rangeSelector.buttons;let isSelectedTooGreat=false,selectedIndex=null;rangeSelector.buttonOptions.forEach((rangeOptions,i)=>{const range=rangeOptions._range,type=rangeOptions.type,count=rangeOptions.count||1,offsetRange=rangeOptions._offsetMax-rangeOptions._offsetMin,isSelected=i===selected,isTooGreatRange=range>dataMax-dataMin,isTooSmallRange=range<baseAxis.minRange;let isYTDButNotSelected=false,isSameRange=range===actualRange;if(isSelected&&isTooGreatRange){isSelectedTooGreat=true}if(baseAxis.isOrdinal&&baseAxis.ordinal?.positions&&range&&actualRange<range){const positions=baseAxis.ordinal.positions,prevOrdinalPosition=Axis_OrdinalAxis.Additions.findIndexOf(positions,baseAxis.min,true),nextOrdinalPosition=Math.min(Axis_OrdinalAxis.Additions.findIndexOf(positions,baseAxis.max,true)+1,positions.length-1);if(positions[nextOrdinalPosition]-positions[prevOrdinalPosition]>range){isSameRange=true}}else if((type==="month"||type==="year")&&actualRange+36e5>={month:28,year:365}[type]*day*count-offsetRange&&actualRange-36e5<={month:31,year:366}[type]*day*count+offsetRange){isSameRange=true}else if(type==="ytd"){isSameRange=ytdMax-ytdMin+offsetRange===actualRange;isYTDButNotSelected=!isSelected}else if(type==="all"){isSameRange=baseAxis.max-baseAxis.min>=dataMax-dataMin}const disable=!allButtonsEnabled&&!(isSelectedTooGreat&&type==="all")&&(isTooGreatRange||isTooSmallRange||hasNoData);const select=isSelectedTooGreat&&type==="all"||(isYTDButNotSelected?false:isSameRange)||isSelected&&rangeSelector.frozenStates;if(disable){buttonStates[i]=3}else if(select){if(!selectedExists||i===selected){selectedIndex=i}}});if(selectedIndex!==null){buttonStates[selectedIndex]=2;rangeSelector.setSelected(selectedIndex)}else{rangeSelector.setSelected();if(dropdownLabel){dropdownLabel.setState(0);dropdownLabel.attr({text:(RangeSelector_defaultOptions.lang.rangeSelectorZoom||"")+" ▾"})}}for(let i=0;i<buttonStates.length;i++){const state=buttonStates[i];const button=buttons[i];if(button.state!==state){button.setState(state);if(dropdown){dropdown.options[i+1].disabled=state===3;if(state===2){if(dropdownLabel){dropdownLabel.setState(2);dropdownLabel.attr({text:rangeSelector.buttonOptions[i].text+" ▾"})}dropdown.selectedIndex=i+1}const bbox=dropdownLabel.getBBox();RangeSelector_css(dropdown,{width:`${bbox.width}px`,height:`${bbox.height}px`})}}}}computeButtonRange(rangeOptions){const type=rangeOptions.type,count=rangeOptions.count||1,fixedTimes={millisecond:1,second:1e3,minute:60*1e3,hour:3600*1e3,day:24*3600*1e3,week:7*24*3600*1e3};if(fixedTimes[type]){rangeOptions._range=fixedTimes[type]*count}else if(type==="month"||type==="year"){rangeOptions._range={month:30,year:365}[type]*24*36e5*count}rangeOptions._offsetMin=RangeSelector_pick(rangeOptions.offsetMin,0);rangeOptions._offsetMax=RangeSelector_pick(rangeOptions.offsetMax,0);rangeOptions._range+=rangeOptions._offsetMax-rangeOptions._offsetMin}getInputValue(name){const input=name==="min"?this.minInput:this.maxInput;const options=this.chart.options.rangeSelector;const time=this.chart.time;if(input){return(input.type==="text"&&options.inputDateParser||this.defaultInputDateParser)(input.value,time.timezone==="UTC",time)}return 0}setInputValue(name,inputTime){const options=this.options,time=this.chart.time,input=name==="min"?this.minInput:this.maxInput,dateBox=name==="min"?this.minDateBox:this.maxDateBox;if(input){input.setAttribute("type",preferredInputType(options.inputDateFormat||"%e %b %Y"));const hcTimeAttr=input.getAttribute("data-hc-time");let updatedTime=RangeSelector_defined(hcTimeAttr)?Number(hcTimeAttr):void 0;if(RangeSelector_defined(inputTime)){const previousTime=updatedTime;if(RangeSelector_defined(previousTime)){input.setAttribute("data-hc-time-previous",previousTime)}input.setAttribute("data-hc-time",inputTime);updatedTime=inputTime}input.value=time.dateFormat(this.inputTypeFormats[input.type]||options.inputEditDateFormat,updatedTime);if(dateBox){dateBox.attr({text:time.dateFormat(options.inputDateFormat,updatedTime)})}}}setInputExtremes(name,min,max){const input=name==="min"?this.minInput:this.maxInput;if(input){const format=this.inputTypeFormats[input.type];const time=this.chart.time;if(format){const newMin=time.dateFormat(format,min);if(input.min!==newMin){input.min=newMin}const newMax=time.dateFormat(format,max);if(input.max!==newMax){input.max=newMax}}}}showInput(name){const dateBox=name==="min"?this.minDateBox:this.maxDateBox,input=name==="min"?this.minInput:this.maxInput;if(input&&dateBox&&this.inputGroup){const isTextInput=input.type==="text",{translateX=0,translateY=0}=this.inputGroup,{x=0,width=0,height=0}=dateBox,{inputBoxWidth}=this.options;RangeSelector_css(input,{width:isTextInput?width+(inputBoxWidth?-2:20)+"px":"auto",height:height-2+"px",border:"2px solid silver"});if(isTextInput&&inputBoxWidth){RangeSelector_css(input,{left:translateX+x+"px",top:translateY+"px"})}else{RangeSelector_css(input,{left:Math.min(Math.round(x+translateX-(input.offsetWidth-width)/2),this.chart.chartWidth-input.offsetWidth)+"px",top:translateY-(input.offsetHeight-height)/2+"px"})}}}hideInput(name){const input=name==="min"?this.minInput:this.maxInput;if(input){RangeSelector_css(input,{top:"-9999em",border:0,width:"1px",height:"1px"})}}defaultInputDateParser(inputDate,useUTC,time){return time?.parse(inputDate)||0}drawInput(name){const{chart,div,inputGroup}=this;const rangeSelector=this,chartStyle=chart.renderer.style||{},renderer=chart.renderer,options=chart.options.rangeSelector,lang=RangeSelector_defaultOptions.lang,isMin=name==="min";function updateExtremes(name){const{maxInput,minInput}=rangeSelector,chartAxis=chart.xAxis[0],unionExtremes=chart.scroller?.getUnionExtremes()||chartAxis,dataMin=unionExtremes.dataMin,dataMax=unionExtremes.dataMax,currentExtreme=chart.xAxis[0].getExtremes()[name];let value=rangeSelector.getInputValue(name);if(RangeSelector_isNumber(value)&&value!==currentExtreme){if(isMin&&maxInput&&RangeSelector_isNumber(dataMin)){if(value>Number(maxInput.getAttribute("data-hc-time"))){value=void 0}else if(value<dataMin){value=dataMin}}else if(minInput&&RangeSelector_isNumber(dataMax)){if(value<Number(minInput.getAttribute("data-hc-time"))){value=void 0}else if(value>dataMax){value=dataMax}}if(typeof value!=="undefined"){chartAxis.setExtremes(isMin?value:chartAxis.min,isMin?chartAxis.max:value,void 0,void 0,{trigger:"rangeSelectorInput"})}}}const text=lang[isMin?"rangeSelectorFrom":"rangeSelectorTo"]||"";const label=renderer.label(text,0).addClass("highcharts-range-label").attr({padding:text?2:0,height:text?options.inputBoxHeight:0}).add(inputGroup);const dateBox=renderer.label("",0).addClass("highcharts-range-input").attr({padding:2,width:options.inputBoxWidth,height:options.inputBoxHeight,"text-align":"center"}).on("click",function(){rangeSelector.showInput(name);rangeSelector[name+"Input"].focus()});if(!chart.styledMode){dateBox.attr({stroke:options.inputBoxBorderColor,"stroke-width":1})}dateBox.add(inputGroup);const input=createElement("input",{name:name,className:"highcharts-range-selector"},void 0,div);input.setAttribute("type",preferredInputType(options.inputDateFormat||"%e %b %Y"));if(!chart.styledMode){label.css(RangeSelector_merge(chartStyle,options.labelStyle));dateBox.css(RangeSelector_merge({color:"#333333"},chartStyle,options.inputStyle));RangeSelector_css(input,RangeSelector_extend({position:"absolute",border:0,boxShadow:"0 0 15px rgba(0,0,0,0.3)",width:"1px",height:"1px",padding:0,textAlign:"center",fontSize:chartStyle.fontSize,fontFamily:chartStyle.fontFamily,top:"-9999em"},options.inputStyle))}input.onfocus=()=>{rangeSelector.showInput(name)};input.onblur=()=>{if(input===highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().doc.activeElement){updateExtremes(name)}rangeSelector.hideInput(name);rangeSelector.setInputValue(name);input.blur()};let keyDown=false;input.onchange=()=>{if(!keyDown){updateExtremes(name);rangeSelector.hideInput(name);input.blur()}};input.onkeypress=event=>{if(event.keyCode===13){updateExtremes(name)}};input.onkeydown=event=>{keyDown=true;if(event.key==="ArrowUp"||event.key==="ArrowDown"||event.key==="Tab"){updateExtremes(name)}};input.onkeyup=()=>{keyDown=false};return{dateBox:dateBox,input:input,label:label}}getPosition(){const chart=this.chart,options=chart.options.rangeSelector,top=options.verticalAlign==="top"?chart.plotTop-chart.axisOffset[0]:0;return{buttonTop:top+options.buttonPosition.y,inputTop:top+options.inputPosition.y-10}}getYTDExtremes(dataMax,dataMin){const time=this.chart.time,year=time.toParts(dataMax)[0],startOfYear=time.makeTime(year,0);return{max:dataMax,min:Math.max(dataMin,startOfYear)}}createElements(){const chart=this.chart,renderer=chart.renderer,container=chart.container,chartOptions=chart.options,options=chartOptions.rangeSelector,inputEnabled=options.inputEnabled,inputsZIndex=RangeSelector_pick(chartOptions.chart.style?.zIndex,0)+1;if(options.enabled===false){return}this.group=renderer.g("range-selector-group").attr({zIndex:7}).add();this.div=createElement("div",void 0,{position:"relative",height:0,zIndex:inputsZIndex});if(this.buttonOptions.length){this.renderButtons()}if(container.parentNode){container.parentNode.insertBefore(this.div,container)}if(inputEnabled){this.createInputs()}}createInputs(){this.inputGroup=this.chart.renderer.g("input-group").add(this.group);const minElems=this.drawInput("min");this.minDateBox=minElems.dateBox;this.minLabel=minElems.label;this.minInput=minElems.input;const maxElems=this.drawInput("max");this.maxDateBox=maxElems.dateBox;this.maxLabel=maxElems.label;this.maxInput=maxElems.input}render(min,max){if(this.options.enabled===false){return}const chart=this.chart,chartOptions=chart.options,options=chartOptions.rangeSelector,inputEnabled=options.inputEnabled;if(inputEnabled){if(!this.inputGroup){this.createInputs()}this.setInputValue("min",min);this.setInputValue("max",max);if(!this.chart.styledMode){this.maxLabel?.css(options.labelStyle);this.minLabel?.css(options.labelStyle)}const unionExtremes=chart.scroller&&chart.scroller.getUnionExtremes()||chart.xAxis[0]||{};if(RangeSelector_defined(unionExtremes.dataMin)&&RangeSelector_defined(unionExtremes.dataMax)){const minRange=chart.xAxis[0].minRange||0;this.setInputExtremes("min",unionExtremes.dataMin,Math.min(unionExtremes.dataMax,this.getInputValue("max"))-minRange);this.setInputExtremes("max",Math.max(unionExtremes.dataMin,this.getInputValue("min"))+minRange,unionExtremes.dataMax)}if(this.inputGroup){let x=0;[this.minLabel,this.minDateBox,this.maxLabel,this.maxDateBox].forEach(label=>{if(label){const{width}=label.getBBox();if(width){label.attr({x:x});x+=width+options.inputSpacing}}})}}else{if(this.inputGroup){this.inputGroup.destroy();delete this.inputGroup}}if(!this.chart.styledMode){if(this.zoomText){this.zoomText.css(options.labelStyle)}}this.alignElements();this.updateButtonStates()}renderButtons(){var _a;const{chart,options}=this;const lang=RangeSelector_defaultOptions.lang;const renderer=chart.renderer;const buttonTheme=RangeSelector_merge(options.buttonTheme);const states=buttonTheme&&buttonTheme.states;delete buttonTheme.width;delete buttonTheme.states;this.buttonGroup=renderer.g("range-selector-buttons").add(this.group);const dropdown=this.dropdown=createElement("select",void 0,{position:"absolute",padding:0,border:0,cursor:"pointer",opacity:1e-4},this.div);const userButtonTheme=chart.userOptions.rangeSelector?.buttonTheme;this.dropdownLabel=renderer.button("",0,0,()=>{},RangeSelector_merge(buttonTheme,{"stroke-width":RangeSelector_pick(buttonTheme["stroke-width"],0),width:"auto",paddingLeft:RangeSelector_pick(options.buttonTheme.paddingLeft,userButtonTheme?.padding,8),paddingRight:RangeSelector_pick(options.buttonTheme.paddingRight,userButtonTheme?.padding,8)}),states&&states.hover,states&&states.select,states&&states.disabled).hide().add(this.group);RangeSelector_addEvent(dropdown,"touchstart",()=>{dropdown.style.fontSize="16px"});const mouseOver=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().isMS?"mouseover":"mouseenter",mouseOut=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().isMS?"mouseout":"mouseleave";RangeSelector_addEvent(dropdown,mouseOver,()=>{RangeSelector_fireEvent(this.dropdownLabel.element,mouseOver)});RangeSelector_addEvent(dropdown,mouseOut,()=>{RangeSelector_fireEvent(this.dropdownLabel.element,mouseOut)});RangeSelector_addEvent(dropdown,"change",()=>{const button=this.buttons[dropdown.selectedIndex-1];RangeSelector_fireEvent(button.element,"click")});this.zoomText=renderer.label(lang.rangeSelectorZoom||"",0).attr({padding:options.buttonTheme.padding,height:options.buttonTheme.height,paddingLeft:0,paddingRight:0}).add(this.buttonGroup);if(!this.chart.styledMode){this.zoomText.css(options.labelStyle);(_a=options.buttonTheme)["stroke-width"]??(_a["stroke-width"]=0)}createElement("option",{textContent:this.zoomText.textStr,disabled:true},void 0,dropdown);this.createButtons()}createButtons(){const{options}=this;const buttonTheme=RangeSelector_merge(options.buttonTheme);const states=buttonTheme&&buttonTheme.states;const width=buttonTheme.width||28;delete buttonTheme.width;delete buttonTheme.states;this.buttonOptions.forEach((rangeOptions,i)=>{this.createButton(rangeOptions,i,width,states)})}createButton(rangeOptions,i,width,states){const{dropdown,buttons,chart,options}=this;const renderer=chart.renderer;const buttonTheme=RangeSelector_merge(options.buttonTheme);dropdown?.add(createElement("option",{textContent:rangeOptions.title||rangeOptions.text}),i+2);buttons[i]=renderer.button(rangeOptions.text,0,0,e=>{const buttonEvents=rangeOptions.events&&rangeOptions.events.click;let callDefaultEvent;if(buttonEvents){callDefaultEvent=buttonEvents.call(rangeOptions,e)}if(callDefaultEvent!==false){this.clickButton(i)}this.isActive=true},buttonTheme,states&&states.hover,states&&states.select,states&&states.disabled).attr({"text-align":"center",width:width}).add(this.buttonGroup);if(rangeOptions.title){buttons[i].attr("title",rangeOptions.title)}}alignElements(){const{buttonGroup,buttons,chart,group,inputGroup,options,zoomText}=this;const chartOptions=chart.options;const navButtonOptions=chartOptions.exporting&&chartOptions.exporting.enabled!==false&&chartOptions.navigation&&chartOptions.navigation.buttonOptions;const{buttonPosition,inputPosition,verticalAlign}=options;const getXOffsetForExportButton=(group,position)=>{if(navButtonOptions&&this.titleCollision(chart)&&verticalAlign==="top"&&position.align==="right"&&position.y-group.getBBox().height-12<(navButtonOptions.y||0)+(navButtonOptions.height||0)+chart.spacing[0]){return-40}return 0};let plotLeft=chart.plotLeft;if(group&&buttonPosition&&inputPosition){let translateX=buttonPosition.x-chart.spacing[3];if(buttonGroup){this.positionButtons();if(!this.initialButtonGroupWidth){let width=0;if(zoomText){width+=zoomText.getBBox().width+5}buttons.forEach((button,i)=>{width+=button.width||0;if(i!==buttons.length-1){width+=options.buttonSpacing}});this.initialButtonGroupWidth=width}plotLeft-=chart.spacing[3];const xOffsetForExportButton=getXOffsetForExportButton(buttonGroup,buttonPosition);this.alignButtonGroup(xOffsetForExportButton);if(this.buttonGroup?.translateY){this.dropdownLabel.attr({y:this.buttonGroup.translateY})}group.placed=buttonGroup.placed=chart.hasLoaded}let xOffsetForExportButton=0;if(options.inputEnabled&&inputGroup){xOffsetForExportButton=getXOffsetForExportButton(inputGroup,inputPosition);if(inputPosition.align==="left"){translateX=plotLeft}else if(inputPosition.align==="right"){translateX=-Math.max(chart.axisOffset[1],-xOffsetForExportButton)}inputGroup.align({y:inputPosition.y,width:inputGroup.getBBox().width,align:inputPosition.align,x:inputPosition.x+translateX-2},true,chart.spacingBox);inputGroup.placed=chart.hasLoaded}this.handleCollision(xOffsetForExportButton);group.align({verticalAlign:verticalAlign},true,chart.spacingBox);const alignTranslateY=group.alignAttr.translateY;let groupHeight=group.getBBox().height+20;let translateY=0;if(verticalAlign==="bottom"){const legendOptions=chart.legend&&chart.legend.options;const legendHeight=legendOptions&&legendOptions.verticalAlign==="bottom"&&legendOptions.enabled&&!legendOptions.floating?chart.legend.legendHeight+RangeSelector_pick(legendOptions.margin,10):0;groupHeight=groupHeight+legendHeight-20;translateY=alignTranslateY-groupHeight-(options.floating?0:options.y)-(chart.titleOffset?chart.titleOffset[2]:0)-10}if(verticalAlign==="top"){if(options.floating){translateY=0}if(chart.titleOffset&&chart.titleOffset[0]){translateY=chart.titleOffset[0]}translateY+=chart.margin[0]-chart.spacing[0]||0}else if(verticalAlign==="middle"){if(inputPosition.y===buttonPosition.y){translateY=alignTranslateY}else if(inputPosition.y||buttonPosition.y){if(inputPosition.y<0||buttonPosition.y<0){translateY-=Math.min(inputPosition.y,buttonPosition.y)}else{translateY=alignTranslateY-groupHeight}}}group.translate(options.x,options.y+Math.floor(translateY));const{minInput,maxInput,dropdown}=this;if(options.inputEnabled&&minInput&&maxInput){minInput.style.marginTop=group.translateY+"px";maxInput.style.marginTop=group.translateY+"px"}if(dropdown){dropdown.style.marginTop=group.translateY+"px"}}}redrawElements(){const chart=this.chart,{inputBoxHeight,inputBoxBorderColor}=this.options;this.maxDateBox?.attr({height:inputBoxHeight});this.minDateBox?.attr({height:inputBoxHeight});if(!chart.styledMode){this.maxDateBox?.attr({stroke:inputBoxBorderColor});this.minDateBox?.attr({stroke:inputBoxBorderColor})}if(this.isDirty){this.isDirty=false;this.isCollapsed=void 0;const newButtonsOptions=this.options.buttons??[];const btnLength=Math.min(newButtonsOptions.length,this.buttonOptions.length);const{dropdown,options}=this;const buttonTheme=RangeSelector_merge(options.buttonTheme);const states=buttonTheme&&buttonTheme.states;const width=buttonTheme.width||28;if(newButtonsOptions.length<this.buttonOptions.length){for(let i=this.buttonOptions.length-1;i>=newButtonsOptions.length;i--){const btn=this.buttons.pop();btn?.destroy();this.dropdown?.options.remove(i+1)}}for(let i=btnLength-1;i>=0;i--){const diff=diffObjects(newButtonsOptions[i],this.buttonOptions[i]);if(Object.keys(diff).length!==0){const rangeOptions=newButtonsOptions[i];this.buttons[i].destroy();dropdown?.options.remove(i+1);this.createButton(rangeOptions,i,width,states);this.computeButtonRange(rangeOptions)}}if(newButtonsOptions.length>this.buttonOptions.length){for(let i=this.buttonOptions.length;i<newButtonsOptions.length;i++){this.createButton(newButtonsOptions[i],i,width,states);this.computeButtonRange(newButtonsOptions[i])}}this.buttonOptions=this.options.buttons??[];if(RangeSelector_defined(this.options.selected)&&this.buttons.length){this.clickButton(this.options.selected,false)}}}alignButtonGroup(xOffsetForExportButton,width){const{chart,options,buttonGroup}=this;const{buttonPosition}=options;const plotLeft=chart.plotLeft-chart.spacing[3];let translateX=buttonPosition.x-chart.spacing[3];if(buttonPosition.align==="right"){translateX+=xOffsetForExportButton-plotLeft}else if(buttonPosition.align==="center"){translateX-=plotLeft/2}if(buttonGroup){buttonGroup.align({y:buttonPosition.y,width:RangeSelector_pick(width,this.initialButtonGroupWidth),align:buttonPosition.align,x:translateX},true,chart.spacingBox)}}positionButtons(){const{buttons,chart,options,zoomText}=this;const verb=chart.hasLoaded?"animate":"attr";const{buttonPosition}=options;const plotLeft=chart.plotLeft;let buttonLeft=plotLeft;if(zoomText&&zoomText.visibility!=="hidden"){zoomText[verb]({x:RangeSelector_pick(plotLeft+buttonPosition.x,plotLeft)});buttonLeft+=buttonPosition.x+zoomText.getBBox().width+5}for(let i=0,iEnd=this.buttonOptions.length;i<iEnd;++i){if(buttons[i].visibility!=="hidden"){buttons[i][verb]({x:buttonLeft});buttonLeft+=(buttons[i].width||0)+options.buttonSpacing}else{buttons[i][verb]({x:plotLeft})}}}handleCollision(xOffsetForExportButton){const{chart,buttonGroup,inputGroup}=this;const{buttonPosition,dropdown,inputPosition}=this.options;const maxButtonWidth=()=>{let buttonWidth=0;this.buttons.forEach(button=>{const bBox=button.getBBox();if(bBox.width>buttonWidth){buttonWidth=bBox.width}});return buttonWidth};const groupsOverlap=buttonGroupWidth=>{if(inputGroup?.alignOptions&&buttonGroup){const inputGroupX=inputGroup.alignAttr.translateX+inputGroup.alignOptions.x-xOffsetForExportButton+inputGroup.getBBox().x+2;const inputGroupWidth=inputGroup.alignOptions.width||0;const buttonGroupX=buttonGroup.alignAttr.translateX+buttonGroup.getBBox().x;return buttonGroupX+buttonGroupWidth>inputGroupX&&inputGroupX+inputGroupWidth>buttonGroupX&&buttonPosition.y<inputPosition.y+inputGroup.getBBox().height}return false};const moveInputsDown=()=>{if(inputGroup&&buttonGroup){inputGroup.attr({translateX:inputGroup.alignAttr.translateX+(chart.axisOffset[1]>=-xOffsetForExportButton?0:-xOffsetForExportButton),translateY:inputGroup.alignAttr.translateY+buttonGroup.getBBox().height+10})}};if(buttonGroup){if(dropdown==="always"){this.collapseButtons();if(groupsOverlap(maxButtonWidth())){moveInputsDown()}return}if(dropdown==="never"){this.expandButtons()}}if(inputGroup&&buttonGroup){if(inputPosition.align===buttonPosition.align||groupsOverlap(this.initialButtonGroupWidth+20)){if(dropdown==="responsive"){this.collapseButtons();if(groupsOverlap(maxButtonWidth())){moveInputsDown()}}else{moveInputsDown()}}else if(dropdown==="responsive"){this.expandButtons()}}else if(buttonGroup&&dropdown==="responsive"){if(this.initialButtonGroupWidth>chart.plotWidth){this.collapseButtons()}else{this.expandButtons()}}}collapseButtons(){const{buttons,zoomText}=this;if(this.isCollapsed===true){return}this.isCollapsed=true;zoomText.hide();buttons.forEach(button=>void button.hide());this.showDropdown()}expandButtons(){const{buttons,zoomText}=this;if(this.isCollapsed===false){return}this.isCollapsed=false;this.hideDropdown();zoomText.show();buttons.forEach(button=>void button.show());this.positionButtons()}showDropdown(){const{buttonGroup,chart,dropdownLabel,dropdown}=this;if(buttonGroup&&dropdown){const{translateX=0,translateY=0}=buttonGroup,left=chart.plotLeft+translateX,top=translateY;dropdownLabel.attr({x:left,y:top}).show();RangeSelector_css(dropdown,{left:left+"px",top:top+"px",visibility:"inherit"});this.hasVisibleDropdown=true}}hideDropdown(){const{dropdown}=this;if(dropdown){this.dropdownLabel.hide();RangeSelector_css(dropdown,{visibility:"hidden",width:"1px",height:"1px"});this.hasVisibleDropdown=false}}getHeight(){const rangeSelector=this,options=rangeSelector.options,rangeSelectorGroup=rangeSelector.group,inputPosition=options.inputPosition,buttonPosition=options.buttonPosition,yPosition=options.y,buttonPositionY=buttonPosition.y,inputPositionY=inputPosition.y;let rangeSelectorHeight=0;if(options.height){return options.height}this.alignElements();rangeSelectorHeight=rangeSelectorGroup?rangeSelectorGroup.getBBox(true).height+13+yPosition:0;const minPosition=Math.min(inputPositionY,buttonPositionY);if(inputPositionY<0&&buttonPositionY<0||inputPositionY>0&&buttonPositionY>0){rangeSelectorHeight+=Math.abs(minPosition)}return rangeSelectorHeight}titleCollision(chart){return!(chart.options.title.text||chart.options.subtitle.text)}update(options,redraw=true){const chart=this.chart;RangeSelector_merge(true,this.options,options);if(this.options.selected&&this.options.selected>=this.options.buttons.length){this.options.selected=void 0;chart.options.rangeSelector.selected=void 0}if(RangeSelector_defined(options.enabled)){this.destroy();return this.init(chart)}this.isDirty=!!options.buttons;if(redraw){this.render()}}destroy(){const rSelector=this,minInput=rSelector.minInput,maxInput=rSelector.maxInput;if(rSelector.eventsToUnbind){rSelector.eventsToUnbind.forEach(unbind=>unbind());rSelector.eventsToUnbind=void 0}RangeSelector_destroyObjectProperties(rSelector.buttons);if(minInput){minInput.onfocus=minInput.onblur=minInput.onchange=null}if(maxInput){maxInput.onfocus=maxInput.onblur=maxInput.onchange=null}RangeSelector_objectEach(rSelector,function(val,key){if(val&&key!=="chart"){if(val instanceof highcharts_SVGElement_commonjs_highcharts_SVGElement_commonjs2_highcharts_SVGElement_root_Highcharts_SVGElement_default()){val.destroy()}else if(val instanceof window.HTMLElement){discardElement(val)}delete rSelector[key]}if(val!==RangeSelector.prototype[key]){rSelector[key]=null}},this);this.buttons=[]}}RangeSelector_extend(RangeSelector.prototype,{inputTypeFormats:{"datetime-local":"%Y-%m-%dT%H:%M:%S",date:"%Y-%m-%d",time:"%H:%M:%S"}});const RangeSelector_RangeSelector=RangeSelector;"";var highcharts_Chart_commonjs_highcharts_Chart_commonjs2_highcharts_Chart_root_Highcharts_Chart_=__webpack_require__(960);var highcharts_Chart_commonjs_highcharts_Chart_commonjs2_highcharts_Chart_root_Highcharts_Chart_default=__webpack_require__.n(highcharts_Chart_commonjs_highcharts_Chart_commonjs2_highcharts_Chart_root_Highcharts_Chart_);var highcharts_Templating_commonjs_highcharts_Templating_commonjs2_highcharts_Templating_root_Highcharts_Templating_=__webpack_require__(984);var highcharts_Templating_commonjs_highcharts_Templating_commonjs2_highcharts_Templating_root_Highcharts_Templating_default=__webpack_require__.n(highcharts_Templating_commonjs_highcharts_Templating_commonjs2_highcharts_Templating_root_Highcharts_Templating_);const{format}=highcharts_Templating_commonjs_highcharts_Templating_commonjs2_highcharts_Templating_root_Highcharts_Templating_default();const{getOptions}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const{setFixedRange:StockChart_setFixedRange}=Utilities_StockUtilities;const{addEvent:StockChart_addEvent,clamp:StockChart_clamp,crisp:StockChart_crisp,defined:StockChart_defined,extend:StockChart_extend,find:StockChart_find,isNumber:StockChart_isNumber,isString:StockChart_isString,merge:StockChart_merge,pick:StockChart_pick,splat:StockChart_splat}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();function getDefaultAxisOptions(coll,options,defaultOptions){if(coll==="xAxis"){return{minPadding:0,maxPadding:0,overscroll:0,ordinal:true}}if(coll==="yAxis"){return{labels:{y:-2},opposite:defaultOptions.opposite??options.opposite??true,showLastLabel:!!(options.categories||options.type==="category"),title:{text:defaultOptions.title?.text!=="Values"?defaultOptions.title?.text:null}}}return{}}function getForcedAxisOptions(type,chartOptions){if(type==="xAxis"){const navigatorEnabled=StockChart_pick(chartOptions.navigator&&chartOptions.navigator.enabled,Navigator_NavigatorDefaults.enabled,true);const axisOptions={type:"datetime",categories:void 0};if(navigatorEnabled){axisOptions.startOnTick=false;axisOptions.endOnTick=false}return axisOptions}return{}}class StockChart extends highcharts_Chart_commonjs_highcharts_Chart_commonjs2_highcharts_Chart_root_Highcharts_Chart_default(){init(userOptions,callback){const defaultOptions=getOptions(),xAxisOptions=userOptions.xAxis,yAxisOptions=userOptions.yAxis,navigatorEnabled=StockChart_pick(userOptions.navigator&&userOptions.navigator.enabled,Navigator_NavigatorDefaults.enabled,true);userOptions.xAxis=userOptions.yAxis=void 0;const options=StockChart_merge({chart:{panning:{enabled:true,type:"x"},zooming:{pinchType:"x",mouseWheel:{type:"x"}}},navigator:{enabled:navigatorEnabled},scrollbar:{enabled:StockChart_pick(Scrollbar_ScrollbarDefaults.enabled,true)},rangeSelector:{enabled:StockChart_pick(RangeSelector_RangeSelectorDefaults.rangeSelector.enabled,true)},title:{text:null},tooltip:{split:StockChart_pick(defaultOptions.tooltip&&defaultOptions.tooltip.split,true),crosshairs:true},legend:{enabled:false}},userOptions,{isStock:true});userOptions.xAxis=xAxisOptions;userOptions.yAxis=yAxisOptions;options.xAxis=StockChart_splat(userOptions.xAxis||{}).map(xAxisOptions=>StockChart_merge(getDefaultAxisOptions("xAxis",xAxisOptions,defaultOptions.xAxis),xAxisOptions,getForcedAxisOptions("xAxis",userOptions)));options.yAxis=StockChart_splat(userOptions.yAxis||{}).map(yAxisOptions=>StockChart_merge(getDefaultAxisOptions("yAxis",yAxisOptions,defaultOptions.yAxis),yAxisOptions));super.init(options,callback)}createAxis(coll,options){options.axis=StockChart_merge(getDefaultAxisOptions(coll,options.axis,getOptions()[coll]),options.axis,getForcedAxisOptions(coll,this.userOptions));return super.createAxis(coll,options)}}StockChart_addEvent(highcharts_Chart_commonjs_highcharts_Chart_commonjs2_highcharts_Chart_root_Highcharts_Chart_default(),"update",function(e){const chart=this,options=e.options;if("scrollbar"in options&&chart.navigator){StockChart_merge(true,chart.options.scrollbar,options.scrollbar);chart.navigator.update({enabled:!!chart.navigator.navigatorEnabled});delete options.scrollbar}});(function(StockChart){function compose(ChartClass,AxisClass,SeriesClass,SVGRendererClass){const seriesProto=SeriesClass.prototype;if(!seriesProto.forceCropping){StockChart_addEvent(AxisClass,"afterDrawCrosshair",onAxisAfterDrawCrosshair);StockChart_addEvent(AxisClass,"afterHideCrosshair",onAxisAfterHideCrosshair);StockChart_addEvent(AxisClass,"autoLabelAlign",onAxisAutoLabelAlign);StockChart_addEvent(AxisClass,"destroy",onAxisDestroy);StockChart_addEvent(AxisClass,"getPlotLinePath",onAxisGetPlotLinePath);ChartClass.prototype.setFixedRange=StockChart_setFixedRange;seriesProto.forceCropping=seriesForceCropping;StockChart_addEvent(SeriesClass,"setOptions",onSeriesSetOptions);SVGRendererClass.prototype.crispPolyLine=svgRendererCrispPolyLine}}StockChart.compose=compose;function onAxisAfterDrawCrosshair(event){const axis=this;if(!(axis.crosshair?.label?.enabled&&axis.cross&&StockChart_isNumber(axis.min)&&StockChart_isNumber(axis.max))){return}const chart=axis.chart,log=axis.logarithmic,options=axis.crosshair.label,horiz=axis.horiz,opposite=axis.opposite,left=axis.left,top=axis.top,width=axis.width,tickInside=axis.options.tickPosition==="inside",snap=axis.crosshair.snap!==false,e=event.e||axis.cross?.e,point=event.point;let crossLabel=axis.crossLabel,posx,posy,formatOption=options.format,formatFormat="",limit,offset=0,min=axis.min,max=axis.max;if(log){min=log.lin2log(axis.min);max=log.lin2log(axis.max)}const align=horiz?"center":opposite?axis.labelAlign==="right"?"right":"left":axis.labelAlign==="left"?"left":"center";if(!crossLabel){crossLabel=axis.crossLabel=chart.renderer.label("",0,void 0,options.shape||"callout").addClass("highcharts-crosshair-label highcharts-color-"+(point&&point.series?point.series.colorIndex:axis.series[0]&&this.series[0].colorIndex)).attr({align:options.align||align,padding:StockChart_pick(options.padding,8),r:StockChart_pick(options.borderRadius,3),zIndex:2}).add(axis.labelGroup);if(!chart.styledMode){crossLabel.attr({fill:options.backgroundColor||point&&point.series&&point.series.color||"#666666",stroke:options.borderColor||"","stroke-width":options.borderWidth||0}).css(StockChart_extend({color:"#ffffff",fontWeight:"normal",fontSize:"0.7em",textAlign:"center"},options.style||{}))}}if(horiz){posx=snap?(point.plotX||0)+left:e.chartX;posy=top+(opposite?0:axis.height)}else{posx=left+axis.offset+(opposite?width:0);posy=snap?(point.plotY||0)+top:e.chartY}if(!formatOption&&!options.formatter){if(axis.dateTime){formatFormat="%b %d, %Y"}formatOption="{value"+(formatFormat?":"+formatFormat:"")+"}"}const value=snap?axis.isXAxis?point.x:point.y:axis.toValue(horiz?e.chartX:e.chartY);const isInside=point&&point.series?point.series.isPointInside(point):StockChart_isNumber(value)&&value>min&&value<max;let text="";if(formatOption){text=format(formatOption,{value:value},chart)}else if(options.formatter&&StockChart_isNumber(value)){text=options.formatter.call(axis,value)}crossLabel.attr({text:text,x:posx,y:posy,visibility:isInside?"inherit":"hidden"});const crossBox=crossLabel.getBBox();if(StockChart_isNumber(crossLabel.x)&&!horiz&&!opposite){posx=crossLabel.x-crossBox.width/2}if(StockChart_isNumber(crossLabel.y)){if(horiz){if(tickInside&&!opposite||!tickInside&&opposite){posy=crossLabel.y-crossBox.height}}else{posy=crossLabel.y-crossBox.height/2}}if(horiz){limit={left:left,right:left+axis.width}}else{limit={left:axis.labelAlign==="left"?left:0,right:axis.labelAlign==="right"?left+axis.width:chart.chartWidth}}const translateX=crossLabel.translateX||0;if(translateX<limit.left){offset=limit.left-translateX}if(translateX+crossBox.width>=limit.right){offset=-(translateX+crossBox.width-limit.right)}crossLabel.attr({x:Math.max(0,posx+offset),y:Math.max(0,posy),anchorX:horiz?posx:axis.opposite?0:chart.chartWidth,anchorY:horiz?axis.opposite?chart.chartHeight:0:posy+crossBox.height/2})}function onAxisAfterHideCrosshair(){const axis=this;if(axis.crossLabel){axis.crossLabel=axis.crossLabel.hide()}}function onAxisAutoLabelAlign(e){const axis=this,chart=axis.chart,options=axis.options,panes=chart._labelPanes=chart._labelPanes||{},labelOptions=options.labels;if(chart.options.isStock&&axis.coll==="yAxis"){const key=options.top+","+options.height;if(!panes[key]&&labelOptions.enabled){if(labelOptions.distance===15&&axis.side===1){labelOptions.distance=0}if(typeof labelOptions.align==="undefined"){labelOptions.align="right"}panes[key]=axis;e.align="right";e.preventDefault()}}}function onAxisDestroy(){const axis=this,chart=axis.chart,key=axis.options&&axis.options.top+","+axis.options.height;if(key&&chart._labelPanes&&chart._labelPanes[key]===axis){delete chart._labelPanes[key]}}function onAxisGetPlotLinePath(e){const axis=this,series=axis.isLinked&&!axis.series&&axis.linkedParent?axis.linkedParent.series:axis.series,chart=axis.chart,renderer=chart.renderer,axisLeft=axis.left,axisTop=axis.top,result=[],translatedValue=e.translatedValue,value=e.value,force=e.force,getAxis=coll=>{const otherColl=coll==="xAxis"?"yAxis":"xAxis",opt=axis.options[otherColl];if(StockChart_isNumber(opt)){return[chart[otherColl][opt]]}if(StockChart_isString(opt)){return[chart.get(opt)]}return series.map(s=>s[otherColl])};let x1,y1,x2,y2,axes=[],axes2,uniqueAxes,transVal;if(chart.options.isStock&&e.acrossPanes!==false&&axis.coll==="xAxis"||axis.coll==="yAxis"){e.preventDefault();axes=getAxis(axis.coll);axes2=axis.isXAxis?chart.yAxis:chart.xAxis;for(const A of axes2){if(!A.options.isInternal){const a=A.isXAxis?"yAxis":"xAxis",relatedAxis=StockChart_defined(A.options[a])?chart[a][A.options[a]]:chart[a][0];if(axis===relatedAxis){axes.push(A)}}}uniqueAxes=axes.length?[]:[axis.isXAxis?chart.yAxis[0]:chart.xAxis[0]];for(const axis2 of axes){if(uniqueAxes.indexOf(axis2)===-1&&!StockChart_find(uniqueAxes,unique=>unique.pos===axis2.pos&&unique.len===axis2.len)){uniqueAxes.push(axis2)}}transVal=StockChart_pick(translatedValue,axis.translate(value||0,void 0,void 0,e.old));if(StockChart_isNumber(transVal)){if(axis.horiz){for(const axis2 of uniqueAxes){let skip;y1=axis2.pos;y2=y1+axis2.len;x1=x2=Math.round(transVal+axis.transB);if(force!=="pass"&&(x1<axisLeft||x1>axisLeft+axis.width)){if(force){x1=x2=StockChart_clamp(x1,axisLeft,axisLeft+axis.width)}else{skip=true}}if(!skip){result.push(["M",x1,y1],["L",x2,y2])}}}else{for(const axis2 of uniqueAxes){let skip;x1=axis2.pos;x2=x1+axis2.len;y1=y2=Math.round(axisTop+axis.height-transVal);if(force!=="pass"&&(y1<axisTop||y1>axisTop+axis.height)){if(force){y1=y2=StockChart_clamp(y1,axisTop,axisTop+axis.height)}else{skip=true}}if(!skip){result.push(["M",x1,y1],["L",x2,y2])}}}}e.path=result.length>0?renderer.crispPolyLine(result,e.lineWidth||1):void 0}}function onSeriesSetOptions(e){const series=this;if(series.chart.options.isStock){let overrides;if(series.is("column")||series.is("columnrange")){overrides={borderWidth:0,shadow:false}}else if(!series.is("scatter")&&!series.is("sma")){overrides={marker:{enabled:false,radius:2}}}if(overrides){e.plotOptions[series.type]=StockChart_merge(e.plotOptions[series.type],overrides)}}}function seriesForceCropping(){const series=this,chart=series.chart,options=series.options,dataGroupingOptions=options.dataGrouping,groupingEnabled=series.allowDG!==false&&dataGroupingOptions&&StockChart_pick(dataGroupingOptions.enabled,chart.options.isStock);return groupingEnabled}function stockChart(a,b,c){return new StockChart(a,b,c)}StockChart.stockChart=stockChart;function svgRendererCrispPolyLine(points,width){for(let i=0;i<points.length;i=i+2){const start=points[i],end=points[i+1];if(StockChart_defined(start[1])&&start[1]===end[1]){start[1]=end[1]=StockChart_crisp(start[1],width)}if(StockChart_defined(start[2])&&start[2]===end[2]){start[2]=end[2]=StockChart_crisp(start[2],width)}}return points}})(StockChart||(StockChart={}));const Chart_StockChart=StockChart;const{column:{prototype:{pointClass:ColumnPoint}}}=highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default().seriesTypes;class HLCPoint extends ColumnPoint{}const HLC_HLCPoint=HLCPoint;const HLCSeriesDefaults={lineWidth:1,tooltip:{pointFormat:'<span style="color:{point.color}">●</span> '+"<b> {series.name}</b><br/>"+"High: {point.high}<br/>"+"Low: {point.low}<br/>"+"Close: {point.close}<br/>"},threshold:null,states:{hover:{lineWidth:3}},stickyTracking:true};"";const HLC_HLCSeriesDefaults=HLCSeriesDefaults;const{column:ColumnSeries}=highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default().seriesTypes;const{crisp:HLCSeries_crisp,extend:HLCSeries_extend,merge:HLCSeries_merge}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();class HLCSeries extends ColumnSeries{extendStem(path,halfStrokeWidth,value){const start=path[0];const end=path[1];if(typeof start[2]==="number"){start[2]=Math.max(value+halfStrokeWidth,start[2])}if(typeof end[2]==="number"){end[2]=Math.min(value-halfStrokeWidth,end[2])}}getPointPath(point,graphic){const strokeWidth=graphic.strokeWidth(),series=point.series,crispX=HLCSeries_crisp(point.plotX||0,strokeWidth),halfWidth=Math.round(point.shapeArgs.width/2);const path=[["M",crispX,Math.round(point.yBottom)],["L",crispX,Math.round(point.plotHigh)]];if(point.close!==null){const plotClose=HLCSeries_crisp(point.plotClose,strokeWidth);path.push(["M",crispX,plotClose],["L",crispX+halfWidth,plotClose]);series.extendStem(path,strokeWidth/2,plotClose)}return path}drawSinglePoint(point){const series=point.series,chart=series.chart;let path,graphic=point.graphic;if(typeof point.plotY!=="undefined"){if(!graphic){point.graphic=graphic=chart.renderer.path().add(series.group)}if(!chart.styledMode){graphic.attr(series.pointAttribs(point,point.selected&&"select"))}path=series.getPointPath(point,graphic);graphic[!graphic?"attr":"animate"]({d:path}).addClass(point.getClassName(),true)}}drawPoints(){this.points.forEach(this.drawSinglePoint)}init(){super.init.apply(this,arguments);this.options.stacking=void 0}pointAttribs(point,state){const attribs=super.pointAttribs.call(this,point,state);delete attribs.fill;return attribs}toYData(point){return[point.high,point.low,point.close]}translate(){const series=this,yAxis=series.yAxis,names=this.pointArrayMap&&this.pointArrayMap.slice()||[],translated=names.map(name=>`plot${name.charAt(0).toUpperCase()+name.slice(1)}`);translated.push("yBottom");names.push("low");super.translate.apply(series);series.points.forEach(function(point){names.forEach(function(name,i){let value=point[name];if(value!==null){if(series.dataModify){value=series.dataModify.modifyValue(value)}point[translated[i]]=yAxis.toPixels(value,true)}});point.tooltipPos[1]=point.plotHigh+yAxis.pos-series.chart.plotTop})}}HLCSeries.defaultOptions=HLCSeries_merge(ColumnSeries.defaultOptions,HLC_HLCSeriesDefaults);HLCSeries_extend(HLCSeries.prototype,{pointClass:HLC_HLCPoint,animate:null,directTouch:false,keysAffectYAxis:["low","high"],pointArrayMap:["high","low","close"],pointAttrToOptions:{stroke:"color","stroke-width":"lineWidth"},pointValKey:"close"});highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default().registerSeriesType("hlc",HLCSeries);const HLC_HLCSeries=null&&HLCSeries;const{seriesTypes:{hlc:OHLCPoint_HLCSeries}}=highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default();class OHLCPoint extends OHLCPoint_HLCSeries.prototype.pointClass{getClassName(){return super.getClassName.call(this)+(this.open<this.close?" highcharts-point-up":" highcharts-point-down")}resolveUpColor(){if(this.open<this.close&&!this.options.color&&this.series.options.upColor){this.color=this.series.options.upColor}}resolveColor(){super.resolveColor();if(!this.series.is("heikinashi")){this.resolveUpColor()}}getZone(){const zone=super.getZone();this.resolveUpColor();return zone}applyOptions(){super.applyOptions.apply(this,arguments);if(this.resolveColor){this.resolveColor()}return this}}const OHLC_OHLCPoint=OHLCPoint;const OHLCSeriesDefaults={tooltip:{pointFormat:'<span style="color:{point.color}">●</span> '+"<b> {series.name}</b><br/>"+"Open: {point.open}<br/>"+"High: {point.high}<br/>"+"Low: {point.low}<br/>"+"Close: {point.close}<br/>"}};"";const OHLC_OHLCSeriesDefaults=OHLCSeriesDefaults;const{composed:OHLCSeries_composed}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const{hlc:OHLCSeries_HLCSeries}=highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default().seriesTypes;const{addEvent:OHLCSeries_addEvent,crisp:OHLCSeries_crisp,extend:OHLCSeries_extend,merge:OHLCSeries_merge,pushUnique:OHLCSeries_pushUnique}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();function onSeriesAfterSetOptions(e){const options=e.options,dataGrouping=options.dataGrouping;if(dataGrouping&&options.useOhlcData&&options.id!=="highcharts-navigator-series"){dataGrouping.approximation="ohlc"}}function onSeriesInit(eventOptions){const series=this,options=eventOptions.options;if(options.useOhlcData&&options.id!=="highcharts-navigator-series"){OHLCSeries_extend(series,{pointValKey:OHLCSeries.prototype.pointValKey,pointArrayMap:OHLCSeries.prototype.pointArrayMap,toYData:OHLCSeries.prototype.toYData})}}class OHLCSeries extends OHLCSeries_HLCSeries{static compose(SeriesClass,..._args){if(OHLCSeries_pushUnique(OHLCSeries_composed,"OHLCSeries")){OHLCSeries_addEvent(SeriesClass,"afterSetOptions",onSeriesAfterSetOptions);OHLCSeries_addEvent(SeriesClass,"init",onSeriesInit)}}getPointPath(point,graphic){const path=super.getPointPath(point,graphic),strokeWidth=graphic.strokeWidth(),crispX=OHLCSeries_crisp(point.plotX||0,strokeWidth),halfWidth=Math.round(point.shapeArgs.width/2);if(point.open!==null){const plotOpen=OHLCSeries_crisp(point.plotOpen,strokeWidth);path.push(["M",crispX,plotOpen],["L",crispX-halfWidth,plotOpen]);super.extendStem(path,strokeWidth/2,plotOpen)}return path}pointAttribs(point,state){const attribs=super.pointAttribs.call(this,point,state),options=this.options;delete attribs.fill;if(!point.options.color&&options.upColor&&point.open<point.close){attribs.stroke=options.upColor}return attribs}toYData(point){return[point.open,point.high,point.low,point.close]}}OHLCSeries.defaultOptions=OHLCSeries_merge(OHLCSeries_HLCSeries.defaultOptions,OHLC_OHLCSeriesDefaults);OHLCSeries_extend(OHLCSeries.prototype,{pointClass:OHLC_OHLCPoint,pointArrayMap:["open","high","low","close"]});highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default().registerSeriesType("ohlc",OHLCSeries);const OHLC_OHLCSeries=OHLCSeries;const CandlestickSeriesDefaults={states:{hover:{lineWidth:2}},threshold:null,lineColor:"#000000",lineWidth:1,upColor:"#ffffff",stickyTracking:true};"";const Candlestick_CandlestickSeriesDefaults=CandlestickSeriesDefaults;const{column:CandlestickSeries_ColumnSeries,ohlc:CandlestickSeries_OHLCSeries}=highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default().seriesTypes;const{crisp:CandlestickSeries_crisp,merge:CandlestickSeries_merge}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();class CandlestickSeries extends CandlestickSeries_OHLCSeries{pointAttribs(point,state){const attribs=CandlestickSeries_ColumnSeries.prototype.pointAttribs.call(this,point,state),options=this.options,isUp=point.open<point.close,stroke=options.lineColor||this.color,color=point.color||this.color;attribs["stroke-width"]=options.lineWidth;attribs.fill=point.options.color||(isUp?options.upColor||color:color);attribs.stroke=point.options.lineColor||(isUp?options.upLineColor||stroke:stroke);if(state){const stateOptions=options.states[state];attribs.fill=stateOptions.color||attribs.fill;attribs.stroke=stateOptions.lineColor||attribs.stroke;attribs["stroke-width"]=stateOptions.lineWidth||attribs["stroke-width"]}return attribs}drawPoints(){const series=this,points=series.points,chart=series.chart,reversedYAxis=series.yAxis.reversed;for(const point of points){let graphic=point.graphic,plotOpen,plotClose,topBox,bottomBox,hasTopWhisker,hasBottomWhisker,crispX,path,halfWidth;const isNew=!graphic;if(typeof point.plotY!=="undefined"){if(!graphic){point.graphic=graphic=chart.renderer.path().add(series.group)}if(!series.chart.styledMode){graphic.attr(series.pointAttribs(point,point.selected&&"select")).shadow(series.options.shadow)}const strokeWidth=graphic.strokeWidth();crispX=CandlestickSeries_crisp(point.plotX||0,strokeWidth);plotOpen=point.plotOpen;plotClose=point.plotClose;topBox=Math.min(plotOpen,plotClose);bottomBox=Math.max(plotOpen,plotClose);halfWidth=Math.round(point.shapeArgs.width/2);hasTopWhisker=reversedYAxis?bottomBox!==point.yBottom:Math.round(topBox)!==Math.round(point.plotHigh||0);hasBottomWhisker=reversedYAxis?Math.round(topBox)!==Math.round(point.plotHigh||0):bottomBox!==point.yBottom;topBox=CandlestickSeries_crisp(topBox,strokeWidth);bottomBox=CandlestickSeries_crisp(bottomBox,strokeWidth);path=[];path.push(["M",crispX-halfWidth,bottomBox],["L",crispX-halfWidth,topBox],["L",crispX+halfWidth,topBox],["L",crispX+halfWidth,bottomBox],["Z"],["M",crispX,topBox],["L",crispX,hasTopWhisker?Math.round(reversedYAxis?point.yBottom:point.plotHigh):topBox],["M",crispX,bottomBox],["L",crispX,hasBottomWhisker?Math.round(reversedYAxis?point.plotHigh:point.yBottom):bottomBox]);graphic[isNew?"attr":"animate"]({d:path}).addClass(point.getClassName(),true)}}}}CandlestickSeries.defaultOptions=CandlestickSeries_merge(CandlestickSeries_OHLCSeries.defaultOptions,{tooltip:CandlestickSeries_OHLCSeries.defaultOptions.tooltip},Candlestick_CandlestickSeriesDefaults);highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default().registerSeriesType("candlestick",CandlestickSeries);const Candlestick_CandlestickSeries=null&&CandlestickSeries;const{column:{prototype:{pointClass:FlagsPoint_ColumnPoint}}}=highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default().seriesTypes;const{isNumber:FlagsPoint_isNumber}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();class FlagsPoint extends FlagsPoint_ColumnPoint{constructor(){super(...arguments);this.ttBelow=false}isValid(){return FlagsPoint_isNumber(this.y)||typeof this.y==="undefined"}hasNewShapeType(){const shape=this.options.shape||this.series.options.shape;return this.graphic&&shape&&shape!==this.graphic.symbolKey}}const Flags_FlagsPoint=FlagsPoint;const FlagsSeriesDefaults={borderRadius:0,pointRange:0,allowOverlapX:false,shape:"flag",stackDistance:12,textAlign:"center",tooltip:{pointFormat:"{point.text}"},threshold:null,y:-30,fillColor:"#ffffff",lineWidth:1,states:{hover:{lineColor:"#000000",fillColor:"#ccd3ff"}},style:{fontSize:"0.7em",fontWeight:"bold"}};"";const Flags_FlagsSeriesDefaults=FlagsSeriesDefaults;var FlagsSymbols;(function(FlagsSymbols){const modifiedMembers=[];function compose(SVGRendererClass){if(modifiedMembers.indexOf(SVGRendererClass)===-1){modifiedMembers.push(SVGRendererClass);const symbols=SVGRendererClass.prototype.symbols;symbols.flag=flag;createPinSymbol(symbols,"circle");createPinSymbol(symbols,"square")}const RendererClass=highcharts_RendererRegistry_commonjs_highcharts_RendererRegistry_commonjs2_highcharts_RendererRegistry_root_Highcharts_RendererRegistry_default().getRendererType();if(modifiedMembers.indexOf(RendererClass)){modifiedMembers.push(RendererClass)}}FlagsSymbols.compose=compose;function flag(x,y,w,h,options){const anchorX=options&&options.anchorX||x,anchorY=options&&options.anchorY||y;const path=this.circle(anchorX-1,anchorY-1,2,2);path.push(["M",anchorX,anchorY],["L",x,y+h],["L",x,y],["L",x+w,y],["L",x+w,y+h],["L",x,y+h],["Z"]);return path}function createPinSymbol(symbols,shape){symbols[shape+"pin"]=function(x,y,w,h,options){const anchorX=options&&options.anchorX,anchorY=options&&options.anchorY;let path;if(shape==="circle"&&h>w){x-=Math.round((h-w)/2);w=h}path=symbols[shape](x,y,w,h,options);if(anchorX&&anchorY){let labelX=anchorX;if(shape==="circle"){labelX=x+w/2}else{const startSeg=path[0];const endSeg=path[1];if(startSeg[0]==="M"&&endSeg[0]==="L"){labelX=(startSeg[1]+endSeg[1])/2}}const labelY=y>anchorY?y:y+h;path.push(["M",labelX,labelY],["L",anchorX,anchorY]);path=path.concat(symbols.circle(anchorX-1,anchorY-1,2,2))}return path}}})(FlagsSymbols||(FlagsSymbols={}));const Flags_FlagsSymbols=FlagsSymbols;var highcharts_Series_types_column_commonjs_highcharts_Series_types_column_commonjs2_highcharts_Series_types_column_root_Highcharts_Series_types_column_=__webpack_require__(448);var highcharts_Series_types_column_commonjs_highcharts_Series_types_column_commonjs2_highcharts_Series_types_column_root_Highcharts_Series_types_column_default=__webpack_require__.n(highcharts_Series_types_column_commonjs_highcharts_Series_types_column_commonjs2_highcharts_Series_types_column_root_Highcharts_Series_types_column_);const{composed:OnSeriesComposition_composed}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const{prototype:columnProto}=highcharts_Series_types_column_commonjs_highcharts_Series_types_column_commonjs2_highcharts_Series_types_column_root_Highcharts_Series_types_column_default();const{prototype:seriesProto}=highcharts_Series_commonjs_highcharts_Series_commonjs2_highcharts_Series_root_Highcharts_Series_default();const{defined:OnSeriesComposition_defined,pushUnique:OnSeriesComposition_pushUnique,stableSort}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();var OnSeriesComposition;(function(OnSeriesComposition){function compose(SeriesClass){if(OnSeriesComposition_pushUnique(OnSeriesComposition_composed,"OnSeries")){const seriesProto=SeriesClass.prototype;seriesProto.getPlotBox=getPlotBox;seriesProto.translate=translate}return SeriesClass}OnSeriesComposition.compose=compose;function getPlotBox(name){return seriesProto.getPlotBox.call(this.options.onSeries&&this.chart.get(this.options.onSeries)||this,name)}OnSeriesComposition.getPlotBox=getPlotBox;function translate(){columnProto.translate.apply(this);const series=this,options=series.options,chart=series.chart,points=series.points,optionsOnSeries=options.onSeries,onSeries=optionsOnSeries&&chart.get(optionsOnSeries),step=onSeries&&onSeries.options.step,onData=onSeries&&onSeries.points,inverted=chart.inverted,xAxis=series.xAxis,yAxis=series.yAxis;let cursor=points.length-1,point,lastPoint,onKey=options.onKey||"y",i=onData&&onData.length,xOffset=0,leftPoint,lastX,rightPoint,currentDataGrouping,distanceRatio;if(onSeries&&onSeries.visible&&i){xOffset=(onSeries.pointXOffset||0)+(onSeries.barW||0)/2;currentDataGrouping=onSeries.currentDataGrouping;lastX=onData[i-1].x+(currentDataGrouping?currentDataGrouping.totalRange:0);stableSort(points,(a,b)=>a.x-b.x);onKey="plot"+onKey[0].toUpperCase()+onKey.substr(1);while(i--&&points[cursor]){leftPoint=onData[i];point=points[cursor];point.y=leftPoint.y;if(leftPoint.x<=point.x&&typeof leftPoint[onKey]!=="undefined"){if(point.x<=lastX){point.plotY=leftPoint[onKey];if(leftPoint.x<point.x&&!step){rightPoint=onData[i+1];if(rightPoint&&typeof rightPoint[onKey]!=="undefined"){if(OnSeriesComposition_defined(point.plotX)&&onSeries.is("spline")){leftPoint=leftPoint;rightPoint=rightPoint;const p0=[leftPoint.plotX||0,leftPoint.plotY||0],p3=[rightPoint.plotX||0,rightPoint.plotY||0],p1=leftPoint.controlPoints?.high||p0,p2=rightPoint.controlPoints?.low||p3,pixelThreshold=.25,maxIterations=100,calculateCoord=(t,key)=>Math.pow(1-t,3)*p0[key]+3*(1-t)*(1-t)*t*p1[key]+3*(1-t)*t*t*p2[key]+t*t*t*p3[key];let tMin=0,tMax=1,t;for(let i=0;i<maxIterations;i++){const tMid=(tMin+tMax)/2;const xMid=calculateCoord(tMid,0);if(xMid===null){break}if(Math.abs(xMid-point.plotX)<pixelThreshold){t=tMid;break}if(xMid<point.plotX){tMin=tMid}else{tMax=tMid}}if(OnSeriesComposition_defined(t)){point.plotY=calculateCoord(t,1);point.y=yAxis.toValue(point.plotY,true)}}else{distanceRatio=(point.x-leftPoint.x)/(rightPoint.x-leftPoint.x);point.plotY+=distanceRatio*(rightPoint[onKey]-leftPoint[onKey]);point.y+=distanceRatio*(rightPoint.y-leftPoint.y)}}}}cursor--;i++;if(cursor<0){break}}}}points.forEach((point,i)=>{let stackIndex;point.plotX+=xOffset;if(typeof point.plotY==="undefined"||inverted){if(point.plotX>=0&&point.plotX<=xAxis.len){if(inverted){point.plotY=xAxis.translate(point.x,0,1,0,1);point.plotX=OnSeriesComposition_defined(point.y)?yAxis.translate(point.y,0,0,0,1):0}else{point.plotY=(xAxis.opposite?0:series.yAxis.len)+xAxis.offset}}else{point.shapeArgs={}}}lastPoint=points[i-1];if(lastPoint&&lastPoint.plotX===point.plotX){if(typeof lastPoint.stackIndex==="undefined"){lastPoint.stackIndex=0}stackIndex=lastPoint.stackIndex+1}point.stackIndex=stackIndex});this.onSeries=onSeries}OnSeriesComposition.translate=translate})(OnSeriesComposition||(OnSeriesComposition={}));const Series_OnSeriesComposition=OnSeriesComposition;const{noop}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const{distribute}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const{series:Series,seriesTypes:{column:FlagsSeries_ColumnSeries}}=highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default();const{addEvent:FlagsSeries_addEvent,defined:FlagsSeries_defined,extend:FlagsSeries_extend,isNumber:FlagsSeries_isNumber,merge:FlagsSeries_merge,objectEach:FlagsSeries_objectEach,wrap}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();class FlagsSeries extends FlagsSeries_ColumnSeries{animate(init){if(init){this.setClip()}}drawPoints(){const series=this,points=series.points,chart=series.chart,renderer=chart.renderer,inverted=chart.inverted,options=series.options,optionsY=options.y,yAxis=series.yAxis,boxesMap={},boxes=[],borderRadius=FlagsSeries_isNumber(options.borderRadius)?options.borderRadius:0;let plotX,plotY,shape,i,point,graphic,stackIndex,anchorY,attribs,outsideRight,centered;i=points.length;while(i--){point=points[i];outsideRight=(inverted?point.plotY:point.plotX)>series.xAxis.len;plotX=point.plotX;stackIndex=point.stackIndex;shape=point.options.shape||options.shape;plotY=point.plotY;if(typeof plotY!=="undefined"){plotY=point.plotY+optionsY-(typeof stackIndex!=="undefined"&&stackIndex*options.stackDistance)}point.anchorX=stackIndex?void 0:point.plotX;anchorY=stackIndex?void 0:point.plotY;centered=shape!=="flag";graphic=point.graphic;if(typeof plotY!=="undefined"&&plotX>=0&&!outsideRight){if(graphic&&point.hasNewShapeType()){graphic=graphic.destroy()}if(!graphic){graphic=point.graphic=renderer.label("",0,void 0,shape,void 0,void 0,options.useHTML).addClass("highcharts-point").add(series.markerGroup);if(point.graphic.div){point.graphic.div.point=point}graphic.isNew=true}graphic.attr({align:centered?"center":"left",width:options.width,height:options.height,"text-align":options.textAlign,r:borderRadius});if(!chart.styledMode){graphic.attr(series.pointAttribs(point)).css(FlagsSeries_merge(options.style,point.style)).shadow(options.shadow)}if(plotX>0){plotX-=graphic.strokeWidth()%2}attribs={y:plotY,anchorY:anchorY};if(options.allowOverlapX){attribs.x=plotX;attribs.anchorX=point.anchorX}graphic.attr({text:point.options.title??options.title??"A"})[graphic.isNew?"attr":"animate"](attribs);if(!options.allowOverlapX){if(!boxesMap[point.plotX]){boxesMap[point.plotX]={align:centered?.5:0,size:graphic.width||0,target:plotX,anchorX:plotX}}else{boxesMap[point.plotX].size=Math.max(boxesMap[point.plotX].size,graphic.width||0)}}point.tooltipPos=[plotX,plotY+yAxis.pos-chart.plotTop]}else if(graphic){point.graphic=graphic.destroy()}}if(!options.allowOverlapX){let maxDistance=100;FlagsSeries_objectEach(boxesMap,function(box){box.plotX=box.anchorX;boxes.push(box);maxDistance=Math.max(box.size,maxDistance)});distribute(boxes,inverted?yAxis.len:this.xAxis.len,maxDistance);for(const point of points){const plotX=point.plotX,graphic=point.graphic,box=graphic&&boxesMap[plotX];if(box&&graphic){if(!FlagsSeries_defined(box.pos)){graphic.hide().isNew=true}else{graphic[graphic.isNew?"attr":"animate"]({x:box.pos+(box.align||0)*box.size,anchorX:point.anchorX}).show().isNew=false}}}}if(options.useHTML&&series.markerGroup){wrap(series.markerGroup,"on",function(proceed){return highcharts_SVGElement_commonjs_highcharts_SVGElement_commonjs2_highcharts_SVGElement_root_Highcharts_SVGElement_default().prototype.on.apply(proceed.apply(this,[].slice.call(arguments,1)),[].slice.call(arguments,1))})}}drawTracker(){const series=this,points=series.points;super.drawTracker();for(const point of points){const graphic=point.graphic;if(graphic){if(point.unbindMouseOver){point.unbindMouseOver()}point.unbindMouseOver=FlagsSeries_addEvent(graphic.element,"mouseover",function(){if(point.stackIndex>0&&!point.raised){point._y=graphic.y;graphic.attr({y:point._y-8});point.raised=true}for(const otherPoint of points){if(otherPoint!==point&&otherPoint.raised&&otherPoint.graphic){otherPoint.graphic.attr({y:otherPoint._y});otherPoint.raised=false}}})}}}pointAttribs(point,state){const options=this.options,color=point&&point.color||this.color;let lineColor=options.lineColor,lineWidth=point&&point.lineWidth,fill=point&&point.fillColor||options.fillColor;if(state){fill=options.states[state].fillColor;lineColor=options.states[state].lineColor;lineWidth=options.states[state].lineWidth}return{fill:fill||color,stroke:lineColor||color,"stroke-width":lineWidth||options.lineWidth||0}}setClip(){Series.prototype.setClip.apply(this,arguments);if(this.options.clip!==false&&this.sharedClipKey&&this.markerGroup){this.markerGroup.clip(this.chart.sharedClips[this.sharedClipKey])}}}FlagsSeries.compose=Flags_FlagsSymbols.compose;FlagsSeries.defaultOptions=FlagsSeries_merge(FlagsSeries_ColumnSeries.defaultOptions,Flags_FlagsSeriesDefaults);Series_OnSeriesComposition.compose(FlagsSeries);FlagsSeries_extend(FlagsSeries.prototype,{allowDG:false,forceCrop:true,invertible:false,noSharedTooltip:true,pointClass:Flags_FlagsPoint,sorted:false,takeOrdinalPosition:false,trackerGroups:["markerGroup"],buildKDTree:noop,init:Series.prototype.init});highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default().registerSeriesType("flags",FlagsSeries);const Flags_FlagsSeries=FlagsSeries;"";var highcharts_StackItem_commonjs_highcharts_StackItem_commonjs2_highcharts_StackItem_root_Highcharts_StackItem_=__webpack_require__(184);var highcharts_StackItem_commonjs_highcharts_StackItem_commonjs2_highcharts_StackItem_root_Highcharts_StackItem_default=__webpack_require__.n(highcharts_StackItem_commonjs_highcharts_StackItem_commonjs2_highcharts_StackItem_root_Highcharts_StackItem_);const{addEvent:BrokenAxis_addEvent,find:BrokenAxis_find,fireEvent:BrokenAxis_fireEvent,isArray:BrokenAxis_isArray,isNumber:BrokenAxis_isNumber,pick:BrokenAxis_pick}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();var BrokenAxis;(function(BrokenAxis){function compose(AxisClass,SeriesClass){if(!AxisClass.keepProps.includes("brokenAxis")){AxisClass.keepProps.push("brokenAxis");BrokenAxis_addEvent(AxisClass,"init",onAxisInit);BrokenAxis_addEvent(AxisClass,"afterInit",onAxisAfterInit);BrokenAxis_addEvent(AxisClass,"afterSetTickPositions",onAxisAfterSetTickPositions);BrokenAxis_addEvent(AxisClass,"afterSetOptions",onAxisAfterSetOptions);const seriesProto=SeriesClass.prototype;seriesProto.drawBreaks=seriesDrawBreaks;seriesProto.gappedPath=seriesGappedPath;BrokenAxis_addEvent(SeriesClass,"afterGeneratePoints",onSeriesAfterGeneratePoints);BrokenAxis_addEvent(SeriesClass,"afterRender",onSeriesAfterRender)}return AxisClass}BrokenAxis.compose=compose;function onAxisAfterInit(){if(typeof this.brokenAxis!=="undefined"){this.brokenAxis.setBreaks(this.options.breaks,false)}}function onAxisAfterSetOptions(){const axis=this;if(axis.brokenAxis?.hasBreaks){axis.options.ordinal=false}}function onAxisAfterSetTickPositions(){const axis=this,brokenAxis=axis.brokenAxis;if(brokenAxis?.hasBreaks){const tickPositions=axis.tickPositions,info=axis.tickPositions.info,newPositions=[];for(let i=0;i<tickPositions.length;i++){if(!brokenAxis.isInAnyBreak(tickPositions[i])){newPositions.push(tickPositions[i])}}axis.tickPositions=newPositions;axis.tickPositions.info=info}}function onAxisInit(){const axis=this;if(!axis.brokenAxis){axis.brokenAxis=new Additions(axis)}}function onSeriesAfterGeneratePoints(){const{isDirty,options:{connectNulls},points,xAxis,yAxis}=this;if(isDirty){let i=points.length;while(i--){const point=points[i];const nullGap=point.y===null&&connectNulls===false;const isPointInBreak=!nullGap&&(xAxis?.brokenAxis?.isInAnyBreak(point.x,true)||yAxis?.brokenAxis?.isInAnyBreak(point.y,true));point.visible=isPointInBreak?false:point.options.visible!==false}}}function onSeriesAfterRender(){this.drawBreaks(this.xAxis,["x"]);this.drawBreaks(this.yAxis,BrokenAxis_pick(this.pointArrayMap,["y"]))}function seriesDrawBreaks(axis,keys){const series=this,points=series.points;let breaks,threshold,y;if(axis?.brokenAxis?.hasBreaks){const brokenAxis=axis.brokenAxis;keys.forEach(function(key){breaks=brokenAxis?.breakArray||[];threshold=axis.isXAxis?axis.min:BrokenAxis_pick(series.options.threshold,axis.min);const breaksOutOfRange=axis?.options?.breaks?.filter(function(brk){let isOut=true;for(let i=0;i<breaks.length;i++){const otherBreak=breaks[i];if(otherBreak.from===brk.from&&otherBreak.to===brk.to){isOut=false;break}}return isOut});points.forEach(function(point){y=BrokenAxis_pick(point["stack"+key.toUpperCase()],point[key]);breaks.forEach(function(brk){if(BrokenAxis_isNumber(threshold)&&BrokenAxis_isNumber(y)){let eventName="";if(threshold<brk.from&&y>brk.to||threshold>brk.from&&y<brk.from){eventName="pointBreak"}else if(threshold<brk.from&&y>brk.from&&y<brk.to||threshold>brk.from&&y>brk.to&&y<brk.from){eventName="pointInBreak"}if(eventName){BrokenAxis_fireEvent(axis,eventName,{point:point,brk:brk})}}});breaksOutOfRange?.forEach(function(brk){BrokenAxis_fireEvent(axis,"pointOutsideOfBreak",{point:point,brk:brk})})})})}}function seriesGappedPath(){const currentDataGrouping=this.currentDataGrouping,groupingSize=currentDataGrouping?.gapSize,points=this.points.slice(),yAxis=this.yAxis;let gapSize=this.options.gapSize,i=points.length-1,stack;if(gapSize&&i>0){if(this.options.gapUnit!=="value"){gapSize*=this.basePointRange}if(groupingSize&&groupingSize>gapSize&&groupingSize>=this.basePointRange){gapSize=groupingSize}let current,next;while(i--){if(!(next&&next.visible!==false)){next=points[i+1]}current=points[i];if(next.visible===false||current.visible===false){continue}if(next.x-current.x>gapSize){const xRange=(current.x+next.x)/2;points.splice(i+1,0,{isNull:true,x:xRange});if(yAxis.stacking&&this.options.stacking){stack=yAxis.stacking.stacks[this.stackKey][xRange]=new(highcharts_StackItem_commonjs_highcharts_StackItem_commonjs2_highcharts_StackItem_root_Highcharts_StackItem_default())(yAxis,yAxis.options.stackLabels,false,xRange,this.stack);stack.total=0}}next=current}}return this.getGraphPath(points)}class Additions{static isInBreak(brk,val){const repeat=brk.repeat||Infinity,from=brk.from,length=brk.to-brk.from,test=val>=from?(val-from)%repeat:repeat-(from-val)%repeat;let ret;if(!brk.inclusive){ret=test<length&&test!==0}else{ret=test<=length}return ret}static lin2Val(val){const axis=this;const brokenAxis=axis.brokenAxis;const breakArray=brokenAxis&&brokenAxis.breakArray;if(!breakArray||!BrokenAxis_isNumber(val)){return val}let nval=val,brk,i;for(i=0;i<breakArray.length;i++){brk=breakArray[i];if(brk.from>=nval){break}else if(brk.to<nval){nval+=brk.len}else if(Additions.isInBreak(brk,nval)){nval+=brk.len}}return nval}static val2Lin(val){const axis=this;const brokenAxis=axis.brokenAxis;const breakArray=brokenAxis&&brokenAxis.breakArray;if(!breakArray||!BrokenAxis_isNumber(val)){return val}let nval=val,brk,i;for(i=0;i<breakArray.length;i++){brk=breakArray[i];if(brk.to<=val){nval-=brk.len}else if(brk.from>=val){break}else if(Additions.isInBreak(brk,val)){nval-=val-brk.from;break}}return nval}constructor(axis){this.hasBreaks=false;this.axis=axis}findBreakAt(x,breaks){return BrokenAxis_find(breaks,function(b){return b.from<x&&x<b.to})}isInAnyBreak(val,testKeep){const brokenAxis=this,axis=brokenAxis.axis,breaks=axis.options.breaks||[];let i=breaks.length,inbrk,keep,ret;if(i&&BrokenAxis_isNumber(val)){while(i--){if(Additions.isInBreak(breaks[i],val)){inbrk=true;if(!keep){keep=BrokenAxis_pick(breaks[i].showPoints,!axis.isXAxis)}}}if(inbrk&&testKeep){ret=inbrk&&!keep}else{ret=inbrk}}return ret}setBreaks(breaks,redraw){const brokenAxis=this,axis=brokenAxis.axis,time=axis.chart.time,hasBreaks=BrokenAxis_isArray(breaks)&&!!breaks.length&&!!Object.keys(breaks[0]).length;axis.isDirty=brokenAxis.hasBreaks!==hasBreaks;brokenAxis.hasBreaks=hasBreaks;breaks?.forEach(brk=>{brk.from=time.parse(brk.from)||0;brk.to=time.parse(brk.to)||0});if(breaks!==axis.options.breaks){axis.options.breaks=axis.userOptions.breaks=breaks}axis.forceRedraw=true;axis.series.forEach(function(series){series.isDirty=true});if(!hasBreaks&&axis.val2lin===Additions.val2Lin){delete axis.val2lin;delete axis.lin2val}if(hasBreaks){axis.userOptions.ordinal=false;axis.lin2val=Additions.lin2Val;axis.val2lin=Additions.val2Lin;axis.setExtremes=function(newMin,newMax,redraw,animation,eventArguments){if(brokenAxis.hasBreaks){const breaks=this.options.breaks||[];let axisBreak;while(axisBreak=brokenAxis.findBreakAt(newMin,breaks)){newMin=axisBreak.to}while(axisBreak=brokenAxis.findBreakAt(newMax,breaks)){newMax=axisBreak.from}if(newMax<newMin){newMax=newMin}}axis.constructor.prototype.setExtremes.call(this,newMin,newMax,redraw,animation,eventArguments)};axis.setAxisTranslation=function(){axis.constructor.prototype.setAxisTranslation.call(this);brokenAxis.unitLength=void 0;if(brokenAxis.hasBreaks){const breaks=axis.options.breaks||[],breakArrayT=[],breakArray=[],pointRangePadding=BrokenAxis_pick(axis.pointRangePadding,0);let length=0,inBrk,repeat,min=axis.userMin||axis.min,max=axis.userMax||axis.max,start,i;breaks.forEach(function(brk){repeat=brk.repeat||Infinity;if(BrokenAxis_isNumber(min)&&BrokenAxis_isNumber(max)){if(Additions.isInBreak(brk,min)){min+=brk.to%repeat-min%repeat}if(Additions.isInBreak(brk,max)){max-=max%repeat-brk.from%repeat}}});breaks.forEach(function(brk){start=brk.from;repeat=brk.repeat||Infinity;if(BrokenAxis_isNumber(min)&&BrokenAxis_isNumber(max)){while(start-repeat>min){start-=repeat}while(start<min){start+=repeat}for(i=start;i<max;i+=repeat){breakArrayT.push({value:i,move:"in"});breakArrayT.push({value:i+brk.to-brk.from,move:"out",size:brk.breakSize})}}});breakArrayT.sort(function(a,b){return a.value===b.value?(a.move==="in"?0:1)-(b.move==="in"?0:1):a.value-b.value});inBrk=0;start=min;breakArrayT.forEach(function(brk){inBrk+=brk.move==="in"?1:-1;if(inBrk===1&&brk.move==="in"){start=brk.value}if(inBrk===0&&BrokenAxis_isNumber(start)){breakArray.push({from:start,to:brk.value,len:brk.value-start-(brk.size||0)});length+=brk.value-start-(brk.size||0)}});brokenAxis.breakArray=breakArray;if(BrokenAxis_isNumber(min)&&BrokenAxis_isNumber(max)&&BrokenAxis_isNumber(axis.min)){brokenAxis.unitLength=max-min-length+pointRangePadding;BrokenAxis_fireEvent(axis,"afterBreaks");if(axis.staticScale){axis.transA=axis.staticScale}else if(brokenAxis.unitLength){axis.transA*=(max-axis.min+pointRangePadding)/brokenAxis.unitLength}if(pointRangePadding){axis.minPixelPadding=axis.transA*(axis.minPointOffset||0)}axis.min=min;axis.max=max}}}}if(BrokenAxis_pick(redraw,true)){axis.chart.redraw()}}}BrokenAxis.Additions=Additions})(BrokenAxis||(BrokenAxis={}));const Axis_BrokenAxis=BrokenAxis;const G=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();G.BrokenAxis=G.BrokenAxis||Axis_BrokenAxis;G.BrokenAxis.compose(G.Axis,G.Series);const broken_axis_src=null&&Highcharts;const ApproximationRegistry={};const DataGrouping_ApproximationRegistry=ApproximationRegistry;const{arrayMax:ApproximationDefaults_arrayMax,arrayMin:ApproximationDefaults_arrayMin,correctFloat:ApproximationDefaults_correctFloat,extend:ApproximationDefaults_extend,isNumber:ApproximationDefaults_isNumber}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();function average(arr){const len=arr.length;let ret=sum(arr);if(ApproximationDefaults_isNumber(ret)&&len){ret=ApproximationDefaults_correctFloat(ret/len)}return ret}function averages(){const ret=[];[].forEach.call(arguments,function(arr){ret.push(average(arr))});return typeof ret[0]==="undefined"?void 0:ret}function ApproximationDefaults_close(arr){return arr.length?arr[arr.length-1]:arr.hasNulls?null:void 0}function high(arr){return arr.length?ApproximationDefaults_arrayMax(arr):arr.hasNulls?null:void 0}function hlc(high,low,close){high=DataGrouping_ApproximationRegistry.high(high);low=DataGrouping_ApproximationRegistry.low(low);close=DataGrouping_ApproximationRegistry.close(close);if(ApproximationDefaults_isNumber(high)||ApproximationDefaults_isNumber(low)||ApproximationDefaults_isNumber(close)){return[high,low,close]}}function low(arr){return arr.length?ApproximationDefaults_arrayMin(arr):arr.hasNulls?null:void 0}function ohlc(open,high,low,close){open=DataGrouping_ApproximationRegistry.open(open);high=DataGrouping_ApproximationRegistry.high(high);low=DataGrouping_ApproximationRegistry.low(low);close=DataGrouping_ApproximationRegistry.close(close);if(ApproximationDefaults_isNumber(open)||ApproximationDefaults_isNumber(high)||ApproximationDefaults_isNumber(low)||ApproximationDefaults_isNumber(close)){return[open,high,low,close]}}function ApproximationDefaults_open(arr){return arr.length?arr[0]:arr.hasNulls?null:void 0}function range(low,high){low=DataGrouping_ApproximationRegistry.low(low);high=DataGrouping_ApproximationRegistry.high(high);if(ApproximationDefaults_isNumber(low)||ApproximationDefaults_isNumber(high)){return[low,high]}if(low===null&&high===null){return null}}function sum(arr){let len=arr.length,ret;if(!len&&arr.hasNulls){ret=null}else if(len){ret=0;while(len--){ret+=arr[len]}}return ret}const ApproximationDefaults={average:average,averages:averages,close:ApproximationDefaults_close,high:high,hlc:hlc,low:low,ohlc:ohlc,open:ApproximationDefaults_open,range:range,sum:sum};ApproximationDefaults_extend(DataGrouping_ApproximationRegistry,ApproximationDefaults);const DataGrouping_ApproximationDefaults=ApproximationDefaults;const common={groupPixelWidth:2,dateTimeLabelFormats:{millisecond:["%[AebHMSL]","%[AebHMSL]","-%[HMSL]"],second:["%[AebHMS]","%[AebHMS]","-%[HMS]"],minute:["%[AebHM]","%[AebHM]","-%[HM]"],hour:["%[AebHM]","%[AebHM]","-%[HM]"],day:["%[AebY]","%[Aeb]","-%[AebY]"],week:["week from %[AebY]","%[Aeb]","-%[AebY]"],month:["%[BY]","%[B]","-%[BY]"],year:["%Y","%Y","-%Y"]}};const seriesSpecific={line:{},spline:{},area:{},areaspline:{},arearange:{},column:{groupPixelWidth:10},columnrange:{groupPixelWidth:10},candlestick:{groupPixelWidth:10},ohlc:{groupPixelWidth:5},hlc:{groupPixelWidth:5},heikinashi:{groupPixelWidth:10}};const units=[["millisecond",[1,2,5,10,20,25,50,100,200,500]],["second",[1,2,5,10,15,30]],["minute",[1,2,5,10,15,30]],["hour",[1,2,3,4,6,8,12]],["day",[1]],["week",[1]],["month",[1,3,6]],["year",null]];const DataGroupingDefaults={common:common,seriesSpecific:seriesSpecific,units:units};const DataGrouping_DataGroupingDefaults=DataGroupingDefaults;const{addEvent:DataGroupingAxisComposition_addEvent,extend:DataGroupingAxisComposition_extend,merge:DataGroupingAxisComposition_merge,pick:DataGroupingAxisComposition_pick}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();let AxisConstructor;function applyGrouping(e){const axis=this,series=axis.series;series.forEach(function(series){series.groupPixelWidth=void 0});series.forEach(function(series){series.groupPixelWidth=axis.getGroupPixelWidth&&axis.getGroupPixelWidth();if(series.groupPixelWidth){series.hasProcessed=true}series.applyGrouping(!!e.hasExtremesChanged)})}function DataGroupingAxisComposition_compose(AxisClass){AxisConstructor=AxisClass;const axisProto=AxisClass.prototype;if(!axisProto.applyGrouping){DataGroupingAxisComposition_addEvent(AxisClass,"afterSetScale",onAfterSetScale);DataGroupingAxisComposition_addEvent(AxisClass,"postProcessData",applyGrouping);DataGroupingAxisComposition_extend(axisProto,{applyGrouping:applyGrouping,getGroupPixelWidth:getGroupPixelWidth,setDataGrouping:setDataGrouping})}}function getGroupPixelWidth(){const series=this.series;let i=series.length,groupPixelWidth=0,doGrouping=false,dataLength,dgOptions;while(i--){dgOptions=series[i].options.dataGrouping;if(dgOptions){groupPixelWidth=Math.max(groupPixelWidth,DataGroupingAxisComposition_pick(dgOptions.groupPixelWidth,DataGrouping_DataGroupingDefaults.common.groupPixelWidth));dataLength=(series[i].dataTable.modified||series[i].dataTable).rowCount;if(series[i].groupPixelWidth||dataLength>this.chart.plotSizeX/groupPixelWidth||dataLength&&dgOptions.forced){doGrouping=true}}}return doGrouping?groupPixelWidth:0}function onAfterSetScale(){this.series.forEach(function(series){series.hasProcessed=false})}function setDataGrouping(dataGrouping,redraw){const axis=this;let i;redraw=DataGroupingAxisComposition_pick(redraw,true);if(!dataGrouping){dataGrouping={forced:false,units:null}}if(this instanceof AxisConstructor){i=this.series.length;while(i--){this.series[i].update({dataGrouping:dataGrouping},false)}}else{this.chart.options.series.forEach(function(seriesOptions){seriesOptions.dataGrouping=typeof dataGrouping==="boolean"?dataGrouping:DataGroupingAxisComposition_merge(dataGrouping,seriesOptions.dataGrouping)})}if(axis.ordinal){axis.ordinal.slope=void 0}if(redraw){this.chart.redraw()}}const DataGroupingAxisComposition={compose:DataGroupingAxisComposition_compose};const DataGrouping_DataGroupingAxisComposition=DataGroupingAxisComposition;const{addEvent:DateTimeAxis_addEvent,getMagnitude,normalizeTickInterval,timeUnits:DateTimeAxis_timeUnits}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();var DateTimeAxis;(function(DateTimeAxis){function compose(AxisClass){if(!AxisClass.keepProps.includes("dateTime")){AxisClass.keepProps.push("dateTime");const axisProto=AxisClass.prototype;axisProto.getTimeTicks=getTimeTicks;DateTimeAxis_addEvent(AxisClass,"afterSetType",onAfterSetType)}return AxisClass}DateTimeAxis.compose=compose;function getTimeTicks(){return this.chart.time.getTimeTicks.apply(this.chart.time,arguments)}function onAfterSetType(){if(this.type!=="datetime"){this.dateTime=void 0;return}if(!this.dateTime){this.dateTime=new Additions(this)}}class Additions{constructor(axis){this.axis=axis}normalizeTimeTickInterval(tickInterval,unitsOption){const units=unitsOption||[["millisecond",[1,2,5,10,20,25,50,100,200,500]],["second",[1,2,5,10,15,30]],["minute",[1,2,5,10,15,30]],["hour",[1,2,3,4,6,8,12]],["day",[1,2]],["week",[1,2]],["month",[1,2,3,4,6]],["year",null]];let unit=units[units.length-1],interval=DateTimeAxis_timeUnits[unit[0]],multiples=unit[1],i;for(i=0;i<units.length;i++){unit=units[i];interval=DateTimeAxis_timeUnits[unit[0]];multiples=unit[1];if(units[i+1]){const lessThan=(interval*multiples[multiples.length-1]+DateTimeAxis_timeUnits[units[i+1][0]])/2;if(tickInterval<=lessThan){break}}}if(interval===DateTimeAxis_timeUnits.year&&tickInterval<5*interval){multiples=[1,2,5]}const count=normalizeTickInterval(tickInterval/interval,multiples,unit[0]==="year"?Math.max(getMagnitude(tickInterval/interval),1):1);return{unitRange:interval,count:count,unitName:unit[0]}}getXDateFormat(x,dateTimeLabelFormats){const{axis}=this,time=axis.chart.time;return axis.closestPointRange?time.getDateFormat(axis.closestPointRange,x,axis.options.startOfWeek,dateTimeLabelFormats)||time.resolveDTLFormat(dateTimeLabelFormats.year).main:time.resolveDTLFormat(dateTimeLabelFormats.day).main}}DateTimeAxis.Additions=Additions})(DateTimeAxis||(DateTimeAxis={}));const Axis_DateTimeAxis=DateTimeAxis;const{series:{prototype:DataGroupingSeriesComposition_seriesProto}}=highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default();const{addEvent:DataGroupingSeriesComposition_addEvent,defined:DataGroupingSeriesComposition_defined,error:DataGroupingSeriesComposition_error,extend:DataGroupingSeriesComposition_extend,isNumber:DataGroupingSeriesComposition_isNumber,merge:DataGroupingSeriesComposition_merge,pick:DataGroupingSeriesComposition_pick,splat:DataGroupingSeriesComposition_splat}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const baseGeneratePoints=DataGroupingSeriesComposition_seriesProto.generatePoints;function adjustExtremes(xAxis,groupedXData){if(DataGroupingSeriesComposition_defined(groupedXData[0])&&DataGroupingSeriesComposition_isNumber(xAxis.min)&&DataGroupingSeriesComposition_isNumber(xAxis.dataMin)&&groupedXData[0]<xAxis.min){if(!DataGroupingSeriesComposition_defined(xAxis.options.min)&&xAxis.min<=xAxis.dataMin||xAxis.min===xAxis.dataMin){xAxis.min=Math.min(groupedXData[0],xAxis.min)}xAxis.dataMin=Math.min(groupedXData[0],xAxis.dataMin)}if(DataGroupingSeriesComposition_defined(groupedXData[groupedXData.length-1])&&DataGroupingSeriesComposition_isNumber(xAxis.max)&&DataGroupingSeriesComposition_isNumber(xAxis.dataMax)&&groupedXData[groupedXData.length-1]>xAxis.max){if(!DataGroupingSeriesComposition_defined(xAxis.options.max)&&DataGroupingSeriesComposition_isNumber(xAxis.dataMax)&&xAxis.max>=xAxis.dataMax||xAxis.max===xAxis.dataMax){xAxis.max=Math.max(groupedXData[groupedXData.length-1],xAxis.max)}xAxis.dataMax=Math.max(groupedXData[groupedXData.length-1],xAxis.dataMax)}}function anchorPoints(series,groupedXData,xMax){const options=series.options,dataGroupingOptions=options.dataGrouping,totalRange=series.currentDataGrouping&&series.currentDataGrouping.gapSize,xData=series.getColumn("x");if(!(dataGroupingOptions&&xData.length&&totalRange&&series.groupMap)){return}const groupedDataLastIndex=groupedXData.length-1,anchor=dataGroupingOptions.anchor,firstAnchor=dataGroupingOptions.firstAnchor,lastAnchor=dataGroupingOptions.lastAnchor;let anchorIndexIterator=groupedXData.length-1,anchorFirstIndex=0;if(firstAnchor&&xData[0]>=groupedXData[0]){anchorFirstIndex++;const groupStart=series.groupMap[0].start,groupLength=series.groupMap[0].length;let firstGroupEnd;if(DataGroupingSeriesComposition_isNumber(groupStart)&&DataGroupingSeriesComposition_isNumber(groupLength)){firstGroupEnd=groupStart+(groupLength-1)}groupedXData[0]={start:groupedXData[0],middle:groupedXData[0]+.5*totalRange,end:groupedXData[0]+totalRange,firstPoint:xData[0],lastPoint:firstGroupEnd&&xData[firstGroupEnd]}[firstAnchor]}if(groupedDataLastIndex>0&&lastAnchor&&totalRange&&groupedXData[groupedDataLastIndex]>=xMax-totalRange){anchorIndexIterator--;const lastGroupStart=series.groupMap[series.groupMap.length-1].start;groupedXData[groupedDataLastIndex]={start:groupedXData[groupedDataLastIndex],middle:groupedXData[groupedDataLastIndex]+.5*totalRange,end:groupedXData[groupedDataLastIndex]+totalRange,firstPoint:lastGroupStart&&xData[lastGroupStart],lastPoint:xData[xData.length-1]}[lastAnchor]}if(anchor&&anchor!=="start"){const shiftInterval=totalRange*{middle:.5,end:1}[anchor];while(anchorIndexIterator>=anchorFirstIndex){groupedXData[anchorIndexIterator]+=shiftInterval;anchorIndexIterator--}}}function DataGroupingSeriesComposition_applyGrouping(hasExtremesChanged){const series=this,chart=series.chart,options=series.options,dataGroupingOptions=options.dataGrouping,groupingEnabled=series.allowDG!==false&&dataGroupingOptions&&DataGroupingSeriesComposition_pick(dataGroupingOptions.enabled,chart.options.isStock),reserveSpace=series.reserveSpace(),lastDataGrouping=this.currentDataGrouping;let currentDataGrouping,croppedData,revertRequireSorting=false;if(groupingEnabled&&!series.requireSorting){series.requireSorting=revertRequireSorting=true}const skip=skipDataGrouping(series,hasExtremesChanged)===false||!groupingEnabled;if(revertRequireSorting){series.requireSorting=false}if(skip){return}series.destroyGroupedData();const table=dataGroupingOptions.groupAll?series.dataTable:series.dataTable.modified||series.dataTable,processedXData=series.getColumn("x",!dataGroupingOptions.groupAll),xData=processedXData,plotSizeX=chart.plotSizeX,xAxis=series.xAxis,extremes=xAxis.getExtremes(),ordinal=xAxis.options.ordinal,groupPixelWidth=series.groupPixelWidth;let i,hasGroupedData;if(groupPixelWidth&&xData&&table.rowCount&&plotSizeX&&DataGroupingSeriesComposition_isNumber(extremes.min)){hasGroupedData=true;series.isDirty=true;series.points=null;const xMin=extremes.min,xMax=extremes.max,groupIntervalFactor=ordinal&&xAxis.ordinal&&xAxis.ordinal.getGroupIntervalFactor(xMin,xMax,series)||1,interval=groupPixelWidth*(xMax-xMin)/plotSizeX*groupIntervalFactor,groupPositions=xAxis.getTimeTicks(Axis_DateTimeAxis.Additions.prototype.normalizeTimeTickInterval(interval,dataGroupingOptions.units||DataGrouping_DataGroupingDefaults.units),Math.min(xMin,xData[0]),Math.max(xMax,xData[xData.length-1]),xAxis.options.startOfWeek,processedXData,series.closestPointRange),groupedData=DataGroupingSeriesComposition_seriesProto.groupData.apply(series,[table,groupPositions,dataGroupingOptions.approximation]);let modified=groupedData.modified,groupedXData=modified.getColumn("x",true),gapSize=0;if(dataGroupingOptions?.smoothed&&modified.rowCount){dataGroupingOptions.firstAnchor="firstPoint";dataGroupingOptions.anchor="middle";dataGroupingOptions.lastAnchor="lastPoint";DataGroupingSeriesComposition_error(32,false,chart,{"dataGrouping.smoothed":"use dataGrouping.anchor"})}for(i=1;i<groupPositions.length;i++){if(!groupPositions.info.segmentStarts||groupPositions.info.segmentStarts.indexOf(i)===-1){gapSize=Math.max(groupPositions[i]-groupPositions[i-1],gapSize)}}currentDataGrouping=groupPositions.info;currentDataGrouping.gapSize=gapSize;series.closestPointRange=groupPositions.info.totalRange;series.groupMap=groupedData.groupMap;series.currentDataGrouping=currentDataGrouping;anchorPoints(series,groupedXData||[],xMax);if(reserveSpace&&groupedXData){adjustExtremes(xAxis,groupedXData)}if(dataGroupingOptions.groupAll){series.allGroupedTable=modified;croppedData=series.cropData(modified,xAxis.min||0,xAxis.max||0);modified=croppedData.modified;groupedXData=modified.getColumn("x");series.cropStart=croppedData.start}series.dataTable.modified=modified}else{series.groupMap=void 0;series.currentDataGrouping=void 0}series.hasGroupedData=hasGroupedData;series.preventGraphAnimation=(lastDataGrouping&&lastDataGrouping.totalRange)!==(currentDataGrouping&&currentDataGrouping.totalRange)}function DataGroupingSeriesComposition_compose(SeriesClass){const seriesProto=SeriesClass.prototype;if(!seriesProto.applyGrouping){const PointClass=SeriesClass.prototype.pointClass;DataGroupingSeriesComposition_addEvent(PointClass,"update",function(){if(this.dataGroup){DataGroupingSeriesComposition_error(24,false,this.series.chart);return false}});DataGroupingSeriesComposition_addEvent(SeriesClass,"afterSetOptions",onAfterSetOptions);DataGroupingSeriesComposition_addEvent(SeriesClass,"destroy",destroyGroupedData);DataGroupingSeriesComposition_extend(seriesProto,{applyGrouping:DataGroupingSeriesComposition_applyGrouping,destroyGroupedData:destroyGroupedData,generatePoints:generatePoints,getDGApproximation:getDGApproximation,groupData:groupData})}}function destroyGroupedData(){if(this.groupedData){this.groupedData.forEach(function(point,i){if(point){this.groupedData[i]=point.destroy?point.destroy():null}},this);this.groupedData.length=0;delete this.allGroupedTable}}function generatePoints(){baseGeneratePoints.apply(this);this.destroyGroupedData();this.groupedData=this.hasGroupedData?this.points:null}function getDGApproximation(){if(this.is("arearange")){return"range"}if(this.is("ohlc")){return"ohlc"}if(this.is("hlc")){return"hlc"}if(this.is("column")||this.options.cumulative){return"sum"}return"average"}function groupData(table,groupPositions,approximation){const xData=table.getColumn("x",true)||[],yData=table.getColumn("y",true),series=this,data=series.data,dataOptions=series.options&&series.options.data,groupedXData=[],modified=new Data_DataTableCore,groupMap=[],dataLength=table.rowCount,handleYData=!!yData,values=[],pointArrayMap=series.pointArrayMap,pointArrayMapLength=pointArrayMap&&pointArrayMap.length,extendedPointArrayMap=["x"].concat(pointArrayMap||["y"]),valueColumns=(pointArrayMap||["y"]).map(()=>[]),groupAll=this.options.dataGrouping&&this.options.dataGrouping.groupAll;let pointX,pointY,groupedY,pos=0,start=0;const approximationFn=typeof approximation==="function"?approximation:approximation&&DataGrouping_ApproximationRegistry[approximation]?DataGrouping_ApproximationRegistry[approximation]:DataGrouping_ApproximationRegistry[series.getDGApproximation&&series.getDGApproximation()||"average"];if(pointArrayMapLength){let len=pointArrayMap.length;while(len--){values.push([])}}else{values.push([])}const valuesLen=pointArrayMapLength||1;for(let i=0;i<=dataLength;i++){if(xData[i]<groupPositions[0]){continue}while(typeof groupPositions[pos+1]!=="undefined"&&xData[i]>=groupPositions[pos+1]||i===dataLength){pointX=groupPositions[pos];series.dataGroupInfo={start:groupAll?start:series.cropStart+start,length:values[0].length,groupStart:pointX};groupedY=approximationFn.apply(series,values);if(series.pointClass&&!DataGroupingSeriesComposition_defined(series.dataGroupInfo.options)){series.dataGroupInfo.options=DataGroupingSeriesComposition_merge(series.pointClass.prototype.optionsToObject.call({series:series},series.options.data[series.cropStart+start]));extendedPointArrayMap.forEach(function(key){delete series.dataGroupInfo.options[key]})}if(typeof groupedY!=="undefined"){groupedXData.push(pointX);const groupedValuesArr=DataGroupingSeriesComposition_splat(groupedY);for(let j=0;j<groupedValuesArr.length;j++){valueColumns[j].push(groupedValuesArr[j])}groupMap.push(series.dataGroupInfo)}start=i;for(let j=0;j<valuesLen;j++){values[j].length=0;values[j].hasNulls=false}pos+=1;if(i===dataLength){break}}if(i===dataLength){break}if(pointArrayMap){const index=groupAll?i:series.cropStart+i,point=data&&data[index]||series.pointClass.prototype.applyOptions.apply({series:series},[dataOptions[index]]);let val;for(let j=0;j<pointArrayMapLength;j++){val=point[pointArrayMap[j]];if(DataGroupingSeriesComposition_isNumber(val)){values[j].push(val)}else if(val===null){values[j].hasNulls=true}}}else{pointY=handleYData?yData[i]:null;if(DataGroupingSeriesComposition_isNumber(pointY)){values[0].push(pointY)}else if(pointY===null){values[0].hasNulls=true}}}const columns={x:groupedXData};(pointArrayMap||["y"]).forEach((key,i)=>{columns[key]=valueColumns[i]});modified.setColumns(columns);return{groupMap:groupMap,modified:modified}}function onAfterSetOptions(e){const options=e.options,type=this.type,plotOptions=this.chart.options.plotOptions,baseOptions=this.useCommonDataGrouping&&DataGrouping_DataGroupingDefaults.common,seriesSpecific=DataGrouping_DataGroupingDefaults.seriesSpecific;let defaultOptions=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default().defaultOptions.plotOptions[type].dataGrouping;if(plotOptions&&(seriesSpecific[type]||baseOptions)){const rangeSelector=this.chart.rangeSelector;if(!defaultOptions){defaultOptions=DataGroupingSeriesComposition_merge(DataGrouping_DataGroupingDefaults.common,seriesSpecific[type])}options.dataGrouping=DataGroupingSeriesComposition_merge(baseOptions,defaultOptions,plotOptions.series&&plotOptions.series.dataGrouping,plotOptions[type].dataGrouping,this.userOptions.dataGrouping,!options.isInternal&&rangeSelector&&DataGroupingSeriesComposition_isNumber(rangeSelector.selected)&&rangeSelector.buttonOptions[rangeSelector.selected].dataGrouping)}}function skipDataGrouping(series,force){return!(series.isCartesian&&!series.isDirty&&!series.xAxis.isDirty&&!series.yAxis.isDirty&&!force)}const DataGroupingSeriesComposition={compose:DataGroupingSeriesComposition_compose,groupData:groupData};const DataGrouping_DataGroupingSeriesComposition=DataGroupingSeriesComposition;const{format:DataGrouping_format}=highcharts_Templating_commonjs_highcharts_Templating_commonjs2_highcharts_Templating_root_Highcharts_Templating_default();const{composed:DataGrouping_composed}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const{addEvent:DataGrouping_addEvent,extend:DataGrouping_extend,isNumber:DataGrouping_isNumber,pick:DataGrouping_pick,pushUnique:DataGrouping_pushUnique}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();function DataGrouping_compose(AxisClass,SeriesClass,TooltipClass){DataGrouping_DataGroupingAxisComposition.compose(AxisClass);DataGrouping_DataGroupingSeriesComposition.compose(SeriesClass);if(TooltipClass&&DataGrouping_pushUnique(DataGrouping_composed,"DataGrouping")){DataGrouping_addEvent(TooltipClass,"headerFormatter",onTooltipHeaderFormatter)}}function onTooltipHeaderFormatter(e){const chart=this.chart,time=chart.time,point=e.point,series=point.series,options=series.options,tooltipOptions=series.tooltipOptions,dataGroupingOptions=options.dataGrouping,xAxis=series.xAxis;let xDateFormat=tooltipOptions.xDateFormat||"",xDateFormatEnd,currentDataGrouping,dateTimeLabelFormats,labelFormats,formattedKey,formatString=tooltipOptions[e.isFooter?"footerFormat":"headerFormat"];if(xAxis&&xAxis.options.type==="datetime"&&dataGroupingOptions&&DataGrouping_isNumber(point.key)){currentDataGrouping=series.currentDataGrouping;dateTimeLabelFormats=dataGroupingOptions.dateTimeLabelFormats||DataGrouping_DataGroupingDefaults.common.dateTimeLabelFormats;if(currentDataGrouping){labelFormats=dateTimeLabelFormats[currentDataGrouping.unitName];if(currentDataGrouping.count===1){xDateFormat=labelFormats[0]}else{xDateFormat=labelFormats[1];xDateFormatEnd=labelFormats[2]}}else if(!xDateFormat&&dateTimeLabelFormats&&xAxis.dateTime){xDateFormat=xAxis.dateTime.getXDateFormat(point.x,tooltipOptions.dateTimeLabelFormats)}const groupStart=DataGrouping_pick(series.groupMap?.[point.index].groupStart,point.key),groupEnd=groupStart+(currentDataGrouping?.totalRange||0)-1;formattedKey=time.dateFormat(xDateFormat,groupStart);if(xDateFormatEnd){formattedKey+=time.dateFormat(xDateFormatEnd,groupEnd)}if(series.chart.styledMode){formatString=this.styledModeFormat(formatString)}e.text=DataGrouping_format(formatString,{point:DataGrouping_extend(point,{key:formattedKey}),series:series},chart);e.preventDefault()}}const DataGroupingComposition={compose:DataGrouping_compose,groupData:DataGrouping_DataGroupingSeriesComposition.groupData};const DataGrouping=DataGroupingComposition;"";"";const datagrouping_src_G=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();datagrouping_src_G.dataGrouping=datagrouping_src_G.dataGrouping||{};datagrouping_src_G.dataGrouping.approximationDefaults=datagrouping_src_G.dataGrouping.approximationDefaults||DataGrouping_ApproximationDefaults;datagrouping_src_G.dataGrouping.approximations=datagrouping_src_G.dataGrouping.approximations||DataGrouping_ApproximationRegistry;DataGrouping.compose(datagrouping_src_G.Axis,datagrouping_src_G.Series,datagrouping_src_G.Tooltip);const datagrouping_src=null&&Highcharts;const{defined:NavigationBindingsUtilities_defined,isNumber:NavigationBindingsUtilities_isNumber,pick:NavigationBindingsUtilities_pick}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const annotationsFieldsTypes={backgroundColor:"string",borderColor:"string",borderRadius:"string",color:"string",fill:"string",fontSize:"string",labels:"string",name:"string",stroke:"string",title:"string"};function getAssignedAxis(coords){return coords.filter(coord=>{const extremes=coord.axis.getExtremes(),axisMin=extremes.min,axisMax=extremes.max,minPointOffset=NavigationBindingsUtilities_pick(coord.axis.minPointOffset,0);return NavigationBindingsUtilities_isNumber(axisMin)&&NavigationBindingsUtilities_isNumber(axisMax)&&coord.value>=axisMin-minPointOffset&&coord.value<=axisMax+minPointOffset&&!coord.axis.options.isInternal})[0]}function getFieldType(key,value){const predefinedType=annotationsFieldsTypes[key];let fieldType=typeof value;if(NavigationBindingsUtilities_defined(predefinedType)){fieldType=predefinedType}return{string:"text",number:"number",boolean:"checkbox"}[fieldType]}const NavigationBindingUtilities={annotationsFieldsTypes:annotationsFieldsTypes,getAssignedAxis:getAssignedAxis,getFieldType:getFieldType};const NavigationBindingsUtilities=NavigationBindingUtilities;const{addEvent:MouseWheelZoom_addEvent,isObject,pick:MouseWheelZoom_pick,defined:MouseWheelZoom_defined,merge:MouseWheelZoom_merge}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const{getAssignedAxis:MouseWheelZoom_getAssignedAxis}=NavigationBindingsUtilities;const composedClasses=[],MouseWheelZoom_defaultOptions={enabled:true,sensitivity:1.1};let wheelTimer;const optionsToObject=options=>{if(!isObject(options)){options={enabled:options??true}}return MouseWheelZoom_merge(MouseWheelZoom_defaultOptions,options)};const zoomBy=function(chart,howMuch,xAxis,yAxis,mouseX,mouseY,options){const type=MouseWheelZoom_pick(options.type,chart.zooming.type,"");let axes=[];if(type==="x"){axes=xAxis}else if(type==="y"){axes=yAxis}else if(type==="xy"){axes=chart.axes}const hasZoomed=chart.transform({axes:axes,to:{x:mouseX-5,y:mouseY-5,width:10,height:10},from:{x:mouseX-5*howMuch,y:mouseY-5*howMuch,width:10*howMuch,height:10*howMuch},trigger:"mousewheel"});if(hasZoomed){if(MouseWheelZoom_defined(wheelTimer)){clearTimeout(wheelTimer)}wheelTimer=setTimeout(()=>{chart.pointer?.drop()},400)}return hasZoomed};function onAfterGetContainer(){const wheelZoomOptions=optionsToObject(this.zooming.mouseWheel);if(wheelZoomOptions.enabled){MouseWheelZoom_addEvent(this.container,"wheel",e=>{e=this.pointer?.normalize(e)||e;const{pointer}=this,allowZoom=pointer&&!pointer.inClass(e.target,"highcharts-no-mousewheel");if(this.isInsidePlot(e.chartX-this.plotLeft,e.chartY-this.plotTop)&&allowZoom){const wheelSensitivity=wheelZoomOptions.sensitivity||1.1,delta=e.detail||(e.deltaY||0)/120,xAxisCoords=MouseWheelZoom_getAssignedAxis(pointer.getCoordinates(e).xAxis),yAxisCoords=MouseWheelZoom_getAssignedAxis(pointer.getCoordinates(e).yAxis);const hasZoomed=zoomBy(this,Math.pow(wheelSensitivity,delta),xAxisCoords?[xAxisCoords.axis]:this.xAxis,yAxisCoords?[yAxisCoords.axis]:this.yAxis,e.chartX,e.chartY,wheelZoomOptions);if(hasZoomed){e.preventDefault?.()}}})}}function MouseWheelZoom_compose(ChartClass){if(composedClasses.indexOf(ChartClass)===-1){composedClasses.push(ChartClass);MouseWheelZoom_addEvent(ChartClass,"afterGetContainer",onAfterGetContainer)}}const MouseWheelZoomComposition={compose:MouseWheelZoom_compose};const MouseWheelZoom=MouseWheelZoomComposition;"";const mouse_wheel_zoom_src_G=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();mouse_wheel_zoom_src_G.MouseWheelZoom=mouse_wheel_zoom_src_G.MouseWheelZoom||MouseWheelZoom;mouse_wheel_zoom_src_G.MouseWheelZoom.compose(mouse_wheel_zoom_src_G.Chart);const mouse_wheel_zoom_src=null&&Highcharts;const stock_src_G=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();stock_src_G.Navigator=stock_src_G.Navigator||Navigator_Navigator;stock_src_G.OrdinalAxis=stock_src_G.OrdinalAxis||Axis_OrdinalAxis;stock_src_G.RangeSelector=stock_src_G.RangeSelector||RangeSelector_RangeSelector;stock_src_G.Scrollbar=stock_src_G.Scrollbar||Scrollbar_Scrollbar;stock_src_G.stockChart=stock_src_G.stockChart||Chart_StockChart.stockChart;stock_src_G.StockChart=stock_src_G.StockChart||stock_src_G.stockChart;stock_src_G.extend(stock_src_G.StockChart,Chart_StockChart);Series_DataModifyComposition.compose(stock_src_G.Series,stock_src_G.Axis,stock_src_G.Point);Flags_FlagsSeries.compose(stock_src_G.Renderer);OHLC_OHLCSeries.compose(stock_src_G.Series);stock_src_G.Navigator.compose(stock_src_G.Chart,stock_src_G.Axis,stock_src_G.Series);stock_src_G.OrdinalAxis.compose(stock_src_G.Axis,stock_src_G.Series,stock_src_G.Chart);stock_src_G.RangeSelector.compose(stock_src_G.Axis,stock_src_G.Chart);stock_src_G.Scrollbar.compose(stock_src_G.Axis);stock_src_G.StockChart.compose(stock_src_G.Chart,stock_src_G.Axis,stock_src_G.Series,stock_src_G.SVGRenderer);const stock_src=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();__webpack_exports__=__webpack_exports__["default"];return __webpack_exports__})()});