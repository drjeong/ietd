(function webpackUniversalModuleDefinition(root,factory){if(typeof exports==="object"&&typeof module==="object")module.exports=factory(root["_Highcharts"]);else if(typeof define==="function"&&define.amd)define("highcharts/modules/drag-panes",["highcharts/highcharts"],function(amd1){return factory(amd1)});else if(typeof exports==="object")exports["highcharts/modules/drag-panes"]=factory(root["_Highcharts"]);else root["Highcharts"]=factory(root["Highcharts"])})(typeof window==="undefined"?this:window,__WEBPACK_EXTERNAL_MODULE__944__=>{return(()=>{"use strict";var __webpack_modules__={944:module=>{module.exports=__WEBPACK_EXTERNAL_MODULE__944__}};var __webpack_module_cache__={};function __webpack_require__(moduleId){var cachedModule=__webpack_module_cache__[moduleId];if(cachedModule!==undefined){return cachedModule.exports}var module=__webpack_module_cache__[moduleId]={exports:{}};__webpack_modules__[moduleId](module,module.exports,__webpack_require__);return module.exports}(()=>{__webpack_require__.n=module=>{var getter=module&&module.__esModule?()=>module["default"]:()=>module;__webpack_require__.d(getter,{a:getter});return getter}})();(()=>{__webpack_require__.d=(exports,definition)=>{for(var key in definition){if(__webpack_require__.o(definition,key)&&!__webpack_require__.o(exports,key)){Object.defineProperty(exports,key,{enumerable:true,get:definition[key]})}}}})();(()=>{__webpack_require__.o=(obj,prop)=>Object.prototype.hasOwnProperty.call(obj,prop)})();var __webpack_exports__={};__webpack_require__.d(__webpack_exports__,{default:()=>drag_panes_src});var highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_=__webpack_require__(944);var highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default=__webpack_require__.n(highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_);const AxisResizerDefaults={minLength:"10%",maxLength:"100%",resize:{controlledAxis:{next:[],prev:[]},enabled:false,cursor:"ns-resize",lineColor:"#cccccc",lineDashStyle:"Solid",lineWidth:4,x:0,y:0}};const DragPanes_AxisResizerDefaults=AxisResizerDefaults;const{addEvent,clamp,isNumber,relativeLength}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();class AxisResizer{constructor(axis){this.init(axis)}init(axis,update){this.axis=axis;this.options=axis.options.resize||{};this.render();if(!update){this.addMouseEvents()}}render(){const resizer=this,axis=resizer.axis,chart=axis.chart,options=resizer.options,x=options.x||0,y=options.y,pos=clamp(axis.top+axis.height+y,chart.plotTop,chart.plotTop+chart.plotHeight);let attr={};if(!chart.styledMode){attr={cursor:options.cursor,stroke:options.lineColor,"stroke-width":options.lineWidth,dashstyle:options.lineDashStyle}}resizer.lastPos=pos-y;if(!resizer.controlLine){resizer.controlLine=chart.renderer.path().addClass("highcharts-axis-resizer")}resizer.controlLine.add(axis.axisGroup);const lineWidth=chart.styledMode?resizer.controlLine.strokeWidth():options.lineWidth;attr.d=chart.renderer.crispLine([["M",axis.left+x,pos],["L",axis.left+axis.width+x,pos]],lineWidth);resizer.controlLine.attr(attr)}addMouseEvents(){const resizer=this,ctrlLineElem=resizer.controlLine.element,container=resizer.axis.chart.container,eventsToUnbind=[];let mouseMoveHandler,mouseUpHandler,mouseDownHandler;resizer.mouseMoveHandler=mouseMoveHandler=e=>resizer.onMouseMove(e);resizer.mouseUpHandler=mouseUpHandler=e=>resizer.onMouseUp(e);resizer.mouseDownHandler=mouseDownHandler=()=>resizer.onMouseDown();eventsToUnbind.push(addEvent(container,"mousemove",mouseMoveHandler),addEvent(container.ownerDocument,"mouseup",mouseUpHandler),addEvent(ctrlLineElem,"mousedown",mouseDownHandler),addEvent(container,"touchmove",mouseMoveHandler),addEvent(container.ownerDocument,"touchend",mouseUpHandler),addEvent(ctrlLineElem,"touchstart",mouseDownHandler));resizer.eventsToUnbind=eventsToUnbind}onMouseMove(e){if(!e.touches||e.touches[0].pageX!==0){const pointer=this.axis.chart.pointer;if(this.grabbed&&pointer){this.hasDragged=true;this.updateAxes(pointer.normalize(e).chartY-(this.options.y||0))}}}onMouseUp(e){const pointer=this.axis.chart.pointer;if(this.hasDragged&&pointer){this.updateAxes(pointer.normalize(e).chartY-(this.options.y||0))}this.grabbed=this.hasDragged=this.axis.chart.activeResizer=void 0}onMouseDown(){this.axis.chart.pointer?.reset(false,0);this.grabbed=this.axis.chart.activeResizer=true}updateAxes(chartY){const resizer=this,chart=resizer.axis.chart,axes=resizer.options.controlledAxis,nextAxes=axes.next.length===0?[chart.yAxis.indexOf(resizer.axis)+1]:axes.next,prevAxes=[resizer.axis].concat(axes.prev),axesConfigs=[],plotTop=chart.plotTop,plotHeight=chart.plotHeight,plotBottom=plotTop+plotHeight,calculatePercent=value=>value*100/plotHeight+"%",normalize=(val,min,max)=>Math.round(clamp(val,min,max));chartY=clamp(chartY,plotTop,plotBottom);let stopDrag=false,yDelta=chartY-resizer.lastPos;if(yDelta*yDelta<1){return}let isFirst=true;for(const axesGroup of[prevAxes,nextAxes]){for(const axisInfo of axesGroup){const axis=isNumber(axisInfo)?chart.yAxis[axisInfo]:isFirst?axisInfo:chart.get(axisInfo),axisOptions=axis&&axis.options,optionsToUpdate={};let height,top;if(!axisOptions||axisOptions.isInternal){isFirst=false;continue}top=axis.top;const minLength=Math.round(relativeLength(axisOptions.minLength||NaN,plotHeight)),maxLength=Math.round(relativeLength(axisOptions.maxLength||NaN,plotHeight));if(!isFirst){yDelta=chartY-resizer.lastPos;height=normalize(axis.len-yDelta,minLength,maxLength);top=axis.top+yDelta;if(top+height>plotBottom){const hDelta=plotBottom-height-top;chartY+=hDelta;top+=hDelta}if(top<plotTop){top=plotTop;if(top+height>plotBottom){height=plotHeight}}if(height===minLength){stopDrag=true}axesConfigs.push({axis:axis,options:{top:calculatePercent(top-plotTop),height:calculatePercent(height)}})}else{height=normalize(chartY-top,minLength,maxLength);if(height===maxLength){stopDrag=true}chartY=top+height;axesConfigs.push({axis:axis,options:{height:calculatePercent(height)}})}isFirst=false;optionsToUpdate.height=height}}if(!stopDrag){for(const config of axesConfigs){config.axis.update(config.options,false)}chart.redraw(false)}}destroy(){const resizer=this,axis=resizer.axis;delete axis.resizer;if(this.eventsToUnbind){this.eventsToUnbind.forEach(unbind=>unbind())}resizer.controlLine.destroy();for(const key of Object.keys(resizer)){resizer[key]=null}}}AxisResizer.resizerOptions=DragPanes_AxisResizerDefaults;const DragPanes_AxisResizer=AxisResizer;const{defaultOptions}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const{addEvent:DragPanes_addEvent,merge,wrap}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();function compose(AxisClass,PointerClass){if(!AxisClass.keepProps.includes("resizer")){merge(true,defaultOptions.yAxis,DragPanes_AxisResizer.resizerOptions);AxisClass.keepProps.push("resizer");DragPanes_addEvent(AxisClass,"afterRender",onAxisAfterRender);DragPanes_addEvent(AxisClass,"destroy",onAxisDestroy);wrap(PointerClass.prototype,"runPointActions",wrapPointerRunPointActions);wrap(PointerClass.prototype,"drag",wrapPointerDrag)}}function onAxisAfterRender(){const axis=this,resizer=axis.resizer,resizerOptions=axis.options.resize;if(resizerOptions){const enabled=resizerOptions.enabled!==false;if(resizer){if(enabled){resizer.init(axis,true)}else{resizer.destroy()}}else{if(enabled){axis.resizer=new DragPanes_AxisResizer(axis)}}}}function onAxisDestroy(e){const axis=this;if(!e.keepEvents&&axis.resizer){axis.resizer.destroy()}}function wrapPointerDrag(proceed){const pointer=this;if(!pointer.chart.activeResizer){proceed.apply(pointer,[].slice.call(arguments,1))}}function wrapPointerRunPointActions(proceed){const pointer=this;if(!pointer.chart.activeResizer){proceed.apply(pointer,[].slice.call(arguments,1))}}const DragPanes={compose:compose};const DragPanes_DragPanes=DragPanes;const G=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();G.AxisResizer=DragPanes_AxisResizer;DragPanes_DragPanes.compose(G.Axis,G.Pointer);const drag_panes_src=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();__webpack_exports__=__webpack_exports__["default"];return __webpack_exports__})()});