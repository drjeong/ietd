(function webpackUniversalModuleDefinition(root,factory){if(typeof exports==="object"&&typeof module==="object")module.exports=factory(root["_Highcharts"],root["_Highcharts"]["Axis"],root["_Highcharts"]["Color"],root["_Highcharts"]["LegendSymbol"],root["_Highcharts"]["SeriesRegistry"],root["_Highcharts"]["SVGElement"],root["_Highcharts"]["SVGRenderer"]);else if(typeof define==="function"&&define.amd)define("highcharts/modules/heatmap",["highcharts/highcharts"],function(amd1){return factory(amd1,amd1["Axis"],amd1["Color"],amd1["LegendSymbol"],amd1["SeriesRegistry"],amd1["SVGElement"],amd1["SVGRenderer"])});else if(typeof exports==="object")exports["highcharts/modules/heatmap"]=factory(root["_Highcharts"],root["_Highcharts"]["Axis"],root["_Highcharts"]["Color"],root["_Highcharts"]["LegendSymbol"],root["_Highcharts"]["SeriesRegistry"],root["_Highcharts"]["SVGElement"],root["_Highcharts"]["SVGRenderer"]);else root["Highcharts"]=factory(root["Highcharts"],root["Highcharts"]["Axis"],root["Highcharts"]["Color"],root["Highcharts"]["LegendSymbol"],root["Highcharts"]["SeriesRegistry"],root["Highcharts"]["SVGElement"],root["Highcharts"]["SVGRenderer"])})(typeof window==="undefined"?this:window,(__WEBPACK_EXTERNAL_MODULE__944__,__WEBPACK_EXTERNAL_MODULE__532__,__WEBPACK_EXTERNAL_MODULE__620__,__WEBPACK_EXTERNAL_MODULE__500__,__WEBPACK_EXTERNAL_MODULE__512__,__WEBPACK_EXTERNAL_MODULE__28__,__WEBPACK_EXTERNAL_MODULE__540__)=>{return(()=>{"use strict";var __webpack_modules__={532:module=>{module.exports=__WEBPACK_EXTERNAL_MODULE__532__},620:module=>{module.exports=__WEBPACK_EXTERNAL_MODULE__620__},500:module=>{module.exports=__WEBPACK_EXTERNAL_MODULE__500__},28:module=>{module.exports=__WEBPACK_EXTERNAL_MODULE__28__},540:module=>{module.exports=__WEBPACK_EXTERNAL_MODULE__540__},512:module=>{module.exports=__WEBPACK_EXTERNAL_MODULE__512__},944:module=>{module.exports=__WEBPACK_EXTERNAL_MODULE__944__}};var __webpack_module_cache__={};function __webpack_require__(moduleId){var cachedModule=__webpack_module_cache__[moduleId];if(cachedModule!==undefined){return cachedModule.exports}var module=__webpack_module_cache__[moduleId]={exports:{}};__webpack_modules__[moduleId](module,module.exports,__webpack_require__);return module.exports}(()=>{__webpack_require__.n=module=>{var getter=module&&module.__esModule?()=>module["default"]:()=>module;__webpack_require__.d(getter,{a:getter});return getter}})();(()=>{__webpack_require__.d=(exports,definition)=>{for(var key in definition){if(__webpack_require__.o(definition,key)&&!__webpack_require__.o(exports,key)){Object.defineProperty(exports,key,{enumerable:true,get:definition[key]})}}}})();(()=>{__webpack_require__.o=(obj,prop)=>Object.prototype.hasOwnProperty.call(obj,prop)})();var __webpack_exports__={};__webpack_require__.d(__webpack_exports__,{default:()=>heatmap_src});var highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_=__webpack_require__(944);var highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default=__webpack_require__.n(highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_);var highcharts_Axis_commonjs_highcharts_Axis_commonjs2_highcharts_Axis_root_Highcharts_Axis_=__webpack_require__(532);var highcharts_Axis_commonjs_highcharts_Axis_commonjs2_highcharts_Axis_root_Highcharts_Axis_default=__webpack_require__.n(highcharts_Axis_commonjs_highcharts_Axis_commonjs2_highcharts_Axis_root_Highcharts_Axis_);var highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_=__webpack_require__(620);var highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_default=__webpack_require__.n(highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_);const{parse:color}=highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_default();const{addEvent,extend,merge,pick,splat}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();var ColorAxisComposition;(function(ColorAxisComposition){let ColorAxisConstructor;function compose(ColorAxisClass,ChartClass,FxClass,LegendClass,SeriesClass){const chartProto=ChartClass.prototype,fxProto=FxClass.prototype,seriesProto=SeriesClass.prototype;if(!chartProto.collectionsWithUpdate.includes("colorAxis")){ColorAxisConstructor=ColorAxisClass;chartProto.collectionsWithUpdate.push("colorAxis");chartProto.collectionsWithInit.colorAxis=[chartProto.addColorAxis];addEvent(ChartClass,"afterCreateAxes",onChartAfterCreateAxes);wrapChartCreateAxis(ChartClass);fxProto.fillSetter=wrapFxFillSetter;fxProto.strokeSetter=wrapFxStrokeSetter;addEvent(LegendClass,"afterGetAllItems",onLegendAfterGetAllItems);addEvent(LegendClass,"afterColorizeItem",onLegendAfterColorizeItem);addEvent(LegendClass,"afterUpdate",onLegendAfterUpdate);extend(seriesProto,{optionalAxis:"colorAxis",translateColors:seriesTranslateColors});extend(seriesProto.pointClass.prototype,{setVisible:pointSetVisible});addEvent(SeriesClass,"afterTranslate",onSeriesAfterTranslate,{order:1});addEvent(SeriesClass,"bindAxes",onSeriesBindAxes)}}ColorAxisComposition.compose=compose;function onChartAfterCreateAxes(){const{userOptions}=this;this.colorAxis=[];if(userOptions.colorAxis){userOptions.colorAxis=splat(userOptions.colorAxis);userOptions.colorAxis.map(axisOptions=>new ColorAxisConstructor(this,axisOptions))}}function onLegendAfterGetAllItems(e){const colorAxes=this.chart.colorAxis||[],destroyItem=item=>{const i=e.allItems.indexOf(item);if(i!==-1){this.destroyItem(e.allItems[i]);e.allItems.splice(i,1)}};let colorAxisItems=[],options,i;colorAxes.forEach(function(colorAxis){options=colorAxis.options;if(options&&options.showInLegend){if(options.dataClasses&&options.visible){colorAxisItems=colorAxisItems.concat(colorAxis.getDataClassLegendSymbols())}else if(options.visible){colorAxisItems.push(colorAxis)}colorAxis.series.forEach(function(series){if(!series.options.showInLegend||options.dataClasses){if(series.options.legendType==="point"){series.points.forEach(function(point){destroyItem(point)})}else{destroyItem(series)}}})}});i=colorAxisItems.length;while(i--){e.allItems.unshift(colorAxisItems[i])}}function onLegendAfterColorizeItem(e){if(e.visible&&e.item.legendColor){e.item.legendItem.symbol.attr({fill:e.item.legendColor})}}function onLegendAfterUpdate(e){this.chart.colorAxis?.forEach(colorAxis=>{colorAxis.update({},e.redraw)})}function onSeriesAfterTranslate(){if(this.chart.colorAxis&&this.chart.colorAxis.length||this.colorAttribs){this.translateColors()}}function onSeriesBindAxes(){const axisTypes=this.axisTypes;if(!axisTypes){this.axisTypes=["colorAxis"]}else if(axisTypes.indexOf("colorAxis")===-1){axisTypes.push("colorAxis")}}function pointSetVisible(vis){const point=this,method=vis?"show":"hide";point.visible=point.options.visible=Boolean(vis);["graphic","dataLabel"].forEach(function(key){if(point[key]){point[key][method]()}});this.series.buildKDTree()}ColorAxisComposition.pointSetVisible=pointSetVisible;function seriesTranslateColors(){const series=this,points=this.getPointsCollection(),nullColor=this.options.nullColor,colorAxis=this.colorAxis,colorKey=this.colorKey;points.forEach(point=>{const value=point.getNestedProperty(colorKey),color=point.options.color||(point.isNull||point.value===null?nullColor:colorAxis&&typeof value!=="undefined"?colorAxis.toColor(value,point):point.color||series.color);if(color&&point.color!==color){point.color=color;if(series.options.legendType==="point"&&point.legendItem&&point.legendItem.label){series.chart.legend.colorizeItem(point,point.visible)}}})}function wrapChartCreateAxis(ChartClass){const superCreateAxis=ChartClass.prototype.createAxis;ChartClass.prototype.createAxis=function(type,options){const chart=this;if(type!=="colorAxis"){return superCreateAxis.apply(chart,arguments)}const axis=new ColorAxisConstructor(chart,merge(options.axis,{index:chart[type].length,isX:false}));chart.isDirtyLegend=true;chart.axes.forEach(axis=>{axis.series=[]});chart.series.forEach(series=>{series.bindAxes();series.isDirtyData=true});if(pick(options.redraw,true)){chart.redraw(options.animation)}return axis}}function wrapFxFillSetter(){this.elem.attr("fill",color(this.start).tweenTo(color(this.end),this.pos),void 0,true)}function wrapFxStrokeSetter(){this.elem.attr("stroke",color(this.start).tweenTo(color(this.end),this.pos),void 0,true)}})(ColorAxisComposition||(ColorAxisComposition={}));const Color_ColorAxisComposition=ColorAxisComposition;const colorAxisDefaults={lineWidth:0,minPadding:0,maxPadding:0,gridLineColor:"#ffffff",gridLineWidth:1,tickPixelInterval:72,startOnTick:true,endOnTick:true,offset:0,marker:{animation:{duration:50},width:.01,color:"#999999"},labels:{distance:8,overflow:"justify",rotation:0},minColor:"#e6e9ff",maxColor:"#0022ff",tickLength:5,showInLegend:true};const ColorAxisDefaults=colorAxisDefaults;const{parse:ColorAxisLike_color}=highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_default();const{merge:ColorAxisLike_merge}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();var ColorAxisLike;(function(ColorAxisLike){function initDataClasses(userOptions){const axis=this,chart=axis.chart,legendItem=axis.legendItem=axis.legendItem||{},options=axis.options,userDataClasses=userOptions.dataClasses||[];let dataClass,dataClasses,colorCount=chart.options.chart.colorCount,colorCounter=0,colors;axis.dataClasses=dataClasses=[];legendItem.labels=[];for(let i=0,iEnd=userDataClasses.length;i<iEnd;++i){dataClass=userDataClasses[i];dataClass=ColorAxisLike_merge(dataClass);dataClasses.push(dataClass);if(!chart.styledMode&&dataClass.color){continue}if(options.dataClassColor==="category"){if(!chart.styledMode){colors=chart.options.colors||[];colorCount=colors.length;dataClass.color=colors[colorCounter]}dataClass.colorIndex=colorCounter;colorCounter++;if(colorCounter===colorCount){colorCounter=0}}else{dataClass.color=ColorAxisLike_color(options.minColor).tweenTo(ColorAxisLike_color(options.maxColor),iEnd<2?.5:i/(iEnd-1))}}}ColorAxisLike.initDataClasses=initDataClasses;function initStops(){const axis=this,options=axis.options,stops=axis.stops=options.stops||[[0,options.minColor||""],[1,options.maxColor||""]];for(let i=0,iEnd=stops.length;i<iEnd;++i){stops[i].color=ColorAxisLike_color(stops[i][1])}}ColorAxisLike.initStops=initStops;function normalizedValue(value){const axis=this,max=axis.max||0,min=axis.min||0;if(axis.logarithmic){value=axis.logarithmic.log2lin(value)}return 1-(max-value)/(max-min||1)}ColorAxisLike.normalizedValue=normalizedValue;function toColor(value,point){const axis=this;const dataClasses=axis.dataClasses;const stops=axis.stops;let pos,from,to,color,dataClass,i;if(dataClasses){i=dataClasses.length;while(i--){dataClass=dataClasses[i];from=dataClass.from;to=dataClass.to;if((typeof from==="undefined"||value>=from)&&(typeof to==="undefined"||value<=to)){color=dataClass.color;if(point){point.dataClass=i;point.colorIndex=dataClass.colorIndex}break}}}else{pos=axis.normalizedValue(value);i=stops.length;while(i--){if(pos>stops[i][0]){break}}from=stops[i]||stops[i+1];to=stops[i+1]||from;pos=1-(to[0]-pos)/(to[0]-from[0]||1);color=from.color.tweenTo(to.color,pos)}return color}ColorAxisLike.toColor=toColor})(ColorAxisLike||(ColorAxisLike={}));const Color_ColorAxisLike=ColorAxisLike;var highcharts_LegendSymbol_commonjs_highcharts_LegendSymbol_commonjs2_highcharts_LegendSymbol_root_Highcharts_LegendSymbol_=__webpack_require__(500);var highcharts_LegendSymbol_commonjs_highcharts_LegendSymbol_commonjs2_highcharts_LegendSymbol_root_Highcharts_LegendSymbol_default=__webpack_require__.n(highcharts_LegendSymbol_commonjs_highcharts_LegendSymbol_commonjs2_highcharts_LegendSymbol_root_Highcharts_LegendSymbol_);var highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_=__webpack_require__(512);var highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default=__webpack_require__.n(highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_);const{defaultOptions}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const{series:Series}=highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default();const{defined,extend:ColorAxis_extend,fireEvent,isArray,isNumber,merge:ColorAxis_merge,pick:ColorAxis_pick,relativeLength}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();defaultOptions.colorAxis=ColorAxis_merge(defaultOptions.xAxis,ColorAxisDefaults);class ColorAxis extends highcharts_Axis_commonjs_highcharts_Axis_commonjs2_highcharts_Axis_root_Highcharts_Axis_default(){static compose(ChartClass,FxClass,LegendClass,SeriesClass){Color_ColorAxisComposition.compose(ColorAxis,ChartClass,FxClass,LegendClass,SeriesClass)}constructor(chart,userOptions){super(chart,userOptions);this.coll="colorAxis";this.visible=true;this.init(chart,userOptions)}init(chart,userOptions){const axis=this;const legend=chart.options.legend||{},horiz=userOptions.layout?userOptions.layout!=="vertical":legend.layout!=="vertical";axis.side=userOptions.side||horiz?2:1;axis.reversed=userOptions.reversed||!horiz;axis.opposite=!horiz;super.init(chart,userOptions,"colorAxis");this.userOptions=userOptions;if(isArray(chart.userOptions.colorAxis)){chart.userOptions.colorAxis[this.index]=userOptions}if(userOptions.dataClasses){axis.initDataClasses(userOptions)}axis.initStops();axis.horiz=horiz;axis.zoomEnabled=false}hasData(){return!!(this.tickPositions||[]).length}setTickPositions(){if(!this.dataClasses){return super.setTickPositions()}}setOptions(userOptions){const options=ColorAxis_merge(defaultOptions.colorAxis,userOptions,{showEmpty:false,title:null,visible:this.chart.options.legend.enabled&&userOptions.visible!==false});super.setOptions(options);this.options.crosshair=this.options.marker}setAxisSize(){const axis=this,chart=axis.chart,symbol=axis.legendItem?.symbol;let{width,height}=axis.getSize();if(symbol){this.left=+symbol.attr("x");this.top=+symbol.attr("y");this.width=width=+symbol.attr("width");this.height=height=+symbol.attr("height");this.right=chart.chartWidth-this.left-width;this.bottom=chart.chartHeight-this.top-height;this.pos=this.horiz?this.left:this.top}this.len=(this.horiz?width:height)||ColorAxis.defaultLegendLength}getOffset(){const axis=this;const group=axis.legendItem?.group;const sideOffset=axis.chart.axisOffset[axis.side];if(group){axis.axisParent=group;super.getOffset();const legend=this.chart.legend;legend.allItems.forEach(function(item){if(item instanceof ColorAxis){item.drawLegendSymbol(legend,item)}});legend.render();this.chart.getMargins(true);if(!this.chart.series.some(series=>series.isDrilling)){axis.isDirty=true}if(!axis.added){axis.added=true;axis.labelLeft=0;axis.labelRight=axis.width}axis.chart.axisOffset[axis.side]=sideOffset}}setLegendColor(){const axis=this;const horiz=axis.horiz;const reversed=axis.reversed;const one=reversed?1:0;const zero=reversed?0:1;const grad=horiz?[one,0,zero,0]:[0,zero,0,one];axis.legendColor={linearGradient:{x1:grad[0],y1:grad[1],x2:grad[2],y2:grad[3]},stops:axis.stops}}drawLegendSymbol(legend,item){const axis=this,legendItem=item.legendItem||{},padding=legend.padding,legendOptions=legend.options,labelOptions=axis.options.labels,itemDistance=ColorAxis_pick(legendOptions.itemDistance,10),horiz=axis.horiz,{width,height}=axis.getSize(),labelPadding=ColorAxis_pick(legendOptions.labelPadding,horiz?16:30);this.setLegendColor();if(!legendItem.symbol){legendItem.symbol=this.chart.renderer.symbol("roundedRect").attr({r:legendOptions.symbolRadius??3,zIndex:1}).add(legendItem.group)}legendItem.symbol.attr({x:0,y:(legend.baseline||0)-11,width:width,height:height});legendItem.labelWidth=width+padding+(horiz?itemDistance:ColorAxis_pick(labelOptions.x,labelOptions.distance)+(this.maxLabelLength||0));legendItem.labelHeight=height+padding+(horiz?labelPadding:0)}setState(state){this.series.forEach(function(series){series.setState(state)})}setVisible(){}getSeriesExtremes(){const axis=this;const series=axis.series;let colorValArray,colorKey,calculatedExtremes,cSeries,i=series.length;this.dataMin=Infinity;this.dataMax=-Infinity;while(i--){cSeries=series[i];colorKey=cSeries.colorKey=ColorAxis_pick(cSeries.options.colorKey,cSeries.colorKey,cSeries.pointValKey,cSeries.zoneAxis,"y");calculatedExtremes=cSeries[colorKey+"Min"]&&cSeries[colorKey+"Max"];for(const key of[colorKey,"value","y"]){colorValArray=cSeries.getColumn(key);if(colorValArray.length){break}}if(calculatedExtremes){cSeries.minColorValue=cSeries[colorKey+"Min"];cSeries.maxColorValue=cSeries[colorKey+"Max"]}else{const cExtremes=Series.prototype.getExtremes.call(cSeries,colorValArray);cSeries.minColorValue=cExtremes.dataMin;cSeries.maxColorValue=cExtremes.dataMax}if(defined(cSeries.minColorValue)&&defined(cSeries.maxColorValue)){this.dataMin=Math.min(this.dataMin,cSeries.minColorValue);this.dataMax=Math.max(this.dataMax,cSeries.maxColorValue)}if(!calculatedExtremes){Series.prototype.applyExtremes.call(cSeries)}}}drawCrosshair(e,point){const axis=this,legendItem=axis.legendItem||{},plotX=point&&point.plotX,plotY=point&&point.plotY,axisPos=axis.pos,axisLen=axis.len;let crossPos;if(point){crossPos=axis.toPixels(point.getNestedProperty(point.series.colorKey));if(crossPos<axisPos){crossPos=axisPos-2}else if(crossPos>axisPos+axisLen){crossPos=axisPos+axisLen+2}point.plotX=crossPos;point.plotY=axis.len-crossPos;super.drawCrosshair(e,point);point.plotX=plotX;point.plotY=plotY;if(axis.cross&&!axis.cross.addedToColorAxis&&legendItem.group){axis.cross.addClass("highcharts-coloraxis-marker").add(legendItem.group);axis.cross.addedToColorAxis=true;if(!axis.chart.styledMode&&typeof axis.crosshair==="object"){axis.cross.attr({fill:axis.crosshair.color})}}}}getPlotLinePath(options){const axis=this,left=axis.left,pos=options.translatedValue,top=axis.top;return isNumber(pos)?axis.horiz?[["M",pos-4,top-6],["L",pos+4,top-6],["L",pos,top],["Z"]]:[["M",left,pos],["L",left-6,pos+6],["L",left-6,pos-6],["Z"]]:super.getPlotLinePath(options)}update(newOptions,redraw){const axis=this,chart=axis.chart,legend=chart.legend;this.series.forEach(series=>{series.isDirtyData=true});if(newOptions.dataClasses&&legend.allItems||axis.dataClasses){axis.destroyItems()}super.update(newOptions,redraw);if(axis.legendItem&&axis.legendItem.label){axis.setLegendColor();legend.colorizeItem(this,true)}}destroyItems(){const axis=this,chart=axis.chart,legendItem=axis.legendItem||{};if(legendItem.label){chart.legend.destroyItem(axis)}else if(legendItem.labels){for(const item of legendItem.labels){chart.legend.destroyItem(item)}}chart.isDirtyLegend=true}destroy(){this.chart.isDirtyLegend=true;this.destroyItems();super.destroy(...[].slice.call(arguments))}remove(redraw){this.destroyItems();super.remove(redraw)}getDataClassLegendSymbols(){const axis=this,chart=axis.chart,legendItems=axis.legendItem&&axis.legendItem.labels||[],legendOptions=chart.options.legend,valueDecimals=ColorAxis_pick(legendOptions.valueDecimals,-1),valueSuffix=ColorAxis_pick(legendOptions.valueSuffix,"");const getPointsInDataClass=i=>axis.series.reduce((points,s)=>{points.push(...s.points.filter(point=>point.dataClass===i));return points},[]);let name;if(!legendItems.length){axis.dataClasses.forEach((dataClass,i)=>{const from=dataClass.from,to=dataClass.to,{numberFormatter}=chart;let vis=true;name="";if(typeof from==="undefined"){name="< "}else if(typeof to==="undefined"){name="> "}if(typeof from!=="undefined"){name+=numberFormatter(from,valueDecimals)+valueSuffix}if(typeof from!=="undefined"&&typeof to!=="undefined"){name+=" - "}if(typeof to!=="undefined"){name+=numberFormatter(to,valueDecimals)+valueSuffix}legendItems.push(ColorAxis_extend({chart:chart,name:name,options:{},drawLegendSymbol:highcharts_LegendSymbol_commonjs_highcharts_LegendSymbol_commonjs2_highcharts_LegendSymbol_root_Highcharts_LegendSymbol_default().rectangle,visible:true,isDataClass:true,setState:state=>{for(const point of getPointsInDataClass(i)){point.setState(state)}},setVisible:function(){this.visible=vis=axis.visible=!vis;const affectedSeries=[];for(const point of getPointsInDataClass(i)){point.setVisible(vis);point.hiddenInDataClass=!vis;if(affectedSeries.indexOf(point.series)===-1){affectedSeries.push(point.series)}}chart.legend.colorizeItem(this,vis);affectedSeries.forEach(series=>{fireEvent(series,"afterDataClassLegendClick")})}},dataClass))})}return legendItems}getSize(){const axis=this,{chart,horiz}=axis,{height:colorAxisHeight,width:colorAxisWidth}=axis.options,{legend:legendOptions}=chart.options,width=ColorAxis_pick(defined(colorAxisWidth)?relativeLength(colorAxisWidth,chart.chartWidth):void 0,legendOptions?.symbolWidth,horiz?ColorAxis.defaultLegendLength:12),height=ColorAxis_pick(defined(colorAxisHeight)?relativeLength(colorAxisHeight,chart.chartHeight):void 0,legendOptions?.symbolHeight,horiz?12:ColorAxis.defaultLegendLength);return{width:width,height:height}}}ColorAxis.defaultLegendLength=200;ColorAxis.keepProps=["legendItem"];ColorAxis_extend(ColorAxis.prototype,Color_ColorAxisLike);Array.prototype.push.apply(highcharts_Axis_commonjs_highcharts_Axis_commonjs2_highcharts_Axis_root_Highcharts_Axis_default().keepProps,ColorAxis.keepProps);const Color_ColorAxis=ColorAxis;"";const G=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();G.ColorAxis=G.ColorAxis||Color_ColorAxis;G.ColorAxis.compose(G.Chart,G.Fx,G.Legend,G.Series);const coloraxis_src=null&&Highcharts;var highcharts_SVGElement_commonjs_highcharts_SVGElement_commonjs2_highcharts_SVGElement_root_Highcharts_SVGElement_=__webpack_require__(28);var highcharts_SVGElement_commonjs_highcharts_SVGElement_commonjs2_highcharts_SVGElement_root_Highcharts_SVGElement_default=__webpack_require__.n(highcharts_SVGElement_commonjs_highcharts_SVGElement_commonjs2_highcharts_SVGElement_root_Highcharts_SVGElement_);const{column:{prototype:columnProto}}=highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default().seriesTypes;const{addEvent:ColorMapComposition_addEvent,defined:ColorMapComposition_defined}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();var ColorMapComposition;(function(ColorMapComposition){ColorMapComposition.pointMembers={dataLabelOnNull:true,moveToTopOnHover:true,isValid:pointIsValid};ColorMapComposition.seriesMembers={colorKey:"value",axisTypes:["xAxis","yAxis","colorAxis"],parallelArrays:["x","y","value"],pointArrayMap:["value"],trackerGroups:["group","markerGroup","dataLabelsGroup"],colorAttribs:seriesColorAttribs,pointAttribs:columnProto.pointAttribs};function compose(SeriesClass){const PointClass=SeriesClass.prototype.pointClass;ColorMapComposition_addEvent(PointClass,"afterSetState",onPointAfterSetState);return SeriesClass}ColorMapComposition.compose=compose;function onPointAfterSetState(e){const point=this,series=point.series,renderer=series.chart.renderer;if(point.moveToTopOnHover&&point.graphic){if(!series.stateMarkerGraphic){series.stateMarkerGraphic=new(highcharts_SVGElement_commonjs_highcharts_SVGElement_commonjs2_highcharts_SVGElement_root_Highcharts_SVGElement_default())(renderer,"use").css({pointerEvents:"none"}).add(point.graphic.parentGroup)}if(e?.state==="hover"){point.graphic.attr({id:this.id});series.stateMarkerGraphic.attr({href:`${renderer.url}#${this.id}`,visibility:"visible"})}else{series.stateMarkerGraphic.attr({href:""})}}}function pointIsValid(){return this.value!==null&&this.value!==Infinity&&this.value!==-Infinity&&(this.value===void 0||!isNaN(this.value))}function seriesColorAttribs(point){const ret={};if(ColorMapComposition_defined(point.color)&&(!point.state||point.state==="normal")){ret[this.colorProp||"fill"]=point.color}return ret}})(ColorMapComposition||(ColorMapComposition={}));const Series_ColorMapComposition=ColorMapComposition;const{scatter:{prototype:{pointClass:ScatterPoint}}}=highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default().seriesTypes;const{clamp,defined:HeatmapPoint_defined,extend:HeatmapPoint_extend,pick:HeatmapPoint_pick}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();class HeatmapPoint extends ScatterPoint{applyOptions(options,x){if(this.isNull||this.value===null){delete this.color}super.applyOptions(options,x);this.formatPrefix=this.isNull||this.value===null?"null":"point";return this}getCellAttributes(){const point=this,series=point.series,seriesOptions=series.options,xPad=(seriesOptions.colsize||1)/2,yPad=(seriesOptions.rowsize||1)/2,xAxis=series.xAxis,yAxis=series.yAxis,markerOptions=point.options.marker||series.options.marker,pointPlacement=series.pointPlacementToXValue(),pointPadding=HeatmapPoint_pick(point.pointPadding,seriesOptions.pointPadding,0),cellAttr={x1:clamp(Math.round(xAxis.len-xAxis.translate(point.x-xPad,false,true,false,true,-pointPlacement)),-xAxis.len,2*xAxis.len),x2:clamp(Math.round(xAxis.len-xAxis.translate(point.x+xPad,false,true,false,true,-pointPlacement)),-xAxis.len,2*xAxis.len),y1:clamp(Math.round(yAxis.translate(point.y-yPad,false,true,false,true)),-yAxis.len,2*yAxis.len),y2:clamp(Math.round(yAxis.translate(point.y+yPad,false,true,false,true)),-yAxis.len,2*yAxis.len)};const dimensions=[["width","x"],["height","y"]];for(const dimension of dimensions){const prop=dimension[0],direction=dimension[1];let start=direction+"1",end=direction+"2";const side=Math.abs(cellAttr[start]-cellAttr[end]),borderWidth=markerOptions&&markerOptions.lineWidth||0,plotPos=Math.abs(cellAttr[start]+cellAttr[end])/2,widthOrHeight=markerOptions&&markerOptions[prop];if(HeatmapPoint_defined(widthOrHeight)&&widthOrHeight<side){const halfCellSize=widthOrHeight/2+borderWidth/2;cellAttr[start]=plotPos-halfCellSize;cellAttr[end]=plotPos+halfCellSize}if(pointPadding){if(direction==="x"&&xAxis.reversed||direction==="y"&&!yAxis.reversed){start=end;end=direction+"1"}cellAttr[start]+=pointPadding;cellAttr[end]-=pointPadding}}return cellAttr}haloPath(size){if(!size){return[]}const{x=0,y=0,width=0,height=0}=this.shapeArgs||{};return[["M",x-size,y-size],["L",x-size,y+height+size],["L",x+width+size,y+height+size],["L",x+width+size,y-size],["Z"]]}isValid(){return this.value!==Infinity&&this.value!==-Infinity}}HeatmapPoint_extend(HeatmapPoint.prototype,{dataLabelOnNull:true,moveToTopOnHover:true,ttBelow:false});const Heatmap_HeatmapPoint=HeatmapPoint;const{isNumber:HeatmapSeriesDefaults_isNumber}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const HeatmapSeriesDefaults={animation:false,borderRadius:0,borderWidth:0,interpolation:false,nullColor:"#f7f7f7",dataLabels:{formatter:function(){const{numberFormatter}=this.series.chart;const{value}=this.point;return HeatmapSeriesDefaults_isNumber(value)?numberFormatter(value,-1):""},inside:true,verticalAlign:"middle",crop:false,overflow:"allow",padding:0},marker:{symbol:"rect",radius:0,lineColor:void 0,states:{hover:{lineWidthPlus:0},select:{}}},clip:true,pointRange:null,tooltip:{pointFormat:"{point.x}, {point.y}: {point.value}<br/>"},states:{hover:{halo:false,brightness:.2}},legendSymbol:"rectangle"};"";const Heatmap_HeatmapSeriesDefaults=HeatmapSeriesDefaults;var highcharts_SVGRenderer_commonjs_highcharts_SVGRenderer_commonjs2_highcharts_SVGRenderer_root_Highcharts_SVGRenderer_=__webpack_require__(540);var highcharts_SVGRenderer_commonjs_highcharts_SVGRenderer_commonjs2_highcharts_SVGRenderer_root_Highcharts_SVGRenderer_default=__webpack_require__.n(highcharts_SVGRenderer_commonjs_highcharts_SVGRenderer_commonjs2_highcharts_SVGRenderer_root_Highcharts_SVGRenderer_);const{doc}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const{defined:InterpolationUtilities_defined,pick:InterpolationUtilities_pick}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();function colorFromPoint(value,point){const colorAxis=point.series.colorAxis;if(colorAxis){const rgba=colorAxis.toColor(value||0,point).split(")")[0].split("(")[1].split(",").map(s=>InterpolationUtilities_pick(parseFloat(s),parseInt(s,10)));rgba[3]=InterpolationUtilities_pick(rgba[3],1)*255;if(!InterpolationUtilities_defined(value)||!point.visible){rgba[3]=0}return rgba}return[0,0,0,0]}function getContext(series){const{canvas,context}=series;if(canvas&&context){context.clearRect(0,0,canvas.width,canvas.height)}else{series.canvas=doc.createElement("canvas");series.context=series.canvas.getContext("2d",{willReadFrequently:true})||void 0;return series.context}return context}const InterpolationUtilities={colorFromPoint:colorFromPoint,getContext:getContext};const Series_InterpolationUtilities=InterpolationUtilities;const{series:HeatmapSeries_Series,seriesTypes:{column:ColumnSeries,scatter:ScatterSeries}}=highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default();const{prototype:{symbols}}=highcharts_SVGRenderer_commonjs_highcharts_SVGRenderer_commonjs2_highcharts_SVGRenderer_root_Highcharts_SVGRenderer_default();const{addEvent:HeatmapSeries_addEvent,extend:HeatmapSeries_extend,fireEvent:HeatmapSeries_fireEvent,isNumber:HeatmapSeries_isNumber,merge:HeatmapSeries_merge,pick:HeatmapSeries_pick}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const{colorFromPoint:HeatmapSeries_colorFromPoint,getContext:HeatmapSeries_getContext}=Series_InterpolationUtilities;class HeatmapSeries extends ScatterSeries{constructor(){super(...arguments);this.valueMax=NaN;this.valueMin=NaN;this.isDirtyCanvas=true}drawPoints(){const series=this,seriesOptions=series.options,interpolation=seriesOptions.interpolation,seriesMarkerOptions=seriesOptions.marker||{};if(interpolation){const{image,chart,xAxis,yAxis}=series,{reversed:xRev=false,len:width}=xAxis,{reversed:yRev=false,len:height}=yAxis,dimensions={width:width,height:height};if(!image||series.isDirtyData||series.isDirtyCanvas){const ctx=HeatmapSeries_getContext(series),{canvas,options:{colsize=1,rowsize=1},points,points:{length}}=series,pointsLen=length-1,colorAxis=chart.colorAxis&&chart.colorAxis[0];if(canvas&&ctx&&colorAxis){const{min:xMin,max:xMax}=xAxis.getExtremes(),{min:yMin,max:yMax}=yAxis.getExtremes(),xDelta=xMax-xMin,yDelta=yMax-yMin,imgMultiple=8,lastX=Math.round(imgMultiple*(xDelta/colsize/imgMultiple)),lastY=Math.round(imgMultiple*(yDelta/rowsize/imgMultiple)),[transformX,transformY]=[[lastX,lastX/xDelta,xRev,"ceil"],[lastY,lastY/yDelta,!yRev,"floor"]].map(([last,scale,rev,rounding])=>rev?v=>Math[rounding](last-scale*v):v=>Math[rounding](scale*v)),canvasWidth=canvas.width=lastX+1,canvasHeight=canvas.height=lastY+1,canvasArea=canvasWidth*canvasHeight,pixelToPointScale=pointsLen/canvasArea,pixelData=new Uint8ClampedArray(canvasArea*4),pointInPixels=(x,y)=>Math.ceil(canvasWidth*transformY(y-yMin)+transformX(x-xMin))*4;series.buildKDTree();for(let i=0;i<canvasArea;i++){const point=points[Math.ceil(pixelToPointScale*i)],{x,y}=point;pixelData.set(HeatmapSeries_colorFromPoint(point.value,point),pointInPixels(x,y))}ctx.putImageData(new ImageData(pixelData,canvasWidth),0,0);if(image){image.attr({...dimensions,href:canvas.toDataURL("image/png",1)})}else{series.directTouch=false;series.image=chart.renderer.image(canvas.toDataURL("image/png",1)).attr(dimensions).add(series.group)}}series.isDirtyCanvas=false}else if(image.width!==width||image.height!==height){image.attr(dimensions)}}else if(seriesMarkerOptions.enabled||series._hasPointMarkers){HeatmapSeries_Series.prototype.drawPoints.call(series);series.points.forEach(point=>{if(point.graphic){point.graphic[series.chart.styledMode?"css":"animate"](series.colorAttribs(point));if(point.value===null){point.graphic.addClass("highcharts-null-point")}}})}}getExtremes(){const{dataMin,dataMax}=HeatmapSeries_Series.prototype.getExtremes.call(this,this.getColumn("value"));if(HeatmapSeries_isNumber(dataMin)){this.valueMin=dataMin}if(HeatmapSeries_isNumber(dataMax)){this.valueMax=dataMax}return HeatmapSeries_Series.prototype.getExtremes.call(this)}getValidPoints(points,insideOnly){return HeatmapSeries_Series.prototype.getValidPoints.call(this,points,insideOnly,true)}hasData(){return!!this.dataTable.rowCount}init(){super.init.apply(this,arguments);const options=this.options;options.pointRange=HeatmapSeries_pick(options.pointRange,options.colsize||1);this.yAxis.axisPointRange=options.rowsize||1;symbols.ellipse=symbols.circle;if(options.marker&&HeatmapSeries_isNumber(options.borderRadius)){options.marker.r=options.borderRadius}}markerAttribs(point,state){const shapeArgs=point.shapeArgs||{};if(point.hasImage){return{x:point.plotX,y:point.plotY}}if(state&&state!=="normal"){const pointMarkerOptions=point.options.marker||{},seriesMarkerOptions=this.options.marker||{},seriesStateOptions=seriesMarkerOptions.states&&seriesMarkerOptions.states[state]||{},pointStateOptions=pointMarkerOptions.states&&pointMarkerOptions.states[state]||{};const width=(pointStateOptions.width||seriesStateOptions.width||shapeArgs.width||0)+(pointStateOptions.widthPlus||seriesStateOptions.widthPlus||0);const height=(pointStateOptions.height||seriesStateOptions.height||shapeArgs.height||0)+(pointStateOptions.heightPlus||seriesStateOptions.heightPlus||0);const x=(shapeArgs.x||0)+((shapeArgs.width||0)-width)/2,y=(shapeArgs.y||0)+((shapeArgs.height||0)-height)/2;return{x:x,y:y,width:width,height:height}}return shapeArgs}pointAttribs(point,state){const series=this,attr=HeatmapSeries_Series.prototype.pointAttribs.call(series,point,state),seriesOptions=series.options||{},plotOptions=series.chart.options.plotOptions||{},seriesPlotOptions=plotOptions.series||{},heatmapPlotOptions=plotOptions.heatmap||{},borderColor=point&&point.options.borderColor||seriesOptions.borderColor||heatmapPlotOptions.borderColor||seriesPlotOptions.borderColor,borderWidth=point&&point.options.borderWidth||seriesOptions.borderWidth||heatmapPlotOptions.borderWidth||seriesPlotOptions.borderWidth||attr["stroke-width"];attr.stroke=point&&point.marker&&point.marker.lineColor||seriesOptions.marker&&seriesOptions.marker.lineColor||borderColor||this.color;attr["stroke-width"]=borderWidth;if(state&&state!=="normal"){const stateOptions=HeatmapSeries_merge(seriesOptions.states&&seriesOptions.states[state],seriesOptions.marker&&seriesOptions.marker.states&&seriesOptions.marker.states[state],point&&point.options.states&&point.options.states[state]||{});attr.fill=stateOptions.color||highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_default().parse(attr.fill).brighten(stateOptions.brightness||0).get();attr.stroke=stateOptions.lineColor||attr.stroke}return attr}translate(){const series=this,options=series.options,{borderRadius,marker}=options,symbol=marker&&marker.symbol||"rect",shape=symbols[symbol]?symbol:"rect",hasRegularShape=["circle","square"].indexOf(shape)!==-1;series.generatePoints();for(const point of series.points){const cellAttr=point.getCellAttributes();let x=Math.min(cellAttr.x1,cellAttr.x2),y=Math.min(cellAttr.y1,cellAttr.y2),width=Math.max(Math.abs(cellAttr.x2-cellAttr.x1),0),height=Math.max(Math.abs(cellAttr.y2-cellAttr.y1),0);point.hasImage=(point.marker&&point.marker.symbol||symbol||"").indexOf("url")===0;if(hasRegularShape){const sizeDiff=Math.abs(width-height);x=Math.min(cellAttr.x1,cellAttr.x2)+(width<height?0:sizeDiff/2);y=Math.min(cellAttr.y1,cellAttr.y2)+(width<height?sizeDiff/2:0);width=height=Math.min(width,height)}if(point.hasImage){point.marker={width:width,height:height}}point.plotX=point.clientX=(cellAttr.x1+cellAttr.x2)/2;point.plotY=(cellAttr.y1+cellAttr.y2)/2;point.shapeType="path";point.shapeArgs=HeatmapSeries_merge(true,{x:x,y:y,width:width,height:height},{d:symbols[shape](x,y,width,height,{r:HeatmapSeries_isNumber(borderRadius)?borderRadius:0})})}HeatmapSeries_fireEvent(series,"afterTranslate")}}HeatmapSeries.defaultOptions=HeatmapSeries_merge(ScatterSeries.defaultOptions,Heatmap_HeatmapSeriesDefaults);HeatmapSeries_addEvent(HeatmapSeries,"afterDataClassLegendClick",function(){this.isDirtyCanvas=true;this.drawPoints()});HeatmapSeries_extend(HeatmapSeries.prototype,{axisTypes:Series_ColorMapComposition.seriesMembers.axisTypes,colorKey:Series_ColorMapComposition.seriesMembers.colorKey,directTouch:true,getExtremesFromAll:true,keysAffectYAxis:["y"],parallelArrays:Series_ColorMapComposition.seriesMembers.parallelArrays,pointArrayMap:["y","value"],pointClass:Heatmap_HeatmapPoint,specialGroup:"group",trackerGroups:Series_ColorMapComposition.seriesMembers.trackerGroups,alignDataLabel:ColumnSeries.prototype.alignDataLabel,colorAttribs:Series_ColorMapComposition.seriesMembers.colorAttribs,getSymbol:HeatmapSeries_Series.prototype.getSymbol});Series_ColorMapComposition.compose(HeatmapSeries);highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default().registerSeriesType("heatmap",HeatmapSeries);const Heatmap_HeatmapSeries=null&&HeatmapSeries;"";const heatmap_src=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();__webpack_exports__=__webpack_exports__["default"];return __webpack_exports__})()});