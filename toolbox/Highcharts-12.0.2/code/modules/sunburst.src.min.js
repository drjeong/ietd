(function webpackUniversalModuleDefinition(root,factory){if(typeof exports==="object"&&typeof module==="object")module.exports=factory(root["_Highcharts"],root["_Highcharts"]["Templating"],root["_Highcharts"]["Color"],root["_Highcharts"]["SeriesRegistry"],root["_Highcharts"]["SVGElement"],root["_Highcharts"]["Series"]);else if(typeof define==="function"&&define.amd)define("highcharts/modules/sunburst",["highcharts/highcharts"],function(amd1){return factory(amd1,amd1["Templating"],amd1["Color"],amd1["SeriesRegistry"],amd1["SVGElement"],amd1["Series"])});else if(typeof exports==="object")exports["highcharts/modules/sunburst"]=factory(root["_Highcharts"],root["_Highcharts"]["Templating"],root["_Highcharts"]["Color"],root["_Highcharts"]["SeriesRegistry"],root["_Highcharts"]["SVGElement"],root["_Highcharts"]["Series"]);else root["Highcharts"]=factory(root["Highcharts"],root["Highcharts"]["Templating"],root["Highcharts"]["Color"],root["Highcharts"]["SeriesRegistry"],root["Highcharts"]["SVGElement"],root["Highcharts"]["Series"])})(typeof window==="undefined"?this:window,(__WEBPACK_EXTERNAL_MODULE__944__,__WEBPACK_EXTERNAL_MODULE__984__,__WEBPACK_EXTERNAL_MODULE__620__,__WEBPACK_EXTERNAL_MODULE__512__,__WEBPACK_EXTERNAL_MODULE__28__,__WEBPACK_EXTERNAL_MODULE__820__)=>{return(()=>{"use strict";var __webpack_modules__={620:module=>{module.exports=__WEBPACK_EXTERNAL_MODULE__620__},28:module=>{module.exports=__WEBPACK_EXTERNAL_MODULE__28__},820:module=>{module.exports=__WEBPACK_EXTERNAL_MODULE__820__},512:module=>{module.exports=__WEBPACK_EXTERNAL_MODULE__512__},984:module=>{module.exports=__WEBPACK_EXTERNAL_MODULE__984__},944:module=>{module.exports=__WEBPACK_EXTERNAL_MODULE__944__}};var __webpack_module_cache__={};function __webpack_require__(moduleId){var cachedModule=__webpack_module_cache__[moduleId];if(cachedModule!==undefined){return cachedModule.exports}var module=__webpack_module_cache__[moduleId]={exports:{}};__webpack_modules__[moduleId](module,module.exports,__webpack_require__);return module.exports}(()=>{__webpack_require__.n=module=>{var getter=module&&module.__esModule?()=>module["default"]:()=>module;__webpack_require__.d(getter,{a:getter});return getter}})();(()=>{__webpack_require__.d=(exports,definition)=>{for(var key in definition){if(__webpack_require__.o(definition,key)&&!__webpack_require__.o(exports,key)){Object.defineProperty(exports,key,{enumerable:true,get:definition[key]})}}}})();(()=>{__webpack_require__.o=(obj,prop)=>Object.prototype.hasOwnProperty.call(obj,prop)})();var __webpack_exports__={};__webpack_require__.d(__webpack_exports__,{default:()=>sunburst_src});var highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_=__webpack_require__(944);var highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default=__webpack_require__.n(highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_);const lang={mainBreadcrumb:"Main"};const options={buttonTheme:{fill:"none",height:18,padding:2,"stroke-width":0,zIndex:7,states:{select:{fill:"none"}},style:{color:"#334eff"}},buttonSpacing:5,floating:false,format:void 0,relativeTo:"plotBox",rtl:false,position:{align:"left",verticalAlign:"top",x:0,y:void 0},separator:{text:"/",style:{color:"#666666",fontSize:"0.8em"}},showFullPath:true,style:{},useHTML:false,zIndex:7};const BreadcrumbsDefaults={lang:lang,options:options};const Breadcrumbs_BreadcrumbsDefaults=BreadcrumbsDefaults;var highcharts_Templating_commonjs_highcharts_Templating_commonjs2_highcharts_Templating_root_Highcharts_Templating_=__webpack_require__(984);var highcharts_Templating_commonjs_highcharts_Templating_commonjs2_highcharts_Templating_root_Highcharts_Templating_default=__webpack_require__.n(highcharts_Templating_commonjs_highcharts_Templating_commonjs2_highcharts_Templating_root_Highcharts_Templating_);const{format}=highcharts_Templating_commonjs_highcharts_Templating_commonjs2_highcharts_Templating_root_Highcharts_Templating_default();const{composed}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const{addEvent,defined,extend,fireEvent,isString,merge,objectEach,pick,pushUnique}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();function onChartAfterShowResetZoom(){const chart=this;if(chart.breadcrumbs){const bbox=chart.resetZoomButton&&chart.resetZoomButton.getBBox(),breadcrumbsOptions=chart.breadcrumbs.options;if(bbox&&breadcrumbsOptions.position.align==="right"&&breadcrumbsOptions.relativeTo==="plotBox"){chart.breadcrumbs.alignBreadcrumbsGroup(-bbox.width-breadcrumbsOptions.buttonSpacing)}}}function onChartDestroy(){if(this.breadcrumbs){this.breadcrumbs.destroy();this.breadcrumbs=void 0}}function onChartGetMargins(){const breadcrumbs=this.breadcrumbs;if(breadcrumbs&&!breadcrumbs.options.floating&&breadcrumbs.level){const breadcrumbsOptions=breadcrumbs.options,buttonTheme=breadcrumbsOptions.buttonTheme,breadcrumbsHeight=(buttonTheme.height||0)+2*(buttonTheme.padding||0)+breadcrumbsOptions.buttonSpacing,verticalAlign=breadcrumbsOptions.position.verticalAlign;if(verticalAlign==="bottom"){this.marginBottom=(this.marginBottom||0)+breadcrumbsHeight;breadcrumbs.yOffset=breadcrumbsHeight}else if(verticalAlign!=="middle"){this.plotTop+=breadcrumbsHeight;breadcrumbs.yOffset=-breadcrumbsHeight}else{breadcrumbs.yOffset=void 0}}}function onChartRedraw(){this.breadcrumbs&&this.breadcrumbs.redraw()}function onChartSelection(event){if(event.resetSelection===true&&this.breadcrumbs){this.breadcrumbs.alignBreadcrumbsGroup()}}class Breadcrumbs{static compose(ChartClass,highchartsDefaultOptions){if(pushUnique(composed,"Breadcrumbs")){addEvent(ChartClass,"destroy",onChartDestroy);addEvent(ChartClass,"afterShowResetZoom",onChartAfterShowResetZoom);addEvent(ChartClass,"getMargins",onChartGetMargins);addEvent(ChartClass,"redraw",onChartRedraw);addEvent(ChartClass,"selection",onChartSelection);extend(highchartsDefaultOptions.lang,Breadcrumbs_BreadcrumbsDefaults.lang)}}constructor(chart,userOptions){this.elementList={};this.isDirty=true;this.level=0;this.list=[];const chartOptions=merge(chart.options.drilldown&&chart.options.drilldown.drillUpButton,Breadcrumbs.defaultOptions,chart.options.navigation&&chart.options.navigation.breadcrumbs,userOptions);this.chart=chart;this.options=chartOptions||{}}updateProperties(list){this.setList(list);this.setLevel();this.isDirty=true}setList(list){this.list=list}setLevel(){this.level=this.list.length&&this.list.length-1}getLevel(){return this.level}getButtonText(breadcrumb){const breadcrumbs=this,chart=breadcrumbs.chart,breadcrumbsOptions=breadcrumbs.options,lang=chart.options.lang,textFormat=pick(breadcrumbsOptions.format,breadcrumbsOptions.showFullPath?"{level.name}":"← {level.name}"),defaultText=lang&&pick(lang.drillUpText,lang.mainBreadcrumb);let returnText=breadcrumbsOptions.formatter&&breadcrumbsOptions.formatter(breadcrumb)||format(textFormat,{level:breadcrumb.levelOptions},chart)||"";if((isString(returnText)&&!returnText.length||returnText==="← ")&&defined(defaultText)){returnText=!breadcrumbsOptions.showFullPath?"← "+defaultText:defaultText}return returnText}redraw(){if(this.isDirty){this.render()}if(this.group){this.group.align()}this.isDirty=false}render(){const breadcrumbs=this,chart=breadcrumbs.chart,breadcrumbsOptions=breadcrumbs.options;if(!breadcrumbs.group&&breadcrumbsOptions){breadcrumbs.group=chart.renderer.g("breadcrumbs-group").addClass("highcharts-no-tooltip highcharts-breadcrumbs").attr({zIndex:breadcrumbsOptions.zIndex}).add()}if(breadcrumbsOptions.showFullPath){this.renderFullPathButtons()}else{this.renderSingleButton()}this.alignBreadcrumbsGroup()}renderFullPathButtons(){this.destroySingleButton();this.resetElementListState();this.updateListElements();this.destroyListElements()}renderSingleButton(){const breadcrumbs=this,chart=breadcrumbs.chart,list=breadcrumbs.list,breadcrumbsOptions=breadcrumbs.options,buttonSpacing=breadcrumbsOptions.buttonSpacing;this.destroyListElements();const posX=breadcrumbs.group?breadcrumbs.group.getBBox().width:buttonSpacing,posY=buttonSpacing;const previousBreadcrumb=list[list.length-2];if(!chart.drillUpButton&&this.level>0){chart.drillUpButton=breadcrumbs.renderButton(previousBreadcrumb,posX,posY)}else if(chart.drillUpButton){if(this.level>0){this.updateSingleButton()}else{this.destroySingleButton()}}}alignBreadcrumbsGroup(xOffset){const breadcrumbs=this;if(breadcrumbs.group){const breadcrumbsOptions=breadcrumbs.options,buttonTheme=breadcrumbsOptions.buttonTheme,positionOptions=breadcrumbsOptions.position,alignTo=breadcrumbsOptions.relativeTo==="chart"||breadcrumbsOptions.relativeTo==="spacingBox"?void 0:"plotBox",bBox=breadcrumbs.group.getBBox(),additionalSpace=2*(buttonTheme.padding||0)+breadcrumbsOptions.buttonSpacing;positionOptions.width=bBox.width+additionalSpace;positionOptions.height=bBox.height+additionalSpace;const newPositions=merge(positionOptions);if(xOffset){newPositions.x+=xOffset}if(breadcrumbs.options.rtl){newPositions.x+=positionOptions.width}newPositions.y=pick(newPositions.y,this.yOffset,0);breadcrumbs.group.align(newPositions,true,alignTo)}}renderButton(breadcrumb,posX,posY){const breadcrumbs=this,chart=this.chart,breadcrumbsOptions=breadcrumbs.options,buttonTheme=merge(breadcrumbsOptions.buttonTheme);const button=chart.renderer.button(breadcrumbs.getButtonText(breadcrumb),posX,posY,function(e){const buttonEvents=breadcrumbsOptions.events&&breadcrumbsOptions.events.click;let callDefaultEvent;if(buttonEvents){callDefaultEvent=buttonEvents.call(breadcrumbs,e,breadcrumb)}if(callDefaultEvent!==false){if(!breadcrumbsOptions.showFullPath){e.newLevel=breadcrumbs.level-1}else{e.newLevel=breadcrumb.level}fireEvent(breadcrumbs,"up",e)}},buttonTheme).addClass("highcharts-breadcrumbs-button").add(breadcrumbs.group);if(!chart.styledMode){button.attr(breadcrumbsOptions.style)}return button}renderSeparator(posX,posY){const breadcrumbs=this,chart=this.chart,breadcrumbsOptions=breadcrumbs.options,separatorOptions=breadcrumbsOptions.separator;const separator=chart.renderer.label(separatorOptions.text,posX,posY,void 0,void 0,void 0,false).addClass("highcharts-breadcrumbs-separator").add(breadcrumbs.group);if(!chart.styledMode){separator.css(separatorOptions.style)}return separator}update(options){merge(true,this.options,options);this.destroy();this.isDirty=true}updateSingleButton(){const chart=this.chart,currentBreadcrumb=this.list[this.level-1];if(chart.drillUpButton){chart.drillUpButton.attr({text:this.getButtonText(currentBreadcrumb)})}}destroy(){this.destroySingleButton();this.destroyListElements(true);if(this.group){this.group.destroy()}this.group=void 0}destroyListElements(force){const elementList=this.elementList;objectEach(elementList,(element,level)=>{if(force||!elementList[level].updated){element=elementList[level];element.button&&element.button.destroy();element.separator&&element.separator.destroy();delete element.button;delete element.separator;delete elementList[level]}});if(force){this.elementList={}}}destroySingleButton(){if(this.chart.drillUpButton){this.chart.drillUpButton.destroy();this.chart.drillUpButton=void 0}}resetElementListState(){objectEach(this.elementList,element=>{element.updated=false})}updateListElements(){const breadcrumbs=this,elementList=breadcrumbs.elementList,buttonSpacing=breadcrumbs.options.buttonSpacing,posY=buttonSpacing,list=breadcrumbs.list,rtl=breadcrumbs.options.rtl,rtlFactor=rtl?-1:1,updateXPosition=function(element,spacing){return rtlFactor*element.getBBox().width+rtlFactor*spacing},adjustToRTL=function(element,posX,posY){element.translate(posX-element.getBBox().width,posY)};let posX=breadcrumbs.group?updateXPosition(breadcrumbs.group,buttonSpacing):buttonSpacing,currentBreadcrumb,breadcrumb;for(let i=0,iEnd=list.length;i<iEnd;++i){const isLast=i===iEnd-1;let button,separator;breadcrumb=list[i];if(elementList[breadcrumb.level]){currentBreadcrumb=elementList[breadcrumb.level];button=currentBreadcrumb.button;if(!currentBreadcrumb.separator&&!isLast){posX+=rtlFactor*buttonSpacing;currentBreadcrumb.separator=breadcrumbs.renderSeparator(posX,posY);if(rtl){adjustToRTL(currentBreadcrumb.separator,posX,posY)}posX+=updateXPosition(currentBreadcrumb.separator,buttonSpacing)}else if(currentBreadcrumb.separator&&isLast){currentBreadcrumb.separator.destroy();delete currentBreadcrumb.separator}elementList[breadcrumb.level].updated=true}else{button=breadcrumbs.renderButton(breadcrumb,posX,posY);if(rtl){adjustToRTL(button,posX,posY)}posX+=updateXPosition(button,buttonSpacing);if(!isLast){separator=breadcrumbs.renderSeparator(posX,posY);if(rtl){adjustToRTL(separator,posX,posY)}posX+=updateXPosition(separator,buttonSpacing)}elementList[breadcrumb.level]={button:button,separator:separator,updated:true}}if(button){button.setState(isLast?2:0)}}}}Breadcrumbs.defaultOptions=Breadcrumbs_BreadcrumbsDefaults.options;const Breadcrumbs_Breadcrumbs=Breadcrumbs;"";var highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_=__webpack_require__(620);var highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_default=__webpack_require__.n(highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_);var highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_=__webpack_require__(512);var highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default=__webpack_require__.n(highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_);var highcharts_SVGElement_commonjs_highcharts_SVGElement_commonjs2_highcharts_SVGElement_root_Highcharts_SVGElement_=__webpack_require__(28);var highcharts_SVGElement_commonjs_highcharts_SVGElement_commonjs2_highcharts_SVGElement_root_Highcharts_SVGElement_default=__webpack_require__.n(highcharts_SVGElement_commonjs_highcharts_SVGElement_commonjs2_highcharts_SVGElement_root_Highcharts_SVGElement_);const{column:{prototype:columnProto}}=highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default().seriesTypes;const{addEvent:ColorMapComposition_addEvent,defined:ColorMapComposition_defined}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();var ColorMapComposition;(function(ColorMapComposition){ColorMapComposition.pointMembers={dataLabelOnNull:true,moveToTopOnHover:true,isValid:pointIsValid};ColorMapComposition.seriesMembers={colorKey:"value",axisTypes:["xAxis","yAxis","colorAxis"],parallelArrays:["x","y","value"],pointArrayMap:["value"],trackerGroups:["group","markerGroup","dataLabelsGroup"],colorAttribs:seriesColorAttribs,pointAttribs:columnProto.pointAttribs};function compose(SeriesClass){const PointClass=SeriesClass.prototype.pointClass;ColorMapComposition_addEvent(PointClass,"afterSetState",onPointAfterSetState);return SeriesClass}ColorMapComposition.compose=compose;function onPointAfterSetState(e){const point=this,series=point.series,renderer=series.chart.renderer;if(point.moveToTopOnHover&&point.graphic){if(!series.stateMarkerGraphic){series.stateMarkerGraphic=new(highcharts_SVGElement_commonjs_highcharts_SVGElement_commonjs2_highcharts_SVGElement_root_Highcharts_SVGElement_default())(renderer,"use").css({pointerEvents:"none"}).add(point.graphic.parentGroup)}if(e?.state==="hover"){point.graphic.attr({id:this.id});series.stateMarkerGraphic.attr({href:`${renderer.url}#${this.id}`,visibility:"visible"})}else{series.stateMarkerGraphic.attr({href:""})}}}function pointIsValid(){return this.value!==null&&this.value!==Infinity&&this.value!==-Infinity&&(this.value===void 0||!isNaN(this.value))}function seriesColorAttribs(point){const ret={};if(ColorMapComposition_defined(point.color)&&(!point.state||point.state==="normal")){ret[this.colorProp||"fill"]=point.color}return ret}})(ColorMapComposition||(ColorMapComposition={}));const Series_ColorMapComposition=ColorMapComposition;class TreemapAlgorithmGroup{constructor(h,w,d,p){this.height=h;this.width=w;this.plot=p;this.direction=d;this.startDirection=d;this.total=0;this.nW=0;this.lW=0;this.nH=0;this.lH=0;this.elArr=[];this.lP={total:0,lH:0,nH:0,lW:0,nW:0,nR:0,lR:0,aspectRatio:function(w,h){return Math.max(w/h,h/w)}}}addElement(el){this.lP.total=this.elArr[this.elArr.length-1];this.total=this.total+el;if(this.direction===0){this.lW=this.nW;this.lP.lH=this.lP.total/this.lW;this.lP.lR=this.lP.aspectRatio(this.lW,this.lP.lH);this.nW=this.total/this.height;this.lP.nH=this.lP.total/this.nW;this.lP.nR=this.lP.aspectRatio(this.nW,this.lP.nH)}else{this.lH=this.nH;this.lP.lW=this.lP.total/this.lH;this.lP.lR=this.lP.aspectRatio(this.lP.lW,this.lH);this.nH=this.total/this.width;this.lP.nW=this.lP.total/this.nH;this.lP.nR=this.lP.aspectRatio(this.lP.nW,this.nH)}this.elArr.push(el)}reset(){this.nW=0;this.lW=0;this.elArr=[];this.total=0}}const Treemap_TreemapAlgorithmGroup=TreemapAlgorithmGroup;class TreemapNode{constructor(){this.childrenTotal=0;this.visible=false}init(id,i,children,height,level,series,parent){this.id=id;this.i=i;this.children=children;this.height=height;this.level=level;this.series=series;this.parent=parent;return this}}const Treemap_TreemapNode=TreemapNode;function draw(point,params){const{animatableAttribs,onComplete,css,renderer}=params;const animation=point.series&&point.series.chart.hasRendered?void 0:point.series&&point.series.options.animation;let graphic=point.graphic;params.attribs={...params.attribs,class:point.getClassName()}||{};if(point.shouldDraw()){if(!graphic){if(params.shapeType==="text"){graphic=renderer.text()}else if(params.shapeType==="image"){graphic=renderer.image(params.imageUrl||"").attr(params.shapeArgs||{})}else{graphic=renderer[params.shapeType](params.shapeArgs||{})}point.graphic=graphic;graphic.add(params.group)}if(css){graphic.css(css)}graphic.attr(params.attribs).animate(animatableAttribs,params.isNew?false:animation,onComplete)}else if(graphic){const destroy=()=>{point.graphic=graphic=graphic&&graphic.destroy();if(typeof onComplete==="function"){onComplete()}};if(Object.keys(animatableAttribs).length){graphic.animate(animatableAttribs,void 0,()=>destroy())}else{destroy()}}}const DrawPointUtilities={draw:draw};const Series_DrawPointUtilities=DrawPointUtilities;const{pie:{prototype:{pointClass:PiePoint}},scatter:{prototype:{pointClass:ScatterPoint}}}=highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default().seriesTypes;const{extend:TreemapPoint_extend,isNumber,pick:TreemapPoint_pick}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();class TreemapPoint extends ScatterPoint{constructor(){super(...arguments);this.shapeType="rect"}draw(params){Series_DrawPointUtilities.draw(this,params)}getClassName(){const series=this.series,options=series.options;let className=super.getClassName();if(this.node.level<=series.nodeMap[series.rootNode].level&&this.node.children.length){className+=" highcharts-above-level"}else if(!this.node.isLeaf&&!TreemapPoint_pick(options.interactByLeaf,!options.allowTraversingTree)){className+=" highcharts-internal-node-interactive"}else if(!this.node.isLeaf){className+=" highcharts-internal-node"}return className}isValid(){return Boolean(this.id||isNumber(this.value))}setState(state){super.setState.apply(this,arguments);if(this.graphic){this.graphic.attr({zIndex:state==="hover"?1:0})}}shouldDraw(){return isNumber(this.plotY)&&this.y!==null}}TreemapPoint_extend(TreemapPoint.prototype,{setVisible:PiePoint.prototype.setVisible});const Treemap_TreemapPoint=TreemapPoint;const{isString:TreemapSeriesDefaults_isString}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const TreemapSeriesDefaults={allowTraversingTree:false,animationLimit:250,borderRadius:0,showInLegend:false,marker:void 0,colorByPoint:false,dataLabels:{defer:false,enabled:true,formatter:function(){const point=this&&this.point?this.point:{},name=TreemapSeriesDefaults_isString(point.name)?point.name:"";return name},inside:true,verticalAlign:"middle"},tooltip:{headerFormat:"",pointFormat:"<b>{point.name}</b>: {point.value}<br/>"},ignoreHiddenPoint:true,layoutAlgorithm:"sliceAndDice",layoutStartingDirection:"vertical",alternateStartingDirection:false,levelIsConstant:true,traverseUpButton:{position:{align:"right",x:-10,y:10}},borderColor:"#e6e6e6",borderWidth:1,colorKey:"colorValue",opacity:.15,states:{hover:{borderColor:"#999999",brightness:highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default().seriesTypes.heatmap?0:.1,halo:false,opacity:.75,shadow:false}},legendSymbol:"rectangle",traverseToLeaf:false};"";const Treemap_TreemapSeriesDefaults=TreemapSeriesDefaults;var TreemapUtilities;(function(TreemapUtilities){function recursive(item,func,context){const next=func.call(context||this,item);if(next!==false){recursive(next,func,context)}}TreemapUtilities.recursive=recursive})(TreemapUtilities||(TreemapUtilities={}));const Treemap_TreemapUtilities=TreemapUtilities;const{extend:TreeUtilities_extend,isArray,isNumber:TreeUtilities_isNumber,isObject,merge:TreeUtilities_merge,pick:TreeUtilities_pick,relativeLength}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();function getColor(node,options){const index=options.index,mapOptionsToLevel=options.mapOptionsToLevel,parentColor=options.parentColor,parentColorIndex=options.parentColorIndex,series=options.series,colors=options.colors,siblings=options.siblings,points=series.points,chartOptionsChart=series.chart.options.chart;let getColorByPoint,point,level,colorByPoint,colorIndexByPoint,color,colorIndex;const variateColor=color=>{const colorVariation=level&&level.colorVariation;if(colorVariation&&colorVariation.key==="brightness"&&index&&siblings){return highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_default().parse(color).brighten(colorVariation.to*(index/siblings)).get()}return color};if(node){point=points[node.i];level=mapOptionsToLevel[node.level]||{};getColorByPoint=point&&level.colorByPoint;if(getColorByPoint){colorIndexByPoint=point.index%(colors?colors.length:chartOptionsChart.colorCount);colorByPoint=colors&&colors[colorIndexByPoint]}if(!series.chart.styledMode){color=TreeUtilities_pick(point&&point.options.color,level&&level.color,colorByPoint,parentColor&&variateColor(parentColor),series.color)}colorIndex=TreeUtilities_pick(point&&point.options.colorIndex,level&&level.colorIndex,colorIndexByPoint,parentColorIndex,options.colorIndex)}return{color:color,colorIndex:colorIndex}}function getLevelOptions(params){const result={};let defaults,converted,i,from,to,levels;if(isObject(params)){from=TreeUtilities_isNumber(params.from)?params.from:1;levels=params.levels;converted={};defaults=isObject(params.defaults)?params.defaults:{};if(isArray(levels)){converted=levels.reduce((obj,item)=>{let level,levelIsConstant,options;if(isObject(item)&&TreeUtilities_isNumber(item.level)){options=TreeUtilities_merge({},item);levelIsConstant=TreeUtilities_pick(options.levelIsConstant,defaults.levelIsConstant);delete options.levelIsConstant;delete options.level;level=item.level+(levelIsConstant?0:from-1);if(isObject(obj[level])){TreeUtilities_merge(true,obj[level],options)}else{obj[level]=options}}return obj},{})}to=TreeUtilities_isNumber(params.to)?params.to:1;for(i=0;i<=to;i++){result[i]=TreeUtilities_merge({},defaults,isObject(converted[i])?converted[i]:{})}}return result}function setTreeValues(tree,options){const before=options.before,idRoot=options.idRoot,mapIdToNode=options.mapIdToNode,nodeRoot=mapIdToNode[idRoot],levelIsConstant=options.levelIsConstant!==false,points=options.points,point=points[tree.i],optionsPoint=point&&point.options||{},children=[];let childrenTotal=0;tree.levelDynamic=tree.level-(levelIsConstant?0:nodeRoot.level);tree.name=TreeUtilities_pick(point&&point.name,"");tree.visible=idRoot===tree.id||options.visible===true;if(typeof before==="function"){tree=before(tree,options)}tree.children.forEach((child,i)=>{const newOptions=TreeUtilities_extend({},options);TreeUtilities_extend(newOptions,{index:i,siblings:tree.children.length,visible:tree.visible});child=setTreeValues(child,newOptions);children.push(child);if(child.visible){childrenTotal+=child.val}});const value=TreeUtilities_pick(optionsPoint.value,childrenTotal);tree.visible=value>=0&&(childrenTotal>0||tree.visible);tree.children=children;tree.childrenTotal=childrenTotal;tree.isLeaf=tree.visible&&!childrenTotal;tree.val=value;return tree}function updateRootId(series){let rootId,options;if(isObject(series)){options=isObject(series.options)?series.options:{};rootId=TreeUtilities_pick(series.rootNode,options.rootId,"");if(isObject(series.userOptions)){series.userOptions.rootId=rootId}series.rootNode=rootId}return rootId}function getNodeWidth(series,columnCount){const{chart,options}=series,{nodeDistance=0,nodeWidth=0}=options,{plotSizeX=1}=chart;if(nodeWidth==="auto"){if(typeof nodeDistance==="string"&&/%$/.test(nodeDistance)){const fraction=parseFloat(nodeDistance)/100,total=columnCount+fraction*(columnCount-1);return plotSizeX/total}const nDistance=Number(nodeDistance);return(plotSizeX+nDistance)/(columnCount||1)-nDistance}return relativeLength(nodeWidth,plotSizeX)}const TreeUtilities={getColor:getColor,getLevelOptions:getLevelOptions,getNodeWidth:getNodeWidth,setTreeValues:setTreeValues,updateRootId:updateRootId};const Series_TreeUtilities=TreeUtilities;const{parse:color}=highcharts_Color_commonjs_highcharts_Color_commonjs2_highcharts_Color_root_Highcharts_Color_default();const{composed:TreemapSeries_composed,noop}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const{column:ColumnSeries,scatter:ScatterSeries}=highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default().seriesTypes;const{getColor:TreemapSeries_getColor,getLevelOptions:TreemapSeries_getLevelOptions,updateRootId:TreemapSeries_updateRootId}=Series_TreeUtilities;const{addEvent:TreemapSeries_addEvent,correctFloat,crisp,defined:TreemapSeries_defined,error,extend:TreemapSeries_extend,fireEvent:TreemapSeries_fireEvent,isArray:TreemapSeries_isArray,isObject:TreemapSeries_isObject,isString:TreemapSeries_isString,merge:TreemapSeries_merge,pick:TreemapSeries_pick,pushUnique:TreemapSeries_pushUnique,stableSort}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const axisMax=100;let treemapAxisDefaultValues=false;function onSeriesAfterBindAxes(){const series=this,xAxis=series.xAxis,yAxis=series.yAxis;let treeAxis;if(xAxis&&yAxis){if(series.is("treemap")){treeAxis={endOnTick:false,gridLineWidth:0,lineWidth:0,min:0,minPadding:0,max:axisMax,maxPadding:0,startOnTick:false,title:void 0,tickPositions:[]};TreemapSeries_extend(yAxis.options,treeAxis);TreemapSeries_extend(xAxis.options,treeAxis);treemapAxisDefaultValues=true}else if(treemapAxisDefaultValues){yAxis.setOptions(yAxis.userOptions);xAxis.setOptions(xAxis.userOptions);treemapAxisDefaultValues=false}}}class TreemapSeries extends ScatterSeries{static compose(SeriesClass){if(TreemapSeries_pushUnique(TreemapSeries_composed,"TreemapSeries")){TreemapSeries_addEvent(SeriesClass,"afterBindAxes",onSeriesAfterBindAxes)}}algorithmCalcPoints(directionChange,last,group,childrenArea){const plot=group.plot,end=group.elArr.length-1;let pX,pY,pW,pH,gW=group.lW,gH=group.lH,keep,i=0;if(last){gW=group.nW;gH=group.nH}else{keep=group.elArr[end]}for(const p of group.elArr){if(last||i<end){if(group.direction===0){pX=plot.x;pY=plot.y;pW=gW;pH=p/pW}else{pX=plot.x;pY=plot.y;pH=gH;pW=p/pH}childrenArea.push({x:pX,y:pY,width:pW,height:correctFloat(pH)});if(group.direction===0){plot.y=plot.y+pH}else{plot.x=plot.x+pW}}i=i+1}group.reset();if(group.direction===0){group.width=group.width-gW}else{group.height=group.height-gH}plot.y=plot.parent.y+(plot.parent.height-group.height);plot.x=plot.parent.x+(plot.parent.width-group.width);if(directionChange){group.direction=1-group.direction}if(!last){group.addElement(keep)}}algorithmFill(directionChange,parent,children){const childrenArea=[];let pTot,direction=parent.direction,x=parent.x,y=parent.y,width=parent.width,height=parent.height,pX,pY,pW,pH;for(const child of children){pTot=parent.width*parent.height*(child.val/parent.val);pX=x;pY=y;if(direction===0){pH=height;pW=pTot/pH;width=width-pW;x=x+pW}else{pW=width;pH=pTot/pW;height=height-pH;y=y+pH}childrenArea.push({x:pX,y:pY,width:pW,height:pH});if(directionChange){direction=1-direction}}return childrenArea}algorithmLowAspectRatio(directionChange,parent,children){const series=this,childrenArea=[],plot={x:parent.x,y:parent.y,parent:parent},direction=parent.direction,end=children.length-1,group=new Treemap_TreemapAlgorithmGroup(parent.height,parent.width,direction,plot);let pTot,i=0;for(const child of children){pTot=parent.width*parent.height*(child.val/parent.val);group.addElement(pTot);if(group.lP.nR>group.lP.lR){series.algorithmCalcPoints(directionChange,false,group,childrenArea,plot)}if(i===end){series.algorithmCalcPoints(directionChange,true,group,childrenArea,plot)}++i}return childrenArea}alignDataLabel(point,dataLabel,labelOptions){const style=labelOptions.style;if(style&&!TreemapSeries_defined(style.textOverflow)&&dataLabel.text&&dataLabel.getBBox().width>(dataLabel.text.textWidth||0)){dataLabel.css({textOverflow:"ellipsis",width:style.width+="px"})}ColumnSeries.prototype.alignDataLabel.apply(this,arguments);if(point.dataLabel){point.dataLabel.attr({zIndex:(point.node.zIndex||0)+1})}}calculateChildrenAreas(parent,area){const series=this,options=series.options,mapOptionsToLevel=series.mapOptionsToLevel,level=mapOptionsToLevel[parent.level+1],algorithm=TreemapSeries_pick(series[level&&level.layoutAlgorithm]&&level.layoutAlgorithm,options.layoutAlgorithm),alternate=options.alternateStartingDirection,children=parent.children.filter(n=>!n.ignore);let childrenValues=[];if(level&&level.layoutStartingDirection){area.direction=level.layoutStartingDirection==="vertical"?0:1}childrenValues=series[algorithm](area,children);let i=-1;for(const child of children){const values=childrenValues[++i];child.values=TreemapSeries_merge(values,{val:child.childrenTotal,direction:alternate?1-area.direction:area.direction});child.pointValues=TreemapSeries_merge(values,{x:values.x/series.axisRatio,y:axisMax-values.y-values.height,width:values.width/series.axisRatio});if(child.children.length){series.calculateChildrenAreas(child,child.values)}}}createList(e){const chart=this.chart,breadcrumbs=chart.breadcrumbs,list=[];if(breadcrumbs){let currentLevelNumber=0;list.push({level:currentLevelNumber,levelOptions:chart.series[0]});let node=e.target.nodeMap[e.newRootId];const extraNodes=[];while(node.parent||node.parent===""){extraNodes.push(node);node=e.target.nodeMap[node.parent]}for(const node of extraNodes.reverse()){list.push({level:++currentLevelNumber,levelOptions:node})}if(list.length<=1){list.length=0}}return list}drawDataLabels(){const series=this,mapOptionsToLevel=series.mapOptionsToLevel,points=series.points.filter(function(n){return n.node.visible});let options,level;for(const point of points){level=mapOptionsToLevel[point.node.level];options={style:{}};if(!point.node.isLeaf){options.enabled=false}if(level&&level.dataLabels){options=TreemapSeries_merge(options,level.dataLabels);series.hasDataLabels=()=>true}if(point.shapeArgs){const css={width:`${point.shapeArgs.width||0}px`,lineClamp:Math.floor((point.shapeArgs.height||0)/16)};TreemapSeries_extend(options.style,css);point.dataLabel?.css(css)}point.dlOptions=TreemapSeries_merge(options,point.options.dataLabels)}super.drawDataLabels()}drawPoints(points=this.points){const series=this,chart=series.chart,renderer=chart.renderer,styledMode=chart.styledMode,options=series.options,shadow=styledMode?{}:options.shadow,borderRadius=options.borderRadius,withinAnimationLimit=chart.pointCount<options.animationLimit,allowTraversingTree=options.allowTraversingTree;for(const point of points){const levelDynamic=point.node.levelDynamic,animatableAttribs={},attribs={},css={},groupKey="level-group-"+point.node.level,hasGraphic=!!point.graphic,shouldAnimate=withinAnimationLimit&&hasGraphic,shapeArgs=point.shapeArgs;if(point.shouldDraw()){point.isInside=true;if(borderRadius){attribs.r=borderRadius}TreemapSeries_merge(true,shouldAnimate?animatableAttribs:attribs,hasGraphic?shapeArgs:{},styledMode?{}:series.pointAttribs(point,point.selected?"select":void 0));if(series.colorAttribs&&styledMode){TreemapSeries_extend(css,series.colorAttribs(point))}if(!series[groupKey]){series[groupKey]=renderer.g(groupKey).attr({zIndex:1e3-(levelDynamic||0)}).add(series.group);series[groupKey].survive=true}}point.draw({animatableAttribs:animatableAttribs,attribs:attribs,css:css,group:series[groupKey],imageUrl:point.imageUrl,renderer:renderer,shadow:shadow,shapeArgs:shapeArgs,shapeType:point.shapeType});if(allowTraversingTree&&point.graphic){point.drillId=options.interactByLeaf?series.drillToByLeaf(point):series.drillToByGroup(point)}}}drillToByGroup(point){let drillId=false;if(!point.node.isLeaf&&point.node.level-this.nodeMap[this.rootNode].level===1){drillId=point.id}return drillId}drillToByLeaf(point){const{traverseToLeaf}=point.series.options;let drillId=false,nodeParent;if(point.node.parent!==this.rootNode&&point.node.isLeaf){if(traverseToLeaf){drillId=point.id}else{nodeParent=point.node;while(!drillId){if(typeof nodeParent.parent!=="undefined"){nodeParent=this.nodeMap[nodeParent.parent]}if(nodeParent.parent===this.rootNode){drillId=nodeParent.id}}}}return drillId}drillToNode(id,redraw){error(32,false,void 0,{"treemap.drillToNode":"use treemap.setRootNode"});this.setRootNode(id,redraw)}drillUp(){const series=this,node=series.nodeMap[series.rootNode];if(node&&TreemapSeries_isString(node.parent)){series.setRootNode(node.parent,true,{trigger:"traverseUpButton"})}}getExtremes(){const{dataMin,dataMax}=super.getExtremes(this.colorValueData);this.valueMin=dataMin;this.valueMax=dataMax;return super.getExtremes()}getListOfParents(data,existingIds){const arr=TreemapSeries_isArray(data)?data:[],ids=TreemapSeries_isArray(existingIds)?existingIds:[],listOfParents=arr.reduce(function(prev,curr,i){const parent=TreemapSeries_pick(curr.parent,"");if(typeof prev[parent]==="undefined"){prev[parent]=[]}prev[parent].push(i);return prev},{"":[]});for(const parent of Object.keys(listOfParents)){const children=listOfParents[parent];if(parent!==""&&ids.indexOf(parent)===-1){for(const child of children){listOfParents[""].push(child)}delete listOfParents[parent]}}return listOfParents}getTree(){const series=this,allIds=this.data.map(function(d){return d.id}),parentList=series.getListOfParents(this.data,allIds);series.nodeMap={};series.nodeList=[];return series.buildTree("",-1,0,parentList)}buildTree(id,index,level,list,parent){const series=this,children=[],point=series.points[index];let height=0,child;for(const i of list[id]||[]){child=series.buildTree(series.points[i].id,i,level+1,list,id);height=Math.max(child.height+1,height);children.push(child)}const node=(new series.NodeClass).init(id,index,children,height,level,series,parent);for(const child of children){child.parentNode=node}series.nodeMap[node.id]=node;series.nodeList.push(node);if(point){point.node=node;node.point=point}return node}hasData(){return!!this.dataTable.rowCount}init(chart,options){const series=this,breadcrumbsOptions=TreemapSeries_merge(options.drillUpButton,options.breadcrumbs),setOptionsEvent=TreemapSeries_addEvent(series,"setOptions",event=>{const options=event.userOptions;if(TreemapSeries_defined(options.allowDrillToNode)&&!TreemapSeries_defined(options.allowTraversingTree)){options.allowTraversingTree=options.allowDrillToNode;delete options.allowDrillToNode}if(TreemapSeries_defined(options.drillUpButton)&&!TreemapSeries_defined(options.traverseUpButton)){options.traverseUpButton=options.drillUpButton;delete options.drillUpButton}});super.init(chart,options);delete series.opacity;series.eventsToUnbind.push(setOptionsEvent);if(series.options.allowTraversingTree){series.eventsToUnbind.push(TreemapSeries_addEvent(series,"click",series.onClickDrillToNode));series.eventsToUnbind.push(TreemapSeries_addEvent(series,"setRootNode",function(e){const chart=series.chart;if(chart.breadcrumbs){chart.breadcrumbs.updateProperties(series.createList(e))}}));series.eventsToUnbind.push(TreemapSeries_addEvent(series,"update",function(e,redraw){const breadcrumbs=this.chart.breadcrumbs;if(breadcrumbs&&e.options.breadcrumbs){breadcrumbs.update(e.options.breadcrumbs)}}));series.eventsToUnbind.push(TreemapSeries_addEvent(series,"destroy",function destroyEvents(e){const chart=this.chart;if(chart.breadcrumbs&&!e.keepEventsForUpdate){chart.breadcrumbs.destroy();chart.breadcrumbs=void 0}}))}if(!chart.breadcrumbs){chart.breadcrumbs=new Breadcrumbs_Breadcrumbs(chart,breadcrumbsOptions)}series.eventsToUnbind.push(TreemapSeries_addEvent(chart.breadcrumbs,"up",function(e){const drillUpsNumber=this.level-e.newLevel;for(let i=0;i<drillUpsNumber;i++){series.drillUp()}}))}onClickDrillToNode(event){const series=this,point=event.point,drillId=point&&point.drillId;if(TreemapSeries_isString(drillId)){point.setState("");series.setRootNode(drillId,true,{trigger:"click"})}}pointAttribs(point,state){const series=this,mapOptionsToLevel=TreemapSeries_isObject(series.mapOptionsToLevel)?series.mapOptionsToLevel:{},level=point&&mapOptionsToLevel[point.node.level]||{},options=this.options,stateOptions=state&&options.states&&options.states[state]||{},className=point&&point.getClassName()||"",attr={stroke:point&&point.borderColor||level.borderColor||stateOptions.borderColor||options.borderColor,"stroke-width":TreemapSeries_pick(point&&point.borderWidth,level.borderWidth,stateOptions.borderWidth,options.borderWidth),dashstyle:point&&point.borderDashStyle||level.borderDashStyle||stateOptions.borderDashStyle||options.borderDashStyle,fill:point&&point.color||this.color};let opacity;if(className.indexOf("highcharts-above-level")!==-1){attr.fill="none";attr["stroke-width"]=0}else if(className.indexOf("highcharts-internal-node-interactive")!==-1){opacity=TreemapSeries_pick(stateOptions.opacity,options.opacity);attr.fill=color(attr.fill).setOpacity(opacity).get();attr.cursor="pointer"}else if(className.indexOf("highcharts-internal-node")!==-1){attr.fill="none"}else if(state){attr.fill=color(attr.fill).brighten(stateOptions.brightness).get()}return attr}setColorRecursive(node,parentColor,colorIndex,index,siblings){const series=this,chart=series&&series.chart,colors=chart&&chart.options&&chart.options.colors;if(node){const colorInfo=TreemapSeries_getColor(node,{colors:colors,index:index,mapOptionsToLevel:series.mapOptionsToLevel,parentColor:parentColor,parentColorIndex:colorIndex,series:series,siblings:siblings}),point=series.points[node.i];if(point){point.color=colorInfo.color;point.colorIndex=colorInfo.colorIndex}let i=-1;for(const child of node.children||[]){series.setColorRecursive(child,colorInfo.color,colorInfo.colorIndex,++i,node.children.length)}}}setPointValues(){const series=this;const{points,xAxis,yAxis}=series;const styledMode=series.chart.styledMode;const getStrokeWidth=point=>styledMode?0:series.pointAttribs(point)["stroke-width"]||0;for(const point of points){const{pointValues:values,visible}=point.node;if(values&&visible){const{height,width,x,y}=values;const strokeWidth=getStrokeWidth(point);const x1=crisp(xAxis.toPixels(x,true),strokeWidth,true);const x2=crisp(xAxis.toPixels(x+width,true),strokeWidth,true);const y1=crisp(yAxis.toPixels(y,true),strokeWidth,true);const y2=crisp(yAxis.toPixels(y+height,true),strokeWidth,true);const shapeArgs={x:Math.min(x1,x2),y:Math.min(y1,y2),width:Math.abs(x2-x1),height:Math.abs(y2-y1)};point.plotX=shapeArgs.x+shapeArgs.width/2;point.plotY=shapeArgs.y+shapeArgs.height/2;point.shapeArgs=shapeArgs}else{delete point.plotX;delete point.plotY}}}setRootNode(id,redraw,eventArguments){const series=this,eventArgs=TreemapSeries_extend({newRootId:id,previousRootId:series.rootNode,redraw:TreemapSeries_pick(redraw,true),series:series},eventArguments);const defaultFn=function(args){const series=args.series;series.idPreviousRoot=args.previousRootId;series.rootNode=args.newRootId;series.isDirty=true;if(args.redraw){series.chart.redraw()}};TreemapSeries_fireEvent(series,"setRootNode",eventArgs,defaultFn)}setState(state){this.options.inactiveOtherPoints=true;super.setState(state,false);this.options.inactiveOtherPoints=false}setTreeValues(tree){const series=this,options=series.options,idRoot=series.rootNode,mapIdToNode=series.nodeMap,nodeRoot=mapIdToNode[idRoot],levelIsConstant=typeof options.levelIsConstant==="boolean"?options.levelIsConstant:true,children=[],point=series.points[tree.i];let childrenTotal=0;for(let child of tree.children){child=series.setTreeValues(child);children.push(child);if(!child.ignore){childrenTotal+=child.val}}stableSort(children,(a,b)=>(a.sortIndex||0)-(b.sortIndex||0));const val=TreemapSeries_pick(point&&point.options.value,childrenTotal);if(point){point.value=val}TreemapSeries_extend(tree,{children:children,childrenTotal:childrenTotal,ignore:!(TreemapSeries_pick(point&&point.visible,true)&&val>0),isLeaf:tree.visible&&!childrenTotal,levelDynamic:tree.level-(levelIsConstant?0:nodeRoot.level),name:TreemapSeries_pick(point&&point.name,""),sortIndex:TreemapSeries_pick(point&&point.sortIndex,-val),val:val});return tree}sliceAndDice(parent,children){return this.algorithmFill(true,parent,children)}squarified(parent,children){return this.algorithmLowAspectRatio(true,parent,children)}strip(parent,children){return this.algorithmLowAspectRatio(false,parent,children)}stripes(parent,children){return this.algorithmFill(false,parent,children)}translate(){const series=this,options=series.options;let rootId=TreemapSeries_updateRootId(series),rootNode,pointValues,seriesArea,val;super.translate();const tree=series.tree=series.getTree();rootNode=series.nodeMap[rootId];if(rootId!==""&&!rootNode){series.setRootNode("",false);rootId=series.rootNode;rootNode=series.nodeMap[rootId]}series.mapOptionsToLevel=TreemapSeries_getLevelOptions({from:rootNode.level+1,levels:options.levels,to:tree.height,defaults:{levelIsConstant:series.options.levelIsConstant,colorByPoint:options.colorByPoint}});Treemap_TreemapUtilities.recursive(series.nodeMap[series.rootNode],node=>{const p=node.parent;let next=false;node.visible=true;if(p||p===""){next=series.nodeMap[p]}return next});Treemap_TreemapUtilities.recursive(series.nodeMap[series.rootNode].children,children=>{let next=false;for(const child of children){child.visible=true;if(child.children.length){next=(next||[]).concat(child.children)}}return next});series.setTreeValues(tree);series.axisRatio=series.xAxis.len/series.yAxis.len;series.nodeMap[""].pointValues=pointValues={x:0,y:0,width:axisMax,height:axisMax};series.nodeMap[""].values=seriesArea=TreemapSeries_merge(pointValues,{width:pointValues.width*series.axisRatio,direction:options.layoutStartingDirection==="vertical"?0:1,val:tree.val});series.calculateChildrenAreas(tree,seriesArea);if(!series.colorAxis&&!options.colorByPoint){series.setColorRecursive(series.tree)}if(options.allowTraversingTree){val=rootNode.pointValues;series.xAxis.setExtremes(val.x,val.x+val.width,false);series.yAxis.setExtremes(val.y,val.y+val.height,false);series.xAxis.setScale();series.yAxis.setScale()}series.setPointValues()}}TreemapSeries.defaultOptions=TreemapSeries_merge(ScatterSeries.defaultOptions,Treemap_TreemapSeriesDefaults);TreemapSeries_extend(TreemapSeries.prototype,{buildKDTree:noop,colorAttribs:Series_ColorMapComposition.seriesMembers.colorAttribs,colorKey:"colorValue",directTouch:true,getExtremesFromAll:true,getSymbol:noop,optionalAxis:"colorAxis",parallelArrays:["x","y","value","colorValue"],pointArrayMap:["value","colorValue"],pointClass:Treemap_TreemapPoint,NodeClass:Treemap_TreemapNode,trackerGroups:["group","dataLabelsGroup"],utils:Treemap_TreemapUtilities});Series_ColorMapComposition.compose(TreemapSeries);highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default().registerSeriesType("treemap",TreemapSeries);const Treemap_TreemapSeries=null&&TreemapSeries;var highcharts_Series_commonjs_highcharts_Series_commonjs2_highcharts_Series_root_Highcharts_Series_=__webpack_require__(820);var highcharts_Series_commonjs_highcharts_Series_commonjs2_highcharts_Series_root_Highcharts_Series_default=__webpack_require__.n(highcharts_Series_commonjs_highcharts_Series_commonjs2_highcharts_Series_root_Highcharts_Series_);const{deg2rad}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const{fireEvent:CenteredUtilities_fireEvent,isNumber:CenteredUtilities_isNumber,pick:CenteredUtilities_pick,relativeLength:CenteredUtilities_relativeLength}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();var CenteredUtilities;(function(CenteredUtilities){function getCenter(){const options=this.options,chart=this.chart,slicingRoom=2*(options.slicedOffset||0),plotWidth=chart.plotWidth-2*slicingRoom,plotHeight=chart.plotHeight-2*slicingRoom,centerOption=options.center,smallestSize=Math.min(plotWidth,plotHeight),thickness=options.thickness;let handleSlicingRoom,size=options.size,innerSize=options.innerSize||0,i,value;if(typeof size==="string"){size=parseFloat(size)}if(typeof innerSize==="string"){innerSize=parseFloat(innerSize)}const positions=[CenteredUtilities_pick(centerOption?.[0],"50%"),CenteredUtilities_pick(centerOption?.[1],"50%"),CenteredUtilities_pick(size&&size<0?void 0:options.size,"100%"),CenteredUtilities_pick(innerSize&&innerSize<0?void 0:options.innerSize||0,"0%")];if(chart.angular&&!(this instanceof highcharts_Series_commonjs_highcharts_Series_commonjs2_highcharts_Series_root_Highcharts_Series_default())){positions[3]=0}for(i=0;i<4;++i){value=positions[i];handleSlicingRoom=i<2||i===2&&/%$/.test(value);positions[i]=CenteredUtilities_relativeLength(value,[plotWidth,plotHeight,smallestSize,positions[2]][i])+(handleSlicingRoom?slicingRoom:0)}if(positions[3]>positions[2]){positions[3]=positions[2]}if(CenteredUtilities_isNumber(thickness)&&thickness*2<positions[2]&&thickness>0){positions[3]=positions[2]-thickness*2}CenteredUtilities_fireEvent(this,"afterGetCenter",{positions:positions});return positions}CenteredUtilities.getCenter=getCenter;function getStartAndEndRadians(start,end){const startAngle=CenteredUtilities_isNumber(start)?start:0,endAngle=CenteredUtilities_isNumber(end)&&end>startAngle&&end-startAngle<360?end:startAngle+360,correction=-90;return{start:deg2rad*(startAngle+correction),end:deg2rad*(endAngle+correction)}}CenteredUtilities.getStartAndEndRadians=getStartAndEndRadians})(CenteredUtilities||(CenteredUtilities={}));const Series_CenteredUtilities=CenteredUtilities;"";const{series:{prototype:{pointClass:Point}},seriesTypes:{treemap:{prototype:{pointClass:SunburstPoint_TreemapPoint}}}}=highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default();const{correctFloat:SunburstPoint_correctFloat,extend:SunburstPoint_extend,pInt}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();class SunburstPoint extends SunburstPoint_TreemapPoint{getDataLabelPath(label){const renderer=this.series.chart.renderer,shapeArgs=this.shapeExisting,r=shapeArgs.r+pInt(label.options?.distance||0);let start=shapeArgs.start,end=shapeArgs.end;const angle=start+(end-start)/2;let upperHalf=angle<0&&angle>-Math.PI||angle>Math.PI,moreThanHalf;if(start===-Math.PI/2&&SunburstPoint_correctFloat(end)===SunburstPoint_correctFloat(Math.PI*1.5)){start=-Math.PI+Math.PI/360;end=-Math.PI/360;upperHalf=true}if(end-start>Math.PI){upperHalf=false;moreThanHalf=true;if(end-start>2*Math.PI-.01){start+=.01;end-=.01}}if(this.dataLabelPath){this.dataLabelPath=this.dataLabelPath.destroy()}this.dataLabelPath=renderer.arc({open:true,longArc:moreThanHalf?1:0}).attr({start:upperHalf?start:end,end:upperHalf?end:start,clockwise:+upperHalf,x:shapeArgs.x,y:shapeArgs.y,r:(r+shapeArgs.innerR)/2}).add(renderer.defs);return this.dataLabelPath}isValid(){return true}}SunburstPoint_extend(SunburstPoint.prototype,{getClassName:Point.prototype.getClassName,haloPath:Point.prototype.haloPath,setState:Point.prototype.setState});const Sunburst_SunburstPoint=SunburstPoint;const{seriesTypes:{treemap:SunburstUtilities_TreemapSeries}}=highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default();const{isNumber:SunburstUtilities_isNumber,isObject:SunburstUtilities_isObject,merge:SunburstUtilities_merge}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();function calculateLevelSizes(levelOptions,params){const p=SunburstUtilities_isObject(params)?params:{};let result,totalWeight=0,diffRadius,levels,levelsNotIncluded,remainingSize,from,to;if(SunburstUtilities_isObject(levelOptions)){result=SunburstUtilities_merge({},levelOptions);from=SunburstUtilities_isNumber(p.from)?p.from:0;to=SunburstUtilities_isNumber(p.to)?p.to:0;levels=range(from,to);levelsNotIncluded=Object.keys(result).filter(key=>levels.indexOf(+key)===-1);diffRadius=remainingSize=SunburstUtilities_isNumber(p.diffRadius)?p.diffRadius:0;for(const level of levels){const options=result[level],unit=options.levelSize.unit,value=options.levelSize.value;if(unit==="weight"){totalWeight+=value}else if(unit==="percentage"){options.levelSize={unit:"pixels",value:value/100*diffRadius};remainingSize-=options.levelSize.value}else if(unit==="pixels"){remainingSize-=value}}for(const level of levels){const options=result[level];if(options.levelSize.unit==="weight"){const weight=options.levelSize.value;result[level].levelSize={unit:"pixels",value:weight/totalWeight*remainingSize}}}for(const level of levelsNotIncluded){result[level].levelSize={value:0,unit:"pixels"}}}return result}function getLevelFromAndTo({level,height}){const from=level>0?level:1;const to=level+height;return{from:from,to:to}}function range(from,to){const result=[];if(SunburstUtilities_isNumber(from)&&SunburstUtilities_isNumber(to)&&from<=to){for(let i=from;i<=to;i++){result.push(i)}}return result}const SunburstUtilities={calculateLevelSizes:calculateLevelSizes,getLevelFromAndTo:getLevelFromAndTo,range:range,recursive:SunburstUtilities_TreemapSeries.prototype.utils.recursive};const Sunburst_SunburstUtilities=SunburstUtilities;class SunburstNode extends Treemap_TreemapNode{}const Sunburst_SunburstNode=SunburstNode;const SunburstSeriesDefaults={center:["50%","50%"],clip:false,colorByPoint:false,opacity:1,dataLabels:{allowOverlap:true,defer:true,rotationMode:"circular",style:{textOverflow:"ellipsis"}},rootId:void 0,levelIsConstant:true,levelSize:{value:1,unit:"weight"},slicedOffset:10};"";const Sunburst_SunburstSeriesDefaults=SunburstSeriesDefaults;const{deg2rad:TextPath_deg2rad}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const{addEvent:TextPath_addEvent,merge:TextPath_merge,uniqueKey,defined:TextPath_defined,extend:TextPath_extend}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();function setTextPath(path,textPathOptions){textPathOptions=TextPath_merge(true,{enabled:true,attributes:{dy:-5,startOffset:"50%",textAnchor:"middle"}},textPathOptions);const url=this.renderer.url,textWrapper=this.text||this,textPath=textWrapper.textPath,{attributes,enabled}=textPathOptions;path=path||textPath&&textPath.path;if(textPath){textPath.undo()}if(path&&enabled){const undo=TextPath_addEvent(textWrapper,"afterModifyTree",e=>{if(path&&enabled){let textPathId=path.attr("id");if(!textPathId){path.attr("id",textPathId=uniqueKey())}const textAttribs={x:0,y:0};if(TextPath_defined(attributes.dx)){textAttribs.dx=attributes.dx;delete attributes.dx}if(TextPath_defined(attributes.dy)){textAttribs.dy=attributes.dy;delete attributes.dy}textWrapper.attr(textAttribs);this.attr({transform:""});if(this.box){this.box=this.box.destroy()}const children=e.nodes.slice(0);e.nodes.length=0;e.nodes[0]={tagName:"textPath",attributes:TextPath_extend(attributes,{"text-anchor":attributes.textAnchor,href:`${url}#${textPathId}`}),children:children}}});textWrapper.textPath={path:path,undo:undo}}else{textWrapper.attr({dx:0,dy:0});delete textWrapper.textPath}if(this.added){textWrapper.textCache="";this.renderer.buildText(textWrapper)}return this}function setPolygon(event){const bBox=event.bBox,tp=this.element?.querySelector("textPath");if(tp){const polygon=[],{b,h}=this.renderer.fontMetrics(this.element),descender=h-b,lineCleanerRegex=new RegExp("(<tspan>|"+'<tspan(?!\\sclass="highcharts-br")[^>]*>|'+"<\\/tspan>)","g"),lines=tp.innerHTML.replace(lineCleanerRegex,"").split(/<tspan class="highcharts-br"[^>]*>/),numOfLines=lines.length;const appendTopAndBottom=(charIndex,positionOfChar)=>{const{x,y}=positionOfChar,rotation=(tp.getRotationOfChar(charIndex)-90)*TextPath_deg2rad,cosRot=Math.cos(rotation),sinRot=Math.sin(rotation);return[[x-descender*cosRot,y-descender*sinRot],[x+b*cosRot,y+b*sinRot]]};for(let i=0,lineIndex=0;lineIndex<numOfLines;lineIndex++){const line=lines[lineIndex],lineLen=line.length;for(let lineCharIndex=0;lineCharIndex<lineLen;lineCharIndex+=5){try{const srcCharIndex=i+lineCharIndex+lineIndex,[lower,upper]=appendTopAndBottom(srcCharIndex,tp.getStartPositionOfChar(srcCharIndex));if(lineCharIndex===0){polygon.push(upper);polygon.push(lower)}else{if(lineIndex===0){polygon.unshift(upper)}if(lineIndex===numOfLines-1){polygon.push(lower)}}}catch(e){break}}i+=lineLen-1;try{const srcCharIndex=i+lineIndex,charPos=tp.getEndPositionOfChar(srcCharIndex),[lower,upper]=appendTopAndBottom(srcCharIndex,charPos);polygon.unshift(upper);polygon.unshift(lower)}catch(e){break}}if(polygon.length){polygon.push(polygon[0].slice())}bBox.polygon=polygon}return bBox}function drawTextPath(event){const labelOptions=event.labelOptions,point=event.point,textPathOptions=labelOptions[point.formatPrefix+"TextPath"]||labelOptions.textPath;if(textPathOptions&&!labelOptions.useHTML){this.setTextPath(point.getDataLabelPath?.(this)||point.graphic,textPathOptions);if(point.dataLabelPath&&!textPathOptions.enabled){point.dataLabelPath=point.dataLabelPath.destroy()}}}function compose(SVGElementClass){TextPath_addEvent(SVGElementClass,"afterGetBBox",setPolygon);TextPath_addEvent(SVGElementClass,"beforeAddingDataLabel",drawTextPath);const svgElementProto=SVGElementClass.prototype;if(!svgElementProto.setTextPath){svgElementProto.setTextPath=setTextPath}}const TextPath={compose:compose};const Extensions_TextPath=TextPath;const{getCenter,getStartAndEndRadians}=Series_CenteredUtilities;const{noop:SunburstSeries_noop}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();const{column:SunburstSeries_ColumnSeries,treemap:SunburstSeries_TreemapSeries}=highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default().seriesTypes;const{getColor:SunburstSeries_getColor,getLevelOptions:SunburstSeries_getLevelOptions,setTreeValues:SunburstSeries_setTreeValues,updateRootId:SunburstSeries_updateRootId}=Series_TreeUtilities;const{defined:SunburstSeries_defined,error:SunburstSeries_error,extend:SunburstSeries_extend,fireEvent:SunburstSeries_fireEvent,isNumber:SunburstSeries_isNumber,isObject:SunburstSeries_isObject,isString:SunburstSeries_isString,merge:SunburstSeries_merge,splat}=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();Extensions_TextPath.compose(highcharts_SVGElement_commonjs_highcharts_SVGElement_commonjs2_highcharts_SVGElement_root_Highcharts_SVGElement_default());const rad2deg=180/Math.PI;function isBoolean(x){return typeof x==="boolean"}const getEndPoint=function getEndPoint(x,y,angle,distance){return{x:x+Math.cos(angle)*distance,y:y+Math.sin(angle)*distance}};function getDlOptions(params){const point=params.point,shape=SunburstSeries_isObject(params.shapeArgs)?params.shapeArgs:{},optionsPoint=SunburstSeries_isObject(params.optionsPoint)?params.optionsPoint.dataLabels:{},optionsLevel=splat(SunburstSeries_isObject(params.level)?params.level.dataLabels:{})[0],options=SunburstSeries_merge({style:{}},optionsLevel,optionsPoint),{innerArcLength=0,outerArcLength=0}=point;let rotationRad,rotation,rotationMode=options.rotationMode;if(!SunburstSeries_isNumber(options.rotation)){if(rotationMode==="auto"||rotationMode==="circular"){if(options.useHTML&&rotationMode==="circular"){rotationMode="auto"}if(innerArcLength<1&&outerArcLength>shape.radius){rotationRad=0;if(point.dataLabelPath&&rotationMode==="circular"){options.textPath={enabled:true}}}else if(innerArcLength>1&&outerArcLength>1.5*shape.radius){if(rotationMode==="circular"){options.textPath={enabled:true,attributes:{dy:5}}}else{rotationMode="parallel"}}else{if(point.dataLabel?.textPath&&rotationMode==="circular"){options.textPath={enabled:false}}rotationMode="perpendicular"}}if(rotationMode!=="auto"&&rotationMode!=="circular"){if(point.dataLabel&&point.dataLabel.textPath){options.textPath={enabled:false}}rotationRad=shape.end-(shape.end-shape.start)/2}if(rotationMode==="parallel"){options.style.width=Math.min(shape.radius*2.5,(outerArcLength+innerArcLength)/2)}else{if(!SunburstSeries_defined(options.style.width)&&shape.radius){options.style.width=point.node.level===1?2*shape.radius:shape.radius}}if(rotationMode==="perpendicular"){if(outerArcLength<16){options.style.width=1}else{options.style.lineClamp=Math.floor(innerArcLength/16)||1}}options.style.width=Math.max(options.style.width-2*(options.padding||0),1);rotation=rotationRad*rad2deg%180;if(rotationMode==="parallel"){rotation-=90}if(rotation>90){rotation-=180}else if(rotation<-90){rotation+=180}options.rotation=rotation}if(options.textPath){if(point.shapeExisting.innerR===0&&options.textPath.enabled){options.rotation=0;options.textPath.enabled=false;options.style.width=Math.max(point.shapeExisting.r*2-2*(options.padding||0),1)}else if(point.dlOptions&&point.dlOptions.textPath&&!point.dlOptions.textPath.enabled&&rotationMode==="circular"){options.textPath.enabled=true}if(options.textPath.enabled){options.rotation=0;options.style.width=Math.max((point.outerArcLength+point.innerArcLength)/2-2*(options.padding||0),1);options.style.whiteSpace="nowrap"}}return options}function getAnimation(shape,params){const point=params.point,radians=params.radians,innerR=params.innerR,idRoot=params.idRoot,idPreviousRoot=params.idPreviousRoot,shapeExisting=params.shapeExisting,shapeRoot=params.shapeRoot,shapePreviousRoot=params.shapePreviousRoot,visible=params.visible;let from={},to={end:shape.end,start:shape.start,innerR:shape.innerR,r:shape.r,x:shape.x,y:shape.y};if(visible){if(!point.graphic&&shapePreviousRoot){if(idRoot===point.id){from={start:radians.start,end:radians.end}}else{from=shapePreviousRoot.end<=shape.start?{start:radians.end,end:radians.end}:{start:radians.start,end:radians.start}}from.innerR=from.r=innerR}}else{if(point.graphic){if(idPreviousRoot===point.id){to={innerR:innerR,r:innerR}}else if(shapeRoot){to=shapeRoot.end<=shapeExisting.start?{innerR:innerR,r:innerR,start:radians.end,end:radians.end}:{innerR:innerR,r:innerR,start:radians.start,end:radians.start}}}}return{from:from,to:to}}function getDrillId(point,idRoot,mapIdToNode){const node=point.node;let drillId,nodeRoot;if(!node.isLeaf){if(idRoot===point.id){nodeRoot=mapIdToNode[idRoot];drillId=nodeRoot.parent}else{drillId=point.id}}return drillId}function cbSetTreeValuesBefore(node,options){const mapIdToNode=options.mapIdToNode,parent=node.parent,nodeParent=parent?mapIdToNode[parent]:void 0,series=options.series,chart=series.chart,points=series.points,point=points[node.i],colors=series.options.colors||chart&&chart.options.colors,colorInfo=SunburstSeries_getColor(node,{colors:colors,colorIndex:series.colorIndex,index:options.index,mapOptionsToLevel:options.mapOptionsToLevel,parentColor:nodeParent&&nodeParent.color,parentColorIndex:nodeParent&&nodeParent.colorIndex,series:options.series,siblings:options.siblings});node.color=colorInfo.color;node.colorIndex=colorInfo.colorIndex;if(point){point.color=node.color;point.colorIndex=node.colorIndex;node.sliced=node.id!==options.idRoot?point.sliced:false}return node}class SunburstSeries extends SunburstSeries_TreemapSeries{alignDataLabel(point,dataLabel,labelOptions){if(labelOptions.textPath&&labelOptions.textPath.enabled){return}return super.alignDataLabel.apply(this,arguments)}animate(init){const chart=this.chart,center=[chart.plotWidth/2,chart.plotHeight/2],plotLeft=chart.plotLeft,plotTop=chart.plotTop,group=this.group;let attribs;if(init){attribs={translateX:center[0]+plotLeft,translateY:center[1]+plotTop,scaleX:.001,scaleY:.001,rotation:10,opacity:.01};group.attr(attribs)}else{attribs={translateX:plotLeft,translateY:plotTop,scaleX:1,scaleY:1,rotation:0,opacity:1};group.animate(attribs,this.options.animation)}}drawPoints(){const series=this,mapOptionsToLevel=series.mapOptionsToLevel,shapeRoot=series.shapeRoot,group=series.group,hasRendered=series.hasRendered,idRoot=series.rootNode,idPreviousRoot=series.idPreviousRoot,nodeMap=series.nodeMap,nodePreviousRoot=nodeMap[idPreviousRoot],shapePreviousRoot=nodePreviousRoot&&nodePreviousRoot.shapeArgs,points=series.points,radians=series.startAndEndRadians,chart=series.chart,optionsChart=chart&&chart.options&&chart.options.chart||{},animation=isBoolean(optionsChart.animation)?optionsChart.animation:true,positions=series.center,center={x:positions[0],y:positions[1]},innerR=positions[3]/2,renderer=series.chart.renderer,hackDataLabelAnimation=!!(animation&&hasRendered&&idRoot!==idPreviousRoot&&series.dataLabelsGroup);let animateLabels,animateLabelsCalled=false,addedHack=false;if(hackDataLabelAnimation){series.dataLabelsGroup.attr({opacity:0});animateLabels=function(){const s=series;animateLabelsCalled=true;if(s.dataLabelsGroup){s.dataLabelsGroup.animate({opacity:1,visibility:"inherit"})}}}for(const point of points){const node=point.node,level=mapOptionsToLevel[node.level],shapeExisting=point.shapeExisting||{},shape=node.shapeArgs||{},visible=!!(node.visible&&node.shapeArgs);let animationInfo,onComplete;shape.borderRadius=series.options.borderRadius;if(hasRendered&&animation){animationInfo=getAnimation(shape,{center:center,point:point,radians:radians,innerR:innerR,idRoot:idRoot,idPreviousRoot:idPreviousRoot,shapeExisting:shapeExisting,shapeRoot:shapeRoot,shapePreviousRoot:shapePreviousRoot,visible:visible})}else{animationInfo={to:shape,from:{}}}SunburstSeries_extend(point,{shapeExisting:shape,tooltipPos:[shape.plotX,shape.plotY],drillId:getDrillId(point,idRoot,nodeMap),name:""+(point.name||point.id||point.index),plotX:shape.plotX,plotY:shape.plotY,value:node.val,isInside:visible,isNull:!visible});point.dlOptions=getDlOptions({point:point,level:level,optionsPoint:point.options,shapeArgs:shape});if(!addedHack&&visible){addedHack=true;onComplete=animateLabels}point.draw({animatableAttribs:animationInfo.to,attribs:SunburstSeries_extend(animationInfo.from,!chart.styledMode&&series.pointAttribs(point,point.selected&&"select")),onComplete:onComplete,group:group,renderer:renderer,shapeType:"arc",shapeArgs:shape})}if(hackDataLabelAnimation&&addedHack){series.hasRendered=false;series.options.dataLabels.defer=true;SunburstSeries_ColumnSeries.prototype.drawDataLabels.call(series);series.hasRendered=true;if(animateLabelsCalled){animateLabels()}}else{SunburstSeries_ColumnSeries.prototype.drawDataLabels.call(series)}series.idPreviousRoot=idRoot}layoutAlgorithm(parent,children,options){let startAngle=parent.start;const range=parent.end-startAngle,total=parent.val,x=parent.x,y=parent.y,radius=options&&SunburstSeries_isObject(options.levelSize)&&SunburstSeries_isNumber(options.levelSize.value)?options.levelSize.value:0,innerRadius=parent.r,outerRadius=innerRadius+radius,slicedOffset=options&&SunburstSeries_isNumber(options.slicedOffset)?options.slicedOffset:0;return(children||[]).reduce((arr,child)=>{const percentage=1/total*child.val,radians=percentage*range,radiansCenter=startAngle+radians/2,offsetPosition=getEndPoint(x,y,radiansCenter,slicedOffset),values={x:child.sliced?offsetPosition.x:x,y:child.sliced?offsetPosition.y:y,innerR:innerRadius,r:outerRadius,radius:radius,start:startAngle,end:startAngle+radians};arr.push(values);startAngle=values.end;return arr},[])}setRootNode(id,redraw,eventArguments){const series=this;if(series.nodeMap[id].level===1&&series.nodeList.filter(node=>node.level===1).length===1){if(series.idPreviousRoot===""){return}id=""}super.setRootNode(id,redraw,eventArguments)}setShapeArgs(parent,parentValues,mapOptionsToLevel){const level=parent.level+1,options=mapOptionsToLevel[level],children=parent.children.filter(function(n){return n.visible}),twoPi=6.28;let childrenValues=[];childrenValues=this.layoutAlgorithm(parentValues,children,options);let i=-1;for(const child of children){const values=childrenValues[++i],angle=values.start+(values.end-values.start)/2,radius=values.innerR+(values.r-values.innerR)/2,radians=values.end-values.start,isCircle=values.innerR===0&&radians>twoPi,center=isCircle?{x:values.x,y:values.y}:getEndPoint(values.x,values.y,angle,radius),val=child.val?child.childrenTotal>child.val?child.childrenTotal:child.val:child.childrenTotal;if(this.points[child.i]){this.points[child.i].innerArcLength=radians*values.innerR;this.points[child.i].outerArcLength=radians*values.r}child.shapeArgs=SunburstSeries_merge(values,{plotX:center.x,plotY:center.y});child.values=SunburstSeries_merge(values,{val:val});if(child.children.length){this.setShapeArgs(child,child.values,mapOptionsToLevel)}}}translate(){const series=this,options=series.options,positions=series.center=series.getCenter(),radians=series.startAndEndRadians=getStartAndEndRadians(options.startAngle,options.endAngle),innerRadius=positions[3]/2,outerRadius=positions[2]/2,diffRadius=outerRadius-innerRadius,rootId=SunburstSeries_updateRootId(series);let mapIdToNode=series.nodeMap,mapOptionsToLevel,nodeRoot=mapIdToNode&&mapIdToNode[rootId],nodeIds={};series.shapeRoot=nodeRoot&&nodeRoot.shapeArgs;series.generatePoints();SunburstSeries_fireEvent(series,"afterTranslate");const tree=series.tree=series.getTree();mapIdToNode=series.nodeMap;nodeRoot=mapIdToNode[rootId];const idTop=SunburstSeries_isString(nodeRoot.parent)?nodeRoot.parent:"",nodeTop=mapIdToNode[idTop],{from,to}=Sunburst_SunburstUtilities.getLevelFromAndTo(nodeRoot);mapOptionsToLevel=SunburstSeries_getLevelOptions({from:from,levels:series.options.levels,to:to,defaults:{colorByPoint:options.colorByPoint,dataLabels:options.dataLabels,levelIsConstant:options.levelIsConstant,levelSize:options.levelSize,slicedOffset:options.slicedOffset}});mapOptionsToLevel=Sunburst_SunburstUtilities.calculateLevelSizes(mapOptionsToLevel,{diffRadius:diffRadius,from:from,to:to});SunburstSeries_setTreeValues(tree,{before:cbSetTreeValuesBefore,idRoot:rootId,levelIsConstant:options.levelIsConstant,mapOptionsToLevel:mapOptionsToLevel,mapIdToNode:mapIdToNode,points:series.points,series:series});const values=mapIdToNode[""].shapeArgs={end:radians.end,r:innerRadius,start:radians.start,val:nodeRoot.val,x:positions[0],y:positions[1]};this.setShapeArgs(nodeTop,values,mapOptionsToLevel);series.mapOptionsToLevel=mapOptionsToLevel;for(const point of series.points){if(nodeIds[point.id]){SunburstSeries_error(31,false,series.chart)}nodeIds[point.id]=true}nodeIds={}}}SunburstSeries.defaultOptions=SunburstSeries_merge(SunburstSeries_TreemapSeries.defaultOptions,Sunburst_SunburstSeriesDefaults);SunburstSeries_extend(SunburstSeries.prototype,{axisTypes:[],drawDataLabels:SunburstSeries_noop,getCenter:getCenter,isCartesian:false,onPointSupported:true,pointAttribs:SunburstSeries_ColumnSeries.prototype.pointAttribs,pointClass:Sunburst_SunburstPoint,NodeClass:Sunburst_SunburstNode,utils:Sunburst_SunburstUtilities});highcharts_SeriesRegistry_commonjs_highcharts_SeriesRegistry_commonjs2_highcharts_SeriesRegistry_root_Highcharts_SeriesRegistry_default().registerSeriesType("sunburst",SunburstSeries);const Sunburst_SunburstSeries=null&&SunburstSeries;const G=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();G.Breadcrumbs=G.Breadcrumbs||Breadcrumbs_Breadcrumbs;G.Breadcrumbs.compose(G.Chart,G.defaultOptions);const sunburst_src=highcharts_commonjs_highcharts_commonjs2_highcharts_root_Highcharts_default();__webpack_exports__=__webpack_exports__["default"];return __webpack_exports__})()});