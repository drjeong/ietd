export default class EventEmitter{constructor(){this.events={}}_getHandlersByEventName(eventName){if(typeof this.events[eventName]==="undefined"){this.events[eventName]=[]}return this.events[eventName]}on(eventName,eventHandler){const currentHandlers=this._getHandlersByEventName(eventName);if(!currentHandlers.includes(eventHandler)){currentHandlers.push(eventHandler)}}once(eventName,eventHandler){const onceFn=(...args)=>{this.removeListener(eventName,onceFn);eventHandler.apply(this,args)};this.on(eventName,onceFn)}emit(eventName,...args){this._getHandlersByEventName(eventName).forEach(eventHandler=>{try{eventHandler.apply(this,args)}catch(error){console.error(error)}})}removeListener(eventName,eventHandler){const currentHandlers=this._getHandlersByEventName(eventName);const index=currentHandlers.indexOf(eventHandler);if(index>-1){currentHandlers.splice(index,1)}}removeAllListeners(eventName){if(this.events[eventName]!==undefined){this.events[eventName].length=0}}reset(){this.events={}}}