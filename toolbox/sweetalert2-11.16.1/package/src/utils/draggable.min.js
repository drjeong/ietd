import*as dom from"./dom/index.js";let dragging=false;let mousedownX=0;let mousedownY=0;let initialX=0;let initialY=0;export const addDraggableListeners=popup=>{popup.addEventListener("mousedown",down);document.body.addEventListener("mousemove",move);popup.addEventListener("mouseup",up);popup.addEventListener("touchstart",down);document.body.addEventListener("touchmove",move);popup.addEventListener("touchend",up)};export const removeDraggableListeners=popup=>{popup.removeEventListener("mousedown",down);document.body.removeEventListener("mousemove",move);popup.removeEventListener("mouseup",up);popup.removeEventListener("touchstart",down);document.body.removeEventListener("touchmove",move);popup.removeEventListener("touchend",up)};const down=event=>{const popup=dom.getPopup();if(event.target===popup||dom.getIcon().contains(event.target)){dragging=true;const clientXY=getClientXY(event);mousedownX=clientXY.clientX;mousedownY=clientXY.clientY;initialX=parseInt(popup.style.insetInlineStart)||0;initialY=parseInt(popup.style.insetBlockStart)||0;dom.addClass(popup,"swal2-dragging")}};const move=event=>{const popup=dom.getPopup();if(dragging){let{clientX,clientY}=getClientXY(event);popup.style.insetInlineStart=`${initialX+(clientX-mousedownX)}px`;popup.style.insetBlockStart=`${initialY+(clientY-mousedownY)}px`}};const up=()=>{const popup=dom.getPopup();dragging=false;dom.removeClass(popup,"swal2-dragging")};const getClientXY=event=>{let clientX=0,clientY=0;if(event.type.startsWith("mouse")){clientX=event.clientX;clientY=event.clientY}else if(event.type.startsWith("touch")){clientX=event.touches[0].clientX;clientY=event.touches[0].clientY}return{clientX:clientX,clientY:clientY}};