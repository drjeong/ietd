import{swalClasses}from"../classes.js";import{hasClass,isVisible}from"./domUtils.js";export const getContainer=()=>document.body.querySelector(`.${swalClasses.container}`);export const elementBySelector=selectorString=>{const container=getContainer();return container?container.querySelector(selectorString):null};const elementByClass=className=>{return elementBySelector(`.${className}`)};export const getPopup=()=>elementByClass(swalClasses.popup);export const getIcon=()=>elementByClass(swalClasses.icon);export const getIconContent=()=>elementByClass(swalClasses["icon-content"]);export const getTitle=()=>elementByClass(swalClasses.title);export const getHtmlContainer=()=>elementByClass(swalClasses["html-container"]);export const getImage=()=>elementByClass(swalClasses.image);export const getProgressSteps=()=>elementByClass(swalClasses["progress-steps"]);export const getValidationMessage=()=>elementByClass(swalClasses["validation-message"]);export const getConfirmButton=()=>elementBySelector(`.${swalClasses.actions} .${swalClasses.confirm}`);export const getCancelButton=()=>elementBySelector(`.${swalClasses.actions} .${swalClasses.cancel}`);export const getDenyButton=()=>elementBySelector(`.${swalClasses.actions} .${swalClasses.deny}`);export const getInputLabel=()=>elementByClass(swalClasses["input-label"]);export const getLoader=()=>elementBySelector(`.${swalClasses.loader}`);export const getActions=()=>elementByClass(swalClasses.actions);export const getFooter=()=>elementByClass(swalClasses.footer);export const getTimerProgressBar=()=>elementByClass(swalClasses["timer-progress-bar"]);export const getCloseButton=()=>elementByClass(swalClasses.close);const focusable=`
  a[href],
  area[href],
  input:not([disabled]),
  select:not([disabled]),
  textarea:not([disabled]),
  button:not([disabled]),
  iframe,
  object,
  embed,
  [tabindex="0"],
  [contenteditable],
  audio[controls],
  video[controls],
  summary
`;export const getFocusableElements=()=>{const popup=getPopup();if(!popup){return[]}const focusableElementsWithTabindex=popup.querySelectorAll('[tabindex]:not([tabindex="-1"]):not([tabindex="0"])');const focusableElementsWithTabindexSorted=Array.from(focusableElementsWithTabindex).sort((a,b)=>{const tabindexA=parseInt(a.getAttribute("tabindex")||"0");const tabindexB=parseInt(b.getAttribute("tabindex")||"0");if(tabindexA>tabindexB){return 1}else if(tabindexA<tabindexB){return-1}return 0});const otherFocusableElements=popup.querySelectorAll(focusable);const otherFocusableElementsFiltered=Array.from(otherFocusableElements).filter(el=>el.getAttribute("tabindex")!=="-1");return[...new Set(focusableElementsWithTabindexSorted.concat(otherFocusableElementsFiltered))].filter(el=>isVisible(el))};export const isModal=()=>{return hasClass(document.body,swalClasses.shown)&&!hasClass(document.body,swalClasses["toast-shown"])&&!hasClass(document.body,swalClasses["no-backdrop"])};export const isToast=()=>{const popup=getPopup();if(!popup){return false}return hasClass(popup,swalClasses.toast)};export const isLoading=()=>{const popup=getPopup();if(!popup){return false}return popup.hasAttribute("data-loading")};